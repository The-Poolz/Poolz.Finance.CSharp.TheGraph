// <auto-generated> This file has been auto generated. </auto-generated>

using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
#if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
#endif

namespace Poolz.Finance.CSharp.TheGraph
{
    #region base classes
    public struct GraphQlFieldMetadata
    {
        public string Name { get; set; }
        public string DefaultAlias { get; set; }
        public bool IsComplex { get; set; }
        public bool RequiresParameters { get; set; }
        public global::System.Type QueryBuilderType { get; set; }
    }
    
    public enum Formatting
    {
        None,
        Indented
    }
    
    public class GraphQlObjectTypeAttribute : global::System.Attribute
    {
        public string TypeName { get; }
    
        public GraphQlObjectTypeAttribute(string typeName) => TypeName = typeName;
    }
    
    #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
    public class QueryBuilderParameterConverter<T> : global::Newtonsoft.Json.JsonConverter
    {
        public override object ReadJson(JsonReader reader, global::System.Type objectType, object existingValue, JsonSerializer serializer)
        {
            switch (reader.TokenType)
            {
                case JsonToken.Null:
                    return null;
    
                default:
                    return (QueryBuilderParameter<T>)(T)serializer.Deserialize(reader, typeof(T));
            }
        }
    
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            if (value == null)
                writer.WriteNull();
            else
                serializer.Serialize(writer, ((QueryBuilderParameter<T>)value).Value, typeof(T));
        }
    
        public override bool CanConvert(global::System.Type objectType) => objectType.IsSubclassOf(typeof(QueryBuilderParameter));
    }
    
    public class GraphQlInterfaceJsonConverter : global::Newtonsoft.Json.JsonConverter
    {
        private const string FieldNameType = "__typename";
    
        private static readonly Dictionary<string, global::System.Type> InterfaceTypeMapping =
            typeof(GraphQlInterfaceJsonConverter).Assembly.GetTypes()
                .Select(t => new { Type = t, Attribute = t.GetCustomAttribute<GraphQlObjectTypeAttribute>() })
                .Where(x => x.Attribute != null && x.Type.Namespace == typeof(GraphQlInterfaceJsonConverter).Namespace)
                .ToDictionary(x => x.Attribute.TypeName, x => x.Type);
    
        public override bool CanConvert(global::System.Type objectType) => objectType.IsInterface || objectType.IsArray;
    
        public override object ReadJson(JsonReader reader, global::System.Type objectType, object existingValue, JsonSerializer serializer)
        {
            while (reader.TokenType == JsonToken.Comment)
                reader.Read();
    
            switch (reader.TokenType)
            {
                case JsonToken.Null:
                    return null;
    
                case JsonToken.StartObject:
                    var jObject = JObject.Load(reader);
                    if (!jObject.TryGetValue(FieldNameType, out var token) || token.Type != JTokenType.String)
                        throw CreateJsonReaderException(reader, $"\"{GetType().FullName}\" requires JSON object to contain \"{FieldNameType}\" field with type name");
    
                    var typeName = token.Value<string>();
                    if (!InterfaceTypeMapping.TryGetValue(typeName, out var type))
                        throw CreateJsonReaderException(reader, $"type \"{typeName}\" not found");
    
                    using (reader = CloneReader(jObject, reader))
                        return serializer.Deserialize(reader, type);
    
                case JsonToken.StartArray:
                    var elementType = GetElementType(objectType);
                    if (elementType == null)
                        throw CreateJsonReaderException(reader, $"array element type could not be resolved for type \"{objectType.FullName}\"");
    
                    return ReadArray(reader, objectType, elementType, serializer);
    
                default:
                    throw CreateJsonReaderException(reader, $"unrecognized token: {reader.TokenType}");
            }
        }
    
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) => serializer.Serialize(writer, value);
    
        private static JsonReader CloneReader(JToken jToken, JsonReader reader)
        {
            var jObjectReader = jToken.CreateReader();
            jObjectReader.Culture = reader.Culture;
            jObjectReader.CloseInput = reader.CloseInput;
            jObjectReader.SupportMultipleContent = reader.SupportMultipleContent;
            jObjectReader.DateTimeZoneHandling = reader.DateTimeZoneHandling;
            jObjectReader.FloatParseHandling = reader.FloatParseHandling;
            jObjectReader.DateFormatString = reader.DateFormatString;
            jObjectReader.DateParseHandling = reader.DateParseHandling;
            return jObjectReader;
        }
    
        private static JsonReaderException CreateJsonReaderException(JsonReader reader, string message)
        {
            if (reader is IJsonLineInfo lineInfo && lineInfo.HasLineInfo())
                return new JsonReaderException(message, reader.Path, lineInfo.LineNumber, lineInfo.LinePosition, null);
    
            return new JsonReaderException(message);
        }
    
        private static global::System.Type GetElementType(global::System.Type arrayOrGenericContainer) =>
            arrayOrGenericContainer.IsArray ? arrayOrGenericContainer.GetElementType() : arrayOrGenericContainer.GenericTypeArguments.FirstOrDefault();
    
        private IList ReadArray(JsonReader reader, global::System.Type targetType, global::System.Type elementType, JsonSerializer serializer)
        {
            var list = CreateCompatibleList(targetType, elementType);
            while (reader.Read() && reader.TokenType != JsonToken.EndArray)
                list.Add(ReadJson(reader, elementType, null, serializer));
    
            if (!targetType.IsArray)
                return list;
    
            var array = Array.CreateInstance(elementType, list.Count);
            list.CopyTo(array, 0);
            return array;
        }
    
        private static IList CreateCompatibleList(global::System.Type targetContainerType, global::System.Type elementType) =>
            (IList)Activator.CreateInstance(targetContainerType.IsArray || targetContainerType.IsAbstract ? typeof(List<>).MakeGenericType(elementType) : targetContainerType);
    }
    #endif
    
    internal static class GraphQlQueryHelper
    {
        private static readonly Regex RegexGraphQlIdentifier = new Regex(@"^[_A-Za-z][_0-9A-Za-z]*$", RegexOptions.Compiled);
        private static readonly Regex RegexEscapeGraphQlString = new Regex(@"[\\\""/\b\f\n\r\t]", RegexOptions.Compiled);
    
        public static string GetIndentation(int level, byte indentationSize)
        {
            return new String(' ', level * indentationSize);
        }
    
        public static string EscapeGraphQlStringValue(string value)
        {
            return RegexEscapeGraphQlString.Replace(value, m => @$"\{GetEscapeSequence(m.Value)}");
        }
    
        private static string GetEscapeSequence(string input)
        {
            switch (input)
            {
                case "\\":
                    return "\\";
                case "\"":
                    return "\"";
                case "/":
                    return "/";
                case "\b":
                    return "b";
                case "\f":
                    return "f";
                case "\n":
                    return "n";
                case "\r":
                    return "r";
                case "\t":
                    return "t";
                default:
                    throw new InvalidOperationException($"invalid character: {input}");
            }
        }
    
        public static string BuildArgumentValue(object value, string formatMask, GraphQlBuilderOptions options, int level)
        {
            var serializer = options.ArgumentBuilder ?? DefaultGraphQlArgumentBuilder.Instance;
            if (serializer.TryBuild(new GraphQlArgumentBuilderContext { Value = value, FormatMask = formatMask, Options = options, Level = level }, out var serializedValue))
                return serializedValue;
    
            if (value is null)
                return "null";
    
            var enumerable = value as IEnumerable;
            if (!String.IsNullOrEmpty(formatMask) && enumerable == null)
                return
                    value is IFormattable formattable
                        ? $"\"{EscapeGraphQlStringValue(formattable.ToString(formatMask, CultureInfo.InvariantCulture))}\""
                        : throw new ArgumentException($"Value must implement {nameof(IFormattable)} interface to use a format mask. ", nameof(value));
    
            if (value is Enum @enum)
                return ConvertEnumToString(@enum);
    
            if (value is bool @bool)
                return @bool ? "true" : "false";
    
            if (value is DateTime dateTime)
                return $"\"{dateTime.ToString("O")}\"";
    
            if (value is DateTimeOffset dateTimeOffset)
                return $"\"{dateTimeOffset.ToString("O")}\"";
    
            if (value is IGraphQlInputObject inputObject)
                return BuildInputObject(inputObject, options, level + 2);
    
            if (value is Guid)
                return $"\"{value}\"";
    
            if (value is String @string)
                return $"\"{EscapeGraphQlStringValue(@string)}\"";
    
            if (enumerable != null)
                return BuildEnumerableArgument(enumerable, formatMask, options, level, '[', ']');
    
            if (value is short || value is ushort || value is byte || value is int || value is uint || value is long || value is ulong || value is float || value is double || value is decimal)
                return Convert.ToString(value, CultureInfo.InvariantCulture);
    
            var argumentValue = EscapeGraphQlStringValue(Convert.ToString(value, CultureInfo.InvariantCulture));
            return $"\"{argumentValue}\"";
        }
    
        public static string BuildEnumerableArgument(IEnumerable enumerable, string formatMask, GraphQlBuilderOptions options, int level, char openingSymbol, char closingSymbol)
        {
            var builder = new StringBuilder();
            builder.Append(openingSymbol);
            var delimiter = String.Empty;
            foreach (var item in enumerable)
            {
                builder.Append(delimiter);
    
                if (options.Formatting == Formatting.Indented)
                {
                    builder.AppendLine();
                    builder.Append(GetIndentation(level + 1, options.IndentationSize));
                }
    
                builder.Append(BuildArgumentValue(item, formatMask, options, level));
                delimiter = ",";
            }
    
            builder.Append(closingSymbol);
            return builder.ToString();
        }
    
        public static string BuildInputObject(IGraphQlInputObject inputObject, GraphQlBuilderOptions options, int level)
        {
            var builder = new StringBuilder();
            builder.Append("{");
    
            var isIndentedFormatting = options.Formatting == Formatting.Indented;
            string valueSeparator;
            if (isIndentedFormatting)
            {
                builder.AppendLine();
                valueSeparator = ": ";
            }
            else
                valueSeparator = ":";
    
            var separator = String.Empty;
            foreach (var propertyValue in inputObject.GetPropertyValues())
            {
                var queryBuilderParameter = propertyValue.Value as QueryBuilderParameter;
                var value =
                    queryBuilderParameter?.Name != null
                        ? $"${queryBuilderParameter.Name}"
                        : BuildArgumentValue(queryBuilderParameter == null ? propertyValue.Value : queryBuilderParameter.Value, propertyValue.FormatMask, options, level);
    
                builder.Append(isIndentedFormatting ? GetIndentation(level, options.IndentationSize) : separator);
                builder.Append(propertyValue.Name);
                builder.Append(valueSeparator);
                builder.Append(value);
    
                separator = ",";
    
                if (isIndentedFormatting)
                    builder.AppendLine();
            }
    
            if (isIndentedFormatting)
                builder.Append(GetIndentation(level - 1, options.IndentationSize));
    
            builder.Append("}");
    
            return builder.ToString();
        }
    
        public static string BuildDirective(GraphQlDirective directive, GraphQlBuilderOptions options, int level)
        {
            if (directive == null)
                return String.Empty;
    
            var isIndentedFormatting = options.Formatting == Formatting.Indented;
            var indentationSpace = isIndentedFormatting ? " " : String.Empty;
            var builder = new StringBuilder();
            builder.Append(indentationSpace);
            builder.Append("@");
            builder.Append(directive.Name);
            builder.Append("(");
    
            string separator = null;
            foreach (var kvp in directive.Arguments)
            {
                var argumentName = kvp.Key;
                var argument = kvp.Value;
    
                builder.Append(separator);
                builder.Append(argumentName);
                builder.Append(":");
                builder.Append(indentationSpace);
    
                if (argument.Name == null)
                    builder.Append(BuildArgumentValue(argument.Value, null, options, level));
                else
                {
                    builder.Append("$");
                    builder.Append(argument.Name);
                }
    
                separator = isIndentedFormatting ? ", " : ",";
            }
    
            builder.Append(")");
            return builder.ToString();
        }
    
        public static void ValidateGraphQlIdentifier(string name, string identifier)
        {
            if (identifier != null && !RegexGraphQlIdentifier.IsMatch(identifier))
                throw new ArgumentException("value must match " + RegexGraphQlIdentifier, name);
        }
    
        private static string ConvertEnumToString(Enum @enum)
        {
            var enumMember = @enum.GetType().GetField(@enum.ToString());
            if (enumMember == null)
                throw new InvalidOperationException("enum member resolution failed");
    
            var enumMemberAttribute = (EnumMemberAttribute)enumMember.GetCustomAttribute(typeof(EnumMemberAttribute));
    
            return enumMemberAttribute == null
                ? @enum.ToString()
                : enumMemberAttribute.Value;
        }
    }
    
    public interface IGraphQlArgumentBuilder
    {
        bool TryBuild(GraphQlArgumentBuilderContext context, out string graphQlString);
    }
    
    public class GraphQlArgumentBuilderContext
    {
        public object Value { get; set; }
        public string FormatMask { get; set; }
        public GraphQlBuilderOptions Options { get; set; }
        public int Level { get; set; }
    }
    
    public class DefaultGraphQlArgumentBuilder : IGraphQlArgumentBuilder
    {
        private static readonly Regex RegexWhiteSpace = new Regex(@"\s", RegexOptions.Compiled);
    
        public static readonly DefaultGraphQlArgumentBuilder Instance = new();
    
        public bool TryBuild(GraphQlArgumentBuilderContext context, out string graphQlString)
        {
    #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
            if (context.Value is JValue jValue)
            {
                switch (jValue.Type)
                {
                    case JTokenType.Null:
                        graphQlString = "null";
                        return true;
    
                    case JTokenType.Integer:
                    case JTokenType.Float:
                    case JTokenType.Boolean:
                        graphQlString = GraphQlQueryHelper.BuildArgumentValue(jValue.Value, null, context.Options, context.Level);
                        return true;
    
                    case JTokenType.String:
                        graphQlString = $"\"{GraphQlQueryHelper.EscapeGraphQlStringValue((string)jValue.Value)}\"";
                        return true;
    
                    default:
                        graphQlString = $"\"{jValue.Value}\"";
                        return true;
                }
            }
    
            if (context.Value is JProperty jProperty)
            {
                if (RegexWhiteSpace.IsMatch(jProperty.Name))
                    throw new ArgumentException($"JSON object keys used as GraphQL arguments must not contain whitespace; key: {jProperty.Name}");
    
                graphQlString = $"{jProperty.Name}:{(context.Options.Formatting == Formatting.Indented ? " " : null)}{GraphQlQueryHelper.BuildArgumentValue(jProperty.Value, null, context.Options, context.Level)}";
                return true;
            }
    
            if (context.Value is JObject jObject)
            {
                graphQlString = GraphQlQueryHelper.BuildEnumerableArgument(jObject, null, context.Options, context.Level + 1, '{', '}');
                return true;
            }
    #endif
    
            graphQlString = null;
            return false;
        }
    }
    
    internal struct InputPropertyInfo
    {
        public string Name { get; set; }
        public object Value { get; set; }
        public string FormatMask { get; set; }
    }
    
    internal interface IGraphQlInputObject
    {
        IEnumerable<InputPropertyInfo> GetPropertyValues();
    }
    
    public interface IGraphQlQueryBuilder
    {
        void Clear();
        void IncludeAllFields();
        string Build(Formatting formatting = Formatting.None, byte indentationSize = 2);
    }
    
    public struct QueryBuilderArgumentInfo
    {
        public string ArgumentName { get; set; }
        public QueryBuilderParameter ArgumentValue { get; set; }
        public string FormatMask { get; set; }
    }
    
    public abstract class QueryBuilderParameter
    {
        private string _name;
    
        internal string GraphQlTypeName { get; }
        internal object Value { get; set; }
    
        public string Name
        {
            get => _name;
            set
            {
                GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(Name), value);
                _name = value;
            }
        }
    
        protected QueryBuilderParameter(string name, string graphQlTypeName, object value)
        {
            Name = name?.Trim();
            GraphQlTypeName = graphQlTypeName?.Replace(" ", null).Replace("\t", null).Replace("\n", null).Replace("\r", null);
            Value = value;
        }
    
        protected QueryBuilderParameter(object value) => Value = value;
    }
    
    public class QueryBuilderParameter<T> : QueryBuilderParameter
    {
        public new T Value
        {
            get => base.Value == null ? default : (T)base.Value;
            set => base.Value = value;
        }
    
        protected QueryBuilderParameter(string name, string graphQlTypeName, T value) : base(name, graphQlTypeName, value)
        {
            EnsureGraphQlTypeName(graphQlTypeName);
        }
    
        protected QueryBuilderParameter(string name, string graphQlTypeName) : base(name, graphQlTypeName, null)
        {
            EnsureGraphQlTypeName(graphQlTypeName);
        }
    
        private QueryBuilderParameter(T value) : base(value)
        {
        }
    
        public void ResetValue() => base.Value = null;
    
        public static implicit operator QueryBuilderParameter<T>(T value) => new QueryBuilderParameter<T>(value);
    
        public static implicit operator T(QueryBuilderParameter<T> parameter) => parameter.Value;
    
        private static void EnsureGraphQlTypeName(string graphQlTypeName)
        {
            if (String.IsNullOrWhiteSpace(graphQlTypeName))
                throw new ArgumentException("value required", nameof(graphQlTypeName));
        }
    }
    
    public class GraphQlQueryParameter<T> : QueryBuilderParameter<T>
    {
        private string _formatMask;
    
        public string FormatMask
        {
            get => _formatMask;
            set => _formatMask =
                typeof(IFormattable).IsAssignableFrom(typeof(T))
                    ? value
                    : throw new InvalidOperationException($"Value must be of {nameof(IFormattable)} type. ");
        }
    
        public GraphQlQueryParameter(string name, string graphQlTypeName = null)
            : base(name, graphQlTypeName ?? GetGraphQlTypeName(typeof(T)))
        {
        }
    
        public GraphQlQueryParameter(string name, string graphQlTypeName, T defaultValue)
            : base(name, graphQlTypeName, defaultValue)
        {
        }
    
        public GraphQlQueryParameter(string name, T defaultValue, bool isNullable = true)
            : base(name, GetGraphQlTypeName(typeof(T), isNullable), defaultValue)
        {
        }
    
        private static string GetGraphQlTypeName(global::System.Type valueType, bool isNullable)
        {
            var graphQlTypeName = GetGraphQlTypeName(valueType);
            if (!isNullable)
                graphQlTypeName += "!";
    
            return graphQlTypeName;
        }
    
        private static string GetGraphQlTypeName(global::System.Type valueType)
        {
            var nullableUnderlyingType = Nullable.GetUnderlyingType(valueType);
            valueType = nullableUnderlyingType ?? valueType;
    
            if (valueType.IsArray)
            {
                var arrayItemType = GetGraphQlTypeName(valueType.GetElementType());
                return arrayItemType == null ? null : "[" + arrayItemType + "]";
            }
    
            if (typeof(IEnumerable).IsAssignableFrom(valueType))
            {
                var genericArguments = valueType.GetGenericArguments();
                if (genericArguments.Length == 1)
                {
                    var listItemType = GetGraphQlTypeName(valueType.GetGenericArguments()[0]);
                    return listItemType == null ? null : "[" + listItemType + "]";
                }
            }
    
            if (GraphQlTypes.ReverseMapping.TryGetValue(valueType, out var graphQlTypeName))
                return graphQlTypeName;
    
            if (valueType == typeof(string))
                return "String";
    
            var nullableSuffix = nullableUnderlyingType == null ? null : "?";
            graphQlTypeName = GetValueTypeGraphQlTypeName(valueType);
            return graphQlTypeName == null ? null : graphQlTypeName + nullableSuffix;
        }
    
        private static string GetValueTypeGraphQlTypeName(global::System.Type valueType)
        {
            if (valueType == typeof(bool))
                return "Boolean";
    
            if (valueType == typeof(float) || valueType == typeof(double) || valueType == typeof(decimal))
                return "Float";
    
            if (valueType == typeof(Guid))
                return "ID";
    
            if (valueType == typeof(sbyte) || valueType == typeof(byte) || valueType == typeof(short) || valueType == typeof(ushort) || valueType == typeof(int) || valueType == typeof(uint) ||
                valueType == typeof(long) || valueType == typeof(ulong))
                return "Int";
    
            return null;
        }
    }
    
    public abstract class GraphQlDirective
    {
        private readonly Dictionary<string, QueryBuilderParameter> _arguments = new Dictionary<string, QueryBuilderParameter>();
    
        internal IEnumerable<KeyValuePair<string, QueryBuilderParameter>> Arguments => _arguments;
    
        public string Name { get; }
    
        protected GraphQlDirective(string name)
        {
            GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(name), name);
            Name = name;
        }
    
        protected void AddArgument(string name, QueryBuilderParameter value)
        {
            if (value != null)
                _arguments[name] = value;
        }
    }
    
    public class GraphQlBuilderOptions
    {
        public Formatting Formatting { get; set; }
        public byte IndentationSize { get; set; } = 2;
        public IGraphQlArgumentBuilder ArgumentBuilder { get; set; }
    }
    
    public abstract partial class GraphQlQueryBuilder : IGraphQlQueryBuilder
    {
        private readonly Dictionary<string, GraphQlFieldCriteria> _fieldCriteria = new Dictionary<string, GraphQlFieldCriteria>();
    
        private readonly string _operationType;
        private readonly string _operationName;
        private Dictionary<string, GraphQlFragmentCriteria> _fragments;
        private List<QueryBuilderArgumentInfo> _queryParameters;
    
        protected abstract string TypeName { get; }
    
        public abstract IReadOnlyList<GraphQlFieldMetadata> AllFields { get; }
    
        protected GraphQlQueryBuilder(string operationType, string operationName)
        {
            GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(operationName), operationName);
            _operationType = operationType;
            _operationName = operationName;
        }
    
        public virtual void Clear()
        {
            _fieldCriteria.Clear();
            _fragments?.Clear();
            _queryParameters?.Clear();
        }
    
        void IGraphQlQueryBuilder.IncludeAllFields()
        {
            IncludeAllFields();
        }
    
        public string Build(Formatting formatting = Formatting.None, byte indentationSize = 2)
        {
            return Build(new GraphQlBuilderOptions { Formatting = formatting, IndentationSize = indentationSize });
        }
    
        public string Build(GraphQlBuilderOptions options)
        {
            return Build(options, 1);
        }
    
        protected void IncludeAllFields()
        {
            IncludeFields(AllFields.Where(f => !f.RequiresParameters));
        }
    
        protected virtual string Build(GraphQlBuilderOptions options, int level)
        {
            var isIndentedFormatting = options.Formatting == Formatting.Indented;
            var separator = String.Empty;
            var indentationSpace = isIndentedFormatting ? " " : String.Empty;
            var builder = new StringBuilder();
    
            BuildOperationSignature(builder, options, indentationSpace, level);
    
            if (builder.Length > 0 || level > 1)
                builder.Append(indentationSpace);
    
            builder.Append("{");
    
            if (isIndentedFormatting)
                builder.AppendLine();
    
            separator = String.Empty;
    
            foreach (var criteria in _fieldCriteria.Values.Concat(_fragments?.Values ?? Enumerable.Empty<GraphQlFragmentCriteria>()))
            {
                var fieldCriteria = criteria.Build(options, level);
                if (isIndentedFormatting)
                    builder.AppendLine(fieldCriteria);
                else if (!String.IsNullOrEmpty(fieldCriteria))
                {
                    builder.Append(separator);
                    builder.Append(fieldCriteria);
                }
    
                separator = ",";
            }
    
            if (isIndentedFormatting)
                builder.Append(GraphQlQueryHelper.GetIndentation(level - 1, options.IndentationSize));
    
            builder.Append("}");
    
            return builder.ToString();
        }
    
        private void BuildOperationSignature(StringBuilder builder, GraphQlBuilderOptions options, string indentationSpace, int level)
        {
            if (String.IsNullOrEmpty(_operationType))
                return;
    
            builder.Append(_operationType);
    
            if (!String.IsNullOrEmpty(_operationName))
            {
                builder.Append(" ");
                builder.Append(_operationName);
            }
    
            if (_queryParameters?.Count > 0)
            {
                builder.Append(indentationSpace);
                builder.Append("(");
    
                var separator = String.Empty;
                var isIndentedFormatting = options.Formatting == Formatting.Indented;
    
                foreach (var queryParameterInfo in _queryParameters)
                {
                    if (isIndentedFormatting)
                    {
                        builder.AppendLine(separator);
                        builder.Append(GraphQlQueryHelper.GetIndentation(level, options.IndentationSize));
                    }
                    else
                        builder.Append(separator);
    
                    builder.Append("$");
                    builder.Append(queryParameterInfo.ArgumentValue.Name);
                    builder.Append(":");
                    builder.Append(indentationSpace);
    
                    builder.Append(queryParameterInfo.ArgumentValue.GraphQlTypeName);
    
                    if (!queryParameterInfo.ArgumentValue.GraphQlTypeName.EndsWith("!") && queryParameterInfo.ArgumentValue.Value is not null)
                    {
                        builder.Append(indentationSpace);
                        builder.Append("=");
                        builder.Append(indentationSpace);
                        builder.Append(GraphQlQueryHelper.BuildArgumentValue(queryParameterInfo.ArgumentValue.Value, queryParameterInfo.FormatMask, options, 0));
                    }
    
                    if (!isIndentedFormatting)
                        separator = ",";
                }
    
                builder.Append(")");
            }
        }
    
        protected void IncludeScalarField(string fieldName, string alias, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
        {
            _fieldCriteria[alias ?? fieldName] = new GraphQlScalarFieldCriteria(fieldName, alias, args, directives);
        }
    
        protected void IncludeObjectField(string fieldName, string alias, GraphQlQueryBuilder objectFieldQueryBuilder, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
        {
            _fieldCriteria[alias ?? fieldName] = new GraphQlObjectFieldCriteria(fieldName, alias, objectFieldQueryBuilder, args, directives);
        }
    
        protected void IncludeFragment(GraphQlQueryBuilder objectFieldQueryBuilder, GraphQlDirective[] directives)
        {
            _fragments = _fragments ?? new Dictionary<string, GraphQlFragmentCriteria>();
            _fragments[objectFieldQueryBuilder.TypeName] = new GraphQlFragmentCriteria(objectFieldQueryBuilder, directives);
        }
    
        protected void ExcludeField(string fieldName)
        {
            if (fieldName == null)
                throw new ArgumentNullException(nameof(fieldName));
    
            _fieldCriteria.Remove(fieldName);
        }
    
        protected void IncludeFields(IEnumerable<GraphQlFieldMetadata> fields)
        {
            IncludeFields(fields, 0, new Dictionary<global::System.Type, int>());
        }
    
        private void IncludeFields(IEnumerable<GraphQlFieldMetadata> fields, int level, Dictionary<global::System.Type, int> parentTypeLevel)
        {
            global::System.Type builderType = null;
    
            foreach (var field in fields)
            {
                if (field.QueryBuilderType == null)
                    IncludeScalarField(field.Name, field.DefaultAlias, null, null);
                else
                {
                    int parentLevel;
                    if (_operationType != null && GetType() == field.QueryBuilderType ||
                        parentTypeLevel.TryGetValue(field.QueryBuilderType, out parentLevel) && parentLevel < level)
                        continue;
    
                    if (builderType == null)
                    {
                        builderType = GetType();
                        parentLevel = parentTypeLevel.TryGetValue(builderType, out parentLevel) ? parentLevel : level;
                        parentTypeLevel[builderType] = Math.Min(level, parentLevel);
                    }
    
                    var queryBuilder = InitializeChildQueryBuilder(field.QueryBuilderType, level, parentTypeLevel);
    
                    foreach (var includeFragmentMethod in field.QueryBuilderType.GetMethods().Where(IsIncludeFragmentMethod))
                    {
                        var includeFragmentParameterInfo = includeFragmentMethod.GetParameters();
                        var includeFragmentQueryBuilderType = includeFragmentParameterInfo[0].ParameterType;
                        if (parentTypeLevel.TryGetValue(includeFragmentQueryBuilderType, out parentLevel))
                            continue;
    
                        var includeFragmentParameters = new object[includeFragmentParameterInfo.Length];
                        includeFragmentParameters[0] = InitializeChildQueryBuilder(includeFragmentQueryBuilderType, level, parentTypeLevel);
                        includeFragmentMethod.Invoke(queryBuilder, includeFragmentParameters);
                    }
    
                    if (queryBuilder._fieldCriteria.Count > 0 || queryBuilder._fragments != null)
                        IncludeObjectField(field.Name, field.DefaultAlias, queryBuilder, null, null);
                }
            }
        }
    
        private static GraphQlQueryBuilder InitializeChildQueryBuilder(global::System.Type queryBuilderType, int level, Dictionary<global::System.Type, int> parentTypeLevel)
        {
            var queryBuilder = (GraphQlQueryBuilder)Activator.CreateInstance(queryBuilderType);
            queryBuilder.IncludeFields(
                queryBuilder.AllFields.Where(f => !f.RequiresParameters),
                level + 1,
                parentTypeLevel);
    
            return queryBuilder;
        }
    
        private static bool IsIncludeFragmentMethod(MethodInfo methodInfo)
        {
            if (!methodInfo.Name.StartsWith("With") || !methodInfo.Name.EndsWith("Fragment"))
                return false;
    
            var parameters = methodInfo.GetParameters();
            return parameters.Count(p => !p.IsOptional) == 1 && parameters[0].ParameterType.IsSubclassOf(typeof(GraphQlQueryBuilder));
        }
    
        protected void AddParameter<T>(GraphQlQueryParameter<T> parameter)
        {
            if (_queryParameters == null)
                _queryParameters = new List<QueryBuilderArgumentInfo>();
    
            _queryParameters.Add(new QueryBuilderArgumentInfo { ArgumentValue = parameter, FormatMask = parameter.FormatMask });
        }
    
        private abstract class GraphQlFieldCriteria
        {
            private readonly IList<QueryBuilderArgumentInfo> _args;
            private readonly GraphQlDirective[] _directives;
    
            protected readonly string FieldName;
            protected readonly string Alias;
    
            protected static string GetIndentation(Formatting formatting, int level, byte indentationSize) =>
                formatting == Formatting.Indented ? GraphQlQueryHelper.GetIndentation(level, indentationSize) : null;
    
            protected GraphQlFieldCriteria(string fieldName, string alias, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
            {
                GraphQlQueryHelper.ValidateGraphQlIdentifier(nameof(alias), alias);
                FieldName = fieldName;
                Alias = alias;
                _args = args;
                _directives = directives;
            }
    
            public abstract string Build(GraphQlBuilderOptions options, int level);
    
            protected string BuildArgumentClause(GraphQlBuilderOptions options, int level)
            {
                var separator = options.Formatting == Formatting.Indented ? " " : null;
                var argumentCount = _args?.Count ?? 0;
                if (argumentCount == 0)
                    return String.Empty;
    
                var arguments =
                    _args.Select(
                        a => $"{a.ArgumentName}:{separator}{(a.ArgumentValue.Name == null ? GraphQlQueryHelper.BuildArgumentValue(a.ArgumentValue.Value, a.FormatMask, options, level) : $"${a.ArgumentValue.Name}")}");
    
                return $"({String.Join($",{separator}", arguments)})";
            }
    
            protected string BuildDirectiveClause(GraphQlBuilderOptions options, int level) =>
                _directives == null ? null : String.Concat(_directives.Select(d => d == null ? null : GraphQlQueryHelper.BuildDirective(d, options, level)));
    
            protected static string BuildAliasPrefix(string alias, Formatting formatting)
            {
                var separator = formatting == Formatting.Indented ? " " : String.Empty;
                return String.IsNullOrWhiteSpace(alias) ? null : $"{alias}:{separator}";
            }
        }
    
        private class GraphQlScalarFieldCriteria : GraphQlFieldCriteria
        {
            public GraphQlScalarFieldCriteria(string fieldName, string alias, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
                : base(fieldName, alias, args, directives)
            {
            }
    
            public override string Build(GraphQlBuilderOptions options, int level) =>
                GetIndentation(options.Formatting, level, options.IndentationSize) +
                BuildAliasPrefix(Alias, options.Formatting) +
                FieldName +
                BuildArgumentClause(options, level) +
                BuildDirectiveClause(options, level);
        }
    
        private class GraphQlObjectFieldCriteria : GraphQlFieldCriteria
        {
            private readonly GraphQlQueryBuilder _objectQueryBuilder;
    
            public GraphQlObjectFieldCriteria(string fieldName, string alias, GraphQlQueryBuilder objectQueryBuilder, IList<QueryBuilderArgumentInfo> args, GraphQlDirective[] directives)
                : base(fieldName, alias, args, directives)
            {
                _objectQueryBuilder = objectQueryBuilder;
            }
    
            public override string Build(GraphQlBuilderOptions options, int level) =>
                _objectQueryBuilder._fieldCriteria.Count > 0 || _objectQueryBuilder._fragments?.Count > 0
                    ? GetIndentation(options.Formatting, level, options.IndentationSize) + BuildAliasPrefix(Alias, options.Formatting) + FieldName +
                      BuildArgumentClause(options, level) + BuildDirectiveClause(options, level) + _objectQueryBuilder.Build(options, level + 1)
                    : null;
        }
    
        private class GraphQlFragmentCriteria : GraphQlFieldCriteria
        {
            private readonly GraphQlQueryBuilder _objectQueryBuilder;
    
            public GraphQlFragmentCriteria(GraphQlQueryBuilder objectQueryBuilder, GraphQlDirective[] directives) : base(objectQueryBuilder.TypeName, null, null, directives)
            {
                _objectQueryBuilder = objectQueryBuilder;
            }
    
            public override string Build(GraphQlBuilderOptions options, int level) =>
                _objectQueryBuilder._fieldCriteria.Count == 0
                    ? null
                    : GetIndentation(options.Formatting, level, options.IndentationSize) + "..." + (options.Formatting == Formatting.Indented ? " " : null) + "on " +
                      FieldName + BuildArgumentClause(options, level) + BuildDirectiveClause(options, level) + _objectQueryBuilder.Build(options, level + 1);
        }
    }
    
    public abstract partial class GraphQlQueryBuilder<TQueryBuilder> : GraphQlQueryBuilder where TQueryBuilder : GraphQlQueryBuilder<TQueryBuilder>
    {
        protected GraphQlQueryBuilder(string operationType = null, string operationName = null) : base(operationType, operationName)
        {
        }
    
        /// <summary>
        /// Includes all fields that don't require parameters into the query.
        /// </summary>
        public TQueryBuilder WithAllFields()
        {
            IncludeAllFields();
            return (TQueryBuilder)this;
        }
    
        /// <summary>
        /// Includes all scalar fields that don't require parameters into the query.
        /// </summary>
        public TQueryBuilder WithAllScalarFields()
        {
            IncludeFields(AllFields.Where(f => !f.IsComplex && !f.RequiresParameters));
            return (TQueryBuilder)this;
        }
    
        public TQueryBuilder ExceptField(string fieldName)
        {
            ExcludeField(fieldName);
            return (TQueryBuilder)this;
        }
    
        /// <summary>
        /// Includes "__typename" field; included automatically for interface and union types.
        /// </summary>
        public TQueryBuilder WithTypeName(string alias = null, params GraphQlDirective[] directives)
        {
            IncludeScalarField("__typename", alias, null, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithScalarField(string fieldName, string alias, GraphQlDirective[] directives, IList<QueryBuilderArgumentInfo> args = null)
        {
            IncludeScalarField(fieldName, alias, args, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithObjectField(string fieldName, string alias, GraphQlQueryBuilder queryBuilder, GraphQlDirective[] directives, IList<QueryBuilderArgumentInfo> args = null)
        {
            IncludeObjectField(fieldName, alias, queryBuilder, args, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithFragment(GraphQlQueryBuilder queryBuilder, GraphQlDirective[] directives)
        {
            IncludeFragment(queryBuilder, directives);
            return (TQueryBuilder)this;
        }
    
        protected TQueryBuilder WithParameterInternal<T>(GraphQlQueryParameter<T> parameter)
        {
            AddParameter(parameter);
            return (TQueryBuilder)this;
        }
    }
    
    public abstract class GraphQlResponse<TDataContract>
    {
        public TDataContract Data { get; set; }
        public ICollection<GraphQlQueryError> Errors { get; set; }
    }
    
    public class GraphQlQueryError
    {
        public string Message { get; set; }
        public ICollection<GraphQlErrorLocation> Locations { get; set; }
    }
    
    public class GraphQlErrorLocation
    {
        public int Line { get; set; }
        public int Column { get; set; }
    }
    #endregion

    #region GraphQL type helpers
    public static class GraphQlTypes
    {
        public const string BigDecimal = "BigDecimal";
        public const string BigInt = "BigInt";
        public const string Boolean = "Boolean";
        public const string Bytes = "Bytes";
        public const string Float = "Float";
        public const string Id = "ID";
        public const string Int = "Int";
        public const string Int8 = "Int8";
        public const string String = "String";
        public const string Timestamp = "Timestamp";

        public const string SubgraphErrorPolicy = "_SubgraphErrorPolicy_";
        public const string AggregationInterval = "Aggregation_interval";
        public const string AllowedContractOrderBy = "AllowedContract_orderBy";
        public const string ApprovalOrderBy = "Approval_orderBy";
        public const string ApprovalForAllOrderBy = "ApprovalForAll_orderBy";
        public const string BaseUriChangedOrderBy = "BaseURIChanged_orderBy";
        public const string BatchMetadataUpdateOrderBy = "BatchMetadataUpdate_orderBy";
        public const string CollateralProviderUpdateParamsOrderBy = "CollateralProviderUpdateParams_orderBy";
        public const string ContractApprovedOrderBy = "ContractApproved_orderBy";
        public const string DealProviderUpdateParamsOrderBy = "DealProviderUpdateParams_orderBy";
        public const string DelayVaultOwnershipTransferredOrderBy = "DelayVaultOwnershipTransferred_orderBy";
        public const string DelayVaultPausedOrderBy = "DelayVaultPaused_orderBy";
        public const string DelayVaultProviderVaultValueChangedOrderBy = "DelayVaultProviderVaultValueChanged_orderBy";
        public const string DelayVaultTransferInOrderBy = "DelayVaultTransferIn_orderBy";
        public const string DelayVaultTransferOutOrderBy = "DelayVaultTransferOut_orderBy";
        public const string DelayVaultUnpausedOrderBy = "DelayVaultUnpaused_orderBy";
        public const string DepositedOrderBy = "Deposited_orderBy";
        public const string DispenserProviderFirewallAdminUpdatedOrderBy = "DispenserProviderFirewallAdminUpdated_orderBy";
        public const string DispenserProviderFirewallUpdatedOrderBy = "DispenserProviderFirewallUpdated_orderBy";
        public const string DispenserProviderUpdateParamsOrderBy = "DispenserProviderUpdateParams_orderBy";
        public const string DispenserTokenReserveOrderBy = "DispenserTokenReserve_orderBy";
        public const string Eip712DomainChangedOrderBy = "EIP712DomainChanged_orderBy";
        public const string FirewallAdminUpdatedOrderBy = "FirewallAdminUpdated_orderBy";
        public const string FirewallUpdatedOrderBy = "FirewallUpdated_orderBy";
        public const string GovernorUpdatedOrderBy = "GovernorUpdated_orderBy";
        public const string InvestedOrderBy = "Invested_orderBy";
        public const string InvestNewPoolCreatedOrderBy = "InvestNewPoolCreated_orderBy";
        public const string InvestProviderEip712DomainChangedOrderBy = "InvestProviderEIP712DomainChanged_orderBy";
        public const string InvestProviderFirewallAdminUpdatedOrderBy = "InvestProviderFirewallAdminUpdated_orderBy";
        public const string InvestProviderFirewallUpdatedOrderBy = "InvestProviderFirewallUpdated_orderBy";
        public const string InvestProviderUpdateParamsOrderBy = "InvestProviderUpdateParams_orderBy";
        public const string LockDealNftOwnershipTransferredOrderBy = "LockDealNFTOwnershipTransferred_orderBy";
        public const string LockDealProviderFirewallAdminUpdatedOrderBy = "LockDealProviderFirewallAdminUpdated_orderBy";
        public const string LockDealProviderFirewallUpdatedOrderBy = "LockDealProviderFirewallUpdated_orderBy";
        public const string LockDealProviderUpdateParamsOrderBy = "LockDealProviderUpdateParams_orderBy";
        public const string MetadataUpdateOrderBy = "MetadataUpdate_orderBy";
        public const string NewPoolCreatedOrderBy = "NewPoolCreated_orderBy";
        public const string NewVaultCreatedOrderBy = "NewVaultCreated_orderBy";
        public const string OldDealProviderFirewallAdminUpdatedOrderBy = "OldDealProviderFirewallAdminUpdated_orderBy";
        public const string OldDealProviderFirewallUpdatedOrderBy = "OldDealProviderFirewallUpdated_orderBy";
        public const string OldDealProviderUpdateParamsOrderBy = "OldDealProviderUpdateParams_orderBy";
        public const string OldLockDealProviderFirewallAdminUpdatedOrderBy = "OldLockDealProviderFirewallAdminUpdated_orderBy";
        public const string OldLockDealProviderFirewallUpdatedOrderBy = "OldLockDealProviderFirewallUpdated_orderBy";
        public const string OldLockDealProviderUpdateParamsOrderBy = "OldLockDealProviderUpdateParams_orderBy";
        public const string OldTimedDealProviderFirewallAdminUpdatedOrderBy = "OldTimedDealProviderFirewallAdminUpdated_orderBy";
        public const string OldTimedDealProviderFirewallUpdatedOrderBy = "OldTimedDealProviderFirewallUpdated_orderBy";
        public const string OldTimedDealProviderUpdateParamsOrderBy = "OldTimedDealProviderUpdateParams_orderBy";
        public const string OrderDirection = "OrderDirection";
        public const string OwnershipTransferredOrderBy = "OwnershipTransferred_orderBy";
        public const string PoolCreatedOrderBy = "PoolCreated_orderBy";
        public const string PoolDataOrderBy = "PoolData_orderBy";
        public const string PoolSplitOrderBy = "PoolSplit_orderBy";
        public const string PoolxLockedBalanceOrderBy = "PoolxLockedBalance_orderBy";
        public const string PoolxUnlocksOrderBy = "PoolxUnlocks_orderBy";
        public const string RedeemedTokensOrderBy = "RedeemedTokens_orderBy";
        public const string RefundProviderUpdateParamsOrderBy = "RefundProviderUpdateParams_orderBy";
        public const string TimedDealProviderFirewallAdminUpdatedOrderBy = "TimedDealProviderFirewallAdminUpdated_orderBy";
        public const string TimedDealProviderFirewallUpdatedOrderBy = "TimedDealProviderFirewallUpdated_orderBy";
        public const string TimedDealProviderUpdateParamsOrderBy = "TimedDealProviderUpdateParams_orderBy";
        public const string TokenRedemptionApprovalOrderBy = "TokenRedemptionApproval_orderBy";
        public const string TokensDispensedOrderBy = "TokensDispensed_orderBy";
        public const string TokenStatusFilterOrderBy = "TokenStatusFilter_orderBy";
        public const string TokenWithdrawnOrderBy = "TokenWithdrawn_orderBy";
        public const string TotalInvestedOrderBy = "TotalInvested_orderBy";
        public const string TotalUnlocksAmountOrderBy = "TotalUnlocksAmount_orderBy";
        public const string TotalUserInvestedOrderBy = "TotalUserInvested_orderBy";
        public const string TransferOrderBy = "Transfer_orderBy";
        public const string UpdatedMaxDelayOrderBy = "UpdatedMaxDelay_orderBy";
        public const string UpdatedMinDelaysOrderBy = "UpdatedMinDelays_orderBy";
        public const string UpdateParamsOrderBy = "UpdateParams_orderBy";
        public const string VaultOrderBy = "Vault_orderBy";
        public const string VaultRoyaltySetOrderBy = "VaultRoyaltySet_orderBy";
        public const string VaultStatusUpdateOrderBy = "VaultStatusUpdate_orderBy";
        public const string VaultValueChangedOrderBy = "VaultValueChanged_orderBy";
        public const string WithdrawnOrderBy = "Withdrawn_orderBy";

        public const string Block = "_Block_";
        public const string Meta = "_Meta_";
        public const string AllowedContract = "AllowedContract";
        public const string Approval = "Approval";
        public const string ApprovalForAll = "ApprovalForAll";
        public const string BaseUriChanged = "BaseURIChanged";
        public const string BatchMetadataUpdate = "BatchMetadataUpdate";
        public const string CollateralProviderUpdateParams = "CollateralProviderUpdateParams";
        public const string ContractApproved = "ContractApproved";
        public const string DealProviderUpdateParams = "DealProviderUpdateParams";
        public const string DelayVaultOwnershipTransferred = "DelayVaultOwnershipTransferred";
        public const string DelayVaultPaused = "DelayVaultPaused";
        public const string DelayVaultProviderVaultValueChanged = "DelayVaultProviderVaultValueChanged";
        public const string DelayVaultTransferIn = "DelayVaultTransferIn";
        public const string DelayVaultTransferOut = "DelayVaultTransferOut";
        public const string DelayVaultUnpaused = "DelayVaultUnpaused";
        public const string Deposited = "Deposited";
        public const string DispenserProviderFirewallAdminUpdated = "DispenserProviderFirewallAdminUpdated";
        public const string DispenserProviderFirewallUpdated = "DispenserProviderFirewallUpdated";
        public const string DispenserProviderUpdateParams = "DispenserProviderUpdateParams";
        public const string DispenserTokenReserve = "DispenserTokenReserve";
        public const string Eip712DomainChanged = "EIP712DomainChanged";
        public const string FirewallAdminUpdated = "FirewallAdminUpdated";
        public const string FirewallUpdated = "FirewallUpdated";
        public const string GovernorUpdated = "GovernorUpdated";
        public const string Invested = "Invested";
        public const string InvestNewPoolCreated = "InvestNewPoolCreated";
        public const string InvestProviderEip712DomainChanged = "InvestProviderEIP712DomainChanged";
        public const string InvestProviderFirewallAdminUpdated = "InvestProviderFirewallAdminUpdated";
        public const string InvestProviderFirewallUpdated = "InvestProviderFirewallUpdated";
        public const string InvestProviderUpdateParams = "InvestProviderUpdateParams";
        public const string LockDealNftOwnershipTransferred = "LockDealNFTOwnershipTransferred";
        public const string LockDealProviderFirewallAdminUpdated = "LockDealProviderFirewallAdminUpdated";
        public const string LockDealProviderFirewallUpdated = "LockDealProviderFirewallUpdated";
        public const string LockDealProviderUpdateParams = "LockDealProviderUpdateParams";
        public const string MetadataUpdate = "MetadataUpdate";
        public const string NewPoolCreated = "NewPoolCreated";
        public const string NewVaultCreated = "NewVaultCreated";
        public const string OldDealProviderFirewallAdminUpdated = "OldDealProviderFirewallAdminUpdated";
        public const string OldDealProviderFirewallUpdated = "OldDealProviderFirewallUpdated";
        public const string OldDealProviderUpdateParams = "OldDealProviderUpdateParams";
        public const string OldLockDealProviderFirewallAdminUpdated = "OldLockDealProviderFirewallAdminUpdated";
        public const string OldLockDealProviderFirewallUpdated = "OldLockDealProviderFirewallUpdated";
        public const string OldLockDealProviderUpdateParams = "OldLockDealProviderUpdateParams";
        public const string OldTimedDealProviderFirewallAdminUpdated = "OldTimedDealProviderFirewallAdminUpdated";
        public const string OldTimedDealProviderFirewallUpdated = "OldTimedDealProviderFirewallUpdated";
        public const string OldTimedDealProviderUpdateParams = "OldTimedDealProviderUpdateParams";
        public const string OwnershipTransferred = "OwnershipTransferred";
        public const string PoolCreated = "PoolCreated";
        public const string PoolData = "PoolData";
        public const string PoolSplit = "PoolSplit";
        public const string PoolxLockedBalance = "PoolxLockedBalance";
        public const string PoolxUnlocks = "PoolxUnlocks";
        public const string Query = "Query";
        public const string RedeemedTokens = "RedeemedTokens";
        public const string RefundProviderUpdateParams = "RefundProviderUpdateParams";
        public const string TimedDealProviderFirewallAdminUpdated = "TimedDealProviderFirewallAdminUpdated";
        public const string TimedDealProviderFirewallUpdated = "TimedDealProviderFirewallUpdated";
        public const string TimedDealProviderUpdateParams = "TimedDealProviderUpdateParams";
        public const string TokenRedemptionApproval = "TokenRedemptionApproval";
        public const string TokensDispensed = "TokensDispensed";
        public const string TokenStatusFilter = "TokenStatusFilter";
        public const string TokenWithdrawn = "TokenWithdrawn";
        public const string TotalInvested = "TotalInvested";
        public const string TotalUnlocksAmount = "TotalUnlocksAmount";
        public const string TotalUserInvested = "TotalUserInvested";
        public const string Transfer = "Transfer";
        public const string UpdatedMaxDelay = "UpdatedMaxDelay";
        public const string UpdatedMinDelays = "UpdatedMinDelays";
        public const string UpdateParams = "UpdateParams";
        public const string Vault = "Vault";
        public const string VaultRoyaltySet = "VaultRoyaltySet";
        public const string VaultStatusUpdate = "VaultStatusUpdate";
        public const string VaultValueChanged = "VaultValueChanged";
        public const string Withdrawn = "Withdrawn";

        public const string AllowedContractFilter = "AllowedContract_filter";
        public const string ApprovalFilter = "Approval_filter";
        public const string ApprovalForAllFilter = "ApprovalForAll_filter";
        public const string BaseUriChangedFilter = "BaseURIChanged_filter";
        public const string BatchMetadataUpdateFilter = "BatchMetadataUpdate_filter";
        public const string BlockHeight = "Block_height";
        public const string BlockChangedFilter = "BlockChangedFilter";
        public const string CollateralProviderUpdateParamsFilter = "CollateralProviderUpdateParams_filter";
        public const string ContractApprovedFilter = "ContractApproved_filter";
        public const string DealProviderUpdateParamsFilter = "DealProviderUpdateParams_filter";
        public const string DelayVaultOwnershipTransferredFilter = "DelayVaultOwnershipTransferred_filter";
        public const string DelayVaultPausedFilter = "DelayVaultPaused_filter";
        public const string DelayVaultProviderVaultValueChangedFilter = "DelayVaultProviderVaultValueChanged_filter";
        public const string DelayVaultTransferInFilter = "DelayVaultTransferIn_filter";
        public const string DelayVaultTransferOutFilter = "DelayVaultTransferOut_filter";
        public const string DelayVaultUnpausedFilter = "DelayVaultUnpaused_filter";
        public const string DepositedFilter = "Deposited_filter";
        public const string DispenserProviderFirewallAdminUpdatedFilter = "DispenserProviderFirewallAdminUpdated_filter";
        public const string DispenserProviderFirewallUpdatedFilter = "DispenserProviderFirewallUpdated_filter";
        public const string DispenserProviderUpdateParamsFilter = "DispenserProviderUpdateParams_filter";
        public const string DispenserTokenReserveFilter = "DispenserTokenReserve_filter";
        public const string Eip712DomainChangedFilter = "EIP712DomainChanged_filter";
        public const string FirewallAdminUpdatedFilter = "FirewallAdminUpdated_filter";
        public const string FirewallUpdatedFilter = "FirewallUpdated_filter";
        public const string GovernorUpdatedFilter = "GovernorUpdated_filter";
        public const string InvestedFilter = "Invested_filter";
        public const string InvestNewPoolCreatedFilter = "InvestNewPoolCreated_filter";
        public const string InvestProviderEip712DomainChangedFilter = "InvestProviderEIP712DomainChanged_filter";
        public const string InvestProviderFirewallAdminUpdatedFilter = "InvestProviderFirewallAdminUpdated_filter";
        public const string InvestProviderFirewallUpdatedFilter = "InvestProviderFirewallUpdated_filter";
        public const string InvestProviderUpdateParamsFilter = "InvestProviderUpdateParams_filter";
        public const string LockDealNftOwnershipTransferredFilter = "LockDealNFTOwnershipTransferred_filter";
        public const string LockDealProviderFirewallAdminUpdatedFilter = "LockDealProviderFirewallAdminUpdated_filter";
        public const string LockDealProviderFirewallUpdatedFilter = "LockDealProviderFirewallUpdated_filter";
        public const string LockDealProviderUpdateParamsFilter = "LockDealProviderUpdateParams_filter";
        public const string MetadataUpdateFilter = "MetadataUpdate_filter";
        public const string NewPoolCreatedFilter = "NewPoolCreated_filter";
        public const string NewVaultCreatedFilter = "NewVaultCreated_filter";
        public const string OldDealProviderFirewallAdminUpdatedFilter = "OldDealProviderFirewallAdminUpdated_filter";
        public const string OldDealProviderFirewallUpdatedFilter = "OldDealProviderFirewallUpdated_filter";
        public const string OldDealProviderUpdateParamsFilter = "OldDealProviderUpdateParams_filter";
        public const string OldLockDealProviderFirewallAdminUpdatedFilter = "OldLockDealProviderFirewallAdminUpdated_filter";
        public const string OldLockDealProviderFirewallUpdatedFilter = "OldLockDealProviderFirewallUpdated_filter";
        public const string OldLockDealProviderUpdateParamsFilter = "OldLockDealProviderUpdateParams_filter";
        public const string OldTimedDealProviderFirewallAdminUpdatedFilter = "OldTimedDealProviderFirewallAdminUpdated_filter";
        public const string OldTimedDealProviderFirewallUpdatedFilter = "OldTimedDealProviderFirewallUpdated_filter";
        public const string OldTimedDealProviderUpdateParamsFilter = "OldTimedDealProviderUpdateParams_filter";
        public const string OwnershipTransferredFilter = "OwnershipTransferred_filter";
        public const string PoolCreatedFilter = "PoolCreated_filter";
        public const string PoolDataFilter = "PoolData_filter";
        public const string PoolSplitFilter = "PoolSplit_filter";
        public const string PoolxLockedBalanceFilter = "PoolxLockedBalance_filter";
        public const string PoolxUnlocksFilter = "PoolxUnlocks_filter";
        public const string RedeemedTokensFilter = "RedeemedTokens_filter";
        public const string RefundProviderUpdateParamsFilter = "RefundProviderUpdateParams_filter";
        public const string TimedDealProviderFirewallAdminUpdatedFilter = "TimedDealProviderFirewallAdminUpdated_filter";
        public const string TimedDealProviderFirewallUpdatedFilter = "TimedDealProviderFirewallUpdated_filter";
        public const string TimedDealProviderUpdateParamsFilter = "TimedDealProviderUpdateParams_filter";
        public const string TokenRedemptionApprovalFilter = "TokenRedemptionApproval_filter";
        public const string TokensDispensedFilter = "TokensDispensed_filter";
        public const string TokenStatusFilterFilter = "TokenStatusFilter_filter";
        public const string TokenWithdrawnFilter = "TokenWithdrawn_filter";
        public const string TotalInvestedFilter = "TotalInvested_filter";
        public const string TotalUnlocksAmountFilter = "TotalUnlocksAmount_filter";
        public const string TotalUserInvestedFilter = "TotalUserInvested_filter";
        public const string TransferFilter = "Transfer_filter";
        public const string UpdatedMaxDelayFilter = "UpdatedMaxDelay_filter";
        public const string UpdatedMinDelaysFilter = "UpdatedMinDelays_filter";
        public const string UpdateParamsFilter = "UpdateParams_filter";
        public const string VaultFilter = "Vault_filter";
        public const string VaultRoyaltySetFilter = "VaultRoyaltySet_filter";
        public const string VaultStatusUpdateFilter = "VaultStatusUpdate_filter";
        public const string VaultValueChangedFilter = "VaultValueChanged_filter";
        public const string WithdrawnFilter = "Withdrawn_filter";

        public static readonly IReadOnlyDictionary<global::System.Type, string> ReverseMapping =
            new Dictionary<global::System.Type, string>
            {
                { typeof(string), "Bytes" },
                { typeof(int), "Int" },
                { typeof(bool), "Boolean" },
                { typeof(System.Numerics.BigInteger), "BigInt" },
                { typeof(AllowedContractFilter), "AllowedContract_filter" },
                { typeof(ApprovalFilter), "Approval_filter" },
                { typeof(ApprovalForAllFilter), "ApprovalForAll_filter" },
                { typeof(BaseUriChangedFilter), "BaseURIChanged_filter" },
                { typeof(BatchMetadataUpdateFilter), "BatchMetadataUpdate_filter" },
                { typeof(BlockHeight), "Block_height" },
                { typeof(BlockChangedFilter), "BlockChangedFilter" },
                { typeof(CollateralProviderUpdateParamsFilter), "CollateralProviderUpdateParams_filter" },
                { typeof(ContractApprovedFilter), "ContractApproved_filter" },
                { typeof(DealProviderUpdateParamsFilter), "DealProviderUpdateParams_filter" },
                { typeof(DelayVaultOwnershipTransferredFilter), "DelayVaultOwnershipTransferred_filter" },
                { typeof(DelayVaultPausedFilter), "DelayVaultPaused_filter" },
                { typeof(DelayVaultProviderVaultValueChangedFilter), "DelayVaultProviderVaultValueChanged_filter" },
                { typeof(DelayVaultTransferInFilter), "DelayVaultTransferIn_filter" },
                { typeof(DelayVaultTransferOutFilter), "DelayVaultTransferOut_filter" },
                { typeof(DelayVaultUnpausedFilter), "DelayVaultUnpaused_filter" },
                { typeof(DepositedFilter), "Deposited_filter" },
                { typeof(DispenserProviderFirewallAdminUpdatedFilter), "DispenserProviderFirewallAdminUpdated_filter" },
                { typeof(DispenserProviderFirewallUpdatedFilter), "DispenserProviderFirewallUpdated_filter" },
                { typeof(DispenserProviderUpdateParamsFilter), "DispenserProviderUpdateParams_filter" },
                { typeof(DispenserTokenReserveFilter), "DispenserTokenReserve_filter" },
                { typeof(Eip712DomainChangedFilter), "EIP712DomainChanged_filter" },
                { typeof(FirewallAdminUpdatedFilter), "FirewallAdminUpdated_filter" },
                { typeof(FirewallUpdatedFilter), "FirewallUpdated_filter" },
                { typeof(GovernorUpdatedFilter), "GovernorUpdated_filter" },
                { typeof(InvestedFilter), "Invested_filter" },
                { typeof(InvestNewPoolCreatedFilter), "InvestNewPoolCreated_filter" },
                { typeof(InvestProviderEip712DomainChangedFilter), "InvestProviderEIP712DomainChanged_filter" },
                { typeof(InvestProviderFirewallAdminUpdatedFilter), "InvestProviderFirewallAdminUpdated_filter" },
                { typeof(InvestProviderFirewallUpdatedFilter), "InvestProviderFirewallUpdated_filter" },
                { typeof(InvestProviderUpdateParamsFilter), "InvestProviderUpdateParams_filter" },
                { typeof(LockDealNftOwnershipTransferredFilter), "LockDealNFTOwnershipTransferred_filter" },
                { typeof(LockDealProviderFirewallAdminUpdatedFilter), "LockDealProviderFirewallAdminUpdated_filter" },
                { typeof(LockDealProviderFirewallUpdatedFilter), "LockDealProviderFirewallUpdated_filter" },
                { typeof(LockDealProviderUpdateParamsFilter), "LockDealProviderUpdateParams_filter" },
                { typeof(MetadataUpdateFilter), "MetadataUpdate_filter" },
                { typeof(NewPoolCreatedFilter), "NewPoolCreated_filter" },
                { typeof(NewVaultCreatedFilter), "NewVaultCreated_filter" },
                { typeof(OldDealProviderFirewallAdminUpdatedFilter), "OldDealProviderFirewallAdminUpdated_filter" },
                { typeof(OldDealProviderFirewallUpdatedFilter), "OldDealProviderFirewallUpdated_filter" },
                { typeof(OldDealProviderUpdateParamsFilter), "OldDealProviderUpdateParams_filter" },
                { typeof(OldLockDealProviderFirewallAdminUpdatedFilter), "OldLockDealProviderFirewallAdminUpdated_filter" },
                { typeof(OldLockDealProviderFirewallUpdatedFilter), "OldLockDealProviderFirewallUpdated_filter" },
                { typeof(OldLockDealProviderUpdateParamsFilter), "OldLockDealProviderUpdateParams_filter" },
                { typeof(OldTimedDealProviderFirewallAdminUpdatedFilter), "OldTimedDealProviderFirewallAdminUpdated_filter" },
                { typeof(OldTimedDealProviderFirewallUpdatedFilter), "OldTimedDealProviderFirewallUpdated_filter" },
                { typeof(OldTimedDealProviderUpdateParamsFilter), "OldTimedDealProviderUpdateParams_filter" },
                { typeof(OwnershipTransferredFilter), "OwnershipTransferred_filter" },
                { typeof(PoolCreatedFilter), "PoolCreated_filter" },
                { typeof(PoolDataFilter), "PoolData_filter" },
                { typeof(PoolSplitFilter), "PoolSplit_filter" },
                { typeof(PoolxLockedBalanceFilter), "PoolxLockedBalance_filter" },
                { typeof(PoolxUnlocksFilter), "PoolxUnlocks_filter" },
                { typeof(RedeemedTokensFilter), "RedeemedTokens_filter" },
                { typeof(RefundProviderUpdateParamsFilter), "RefundProviderUpdateParams_filter" },
                { typeof(TimedDealProviderFirewallAdminUpdatedFilter), "TimedDealProviderFirewallAdminUpdated_filter" },
                { typeof(TimedDealProviderFirewallUpdatedFilter), "TimedDealProviderFirewallUpdated_filter" },
                { typeof(TimedDealProviderUpdateParamsFilter), "TimedDealProviderUpdateParams_filter" },
                { typeof(TokenRedemptionApprovalFilter), "TokenRedemptionApproval_filter" },
                { typeof(TokensDispensedFilter), "TokensDispensed_filter" },
                { typeof(TokenStatusFilterFilter), "TokenStatusFilter_filter" },
                { typeof(TokenWithdrawnFilter), "TokenWithdrawn_filter" },
                { typeof(TotalInvestedFilter), "TotalInvested_filter" },
                { typeof(TotalUnlocksAmountFilter), "TotalUnlocksAmount_filter" },
                { typeof(TotalUserInvestedFilter), "TotalUserInvested_filter" },
                { typeof(TransferFilter), "Transfer_filter" },
                { typeof(UpdatedMaxDelayFilter), "UpdatedMaxDelay_filter" },
                { typeof(UpdatedMinDelaysFilter), "UpdatedMinDelays_filter" },
                { typeof(UpdateParamsFilter), "UpdateParams_filter" },
                { typeof(VaultFilter), "Vault_filter" },
                { typeof(VaultRoyaltySetFilter), "VaultRoyaltySet_filter" },
                { typeof(VaultStatusUpdateFilter), "VaultStatusUpdate_filter" },
                { typeof(VaultValueChangedFilter), "VaultValueChanged_filter" },
                { typeof(WithdrawnFilter), "Withdrawn_filter" }
            };
    }
    #endregion

    #region enums
    public enum AggregationInterval
    {
        [EnumMember(Value = "hour")] Hour,
        [EnumMember(Value = "day")] Day
    }

    public enum AllowedContractOrderBy
    {
        [EnumMember(Value = "id")] Id,
        contractAddress,
        [EnumMember(Value = "status")] Status,
        blockTimestamp
    }

    public enum ApprovalForAllOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "owner")] Owner,
        [EnumMember(Value = "operator")] Operator,
        [EnumMember(Value = "approved")] Approved,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum ApprovalOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "owner")] Owner,
        [EnumMember(Value = "approved")] Approved,
        tokenId,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum BaseUriChangedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        oldBaseURI,
        newBaseURI,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum BatchMetadataUpdateOrderBy
    {
        [EnumMember(Value = "id")] Id,
        _fromTokenId,
        _toTokenId,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum CollateralProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum ContractApprovedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        contractAddress,
        [EnumMember(Value = "status")] Status,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DealProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DelayVaultOwnershipTransferredOrderBy
    {
        [EnumMember(Value = "id")] Id,
        previousOwner,
        newOwner,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DelayVaultPausedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "account")] Account,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DelayVaultProviderVaultValueChangedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "token")] Token,
        [EnumMember(Value = "owner")] Owner,
        [EnumMember(Value = "amount")] Amount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DelayVaultTransferInOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Amount,
        From,
        Token,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DelayVaultTransferOutOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Amount,
        To,
        Token,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DelayVaultUnpausedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "account")] Account,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DepositedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        vaultId,
        tokenAddress,
        [EnumMember(Value = "amount")] Amount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DispenserProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DispenserProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DispenserProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum DispenserTokenReserveOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        totalAmountTaken,
        leftAmount
    }

    public enum Eip712DomainChangedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum FirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum FirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum GovernorUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        oldGovernor,
        newGovernor,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum InvestNewPoolCreatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "owner")] Owner,
        poolAmount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum InvestProviderEip712DomainChangedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum InvestProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum InvestProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum InvestProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum InvestedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "user")] User,
        [EnumMember(Value = "amount")] Amount,
        newNonce,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum LockDealNftOwnershipTransferredOrderBy
    {
        [EnumMember(Value = "id")] Id,
        previousOwner,
        newOwner,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum LockDealProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum LockDealProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum LockDealProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum MetadataUpdateOrderBy
    {
        [EnumMember(Value = "id")] Id,
        _tokenId,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum NewPoolCreatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        PoolId,
        Token,
        FinishTime,
        StartAmount,
        Owner,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum NewVaultCreatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        vaultId,
        tokenAddress,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldDealProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldDealProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldDealProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldLockDealProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldLockDealProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldLockDealProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldTimedDealProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldTimedDealProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OldTimedDealProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum OrderDirection
    {
        [EnumMember(Value = "asc")] Asc,
        [EnumMember(Value = "desc")] Desc
    }

    public enum OwnershipTransferredOrderBy
    {
        [EnumMember(Value = "id")] Id,
        previousOwner,
        newOwner,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum PoolCreatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "provider")] Provider,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum PoolDataOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        previousOwner,
        [EnumMember(Value = "owner")] Owner,
        [EnumMember(Value = "provider")] Provider,
        providerName,
        vaultId,
        tokenAddress,
        [EnumMember(Value = "params")] Params
    }

    public enum PoolSplitOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "owner")] Owner,
        newPoolId,
        newOwner,
        splitLeftAmount,
        newSplitLeftAmount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum PoolxLockedBalanceOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "owner")] Owner,
        delayVaultAmount,
        delayVaultProviderAmount,
        totalAmount,
        blockTimestamp
    }

    public enum PoolxUnlocksOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "owner")] Owner,
        [EnumMember(Value = "amount")] Amount,
        createdAt,
        unlocksAt
    }

    public enum RedeemedTokensOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Token,
        Amount,
        RemaningAmount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum RefundProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TimedDealProviderFirewallAdminUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newAdmin,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TimedDealProviderFirewallUpdatedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        newFirewall,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TimedDealProviderUpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TokenRedemptionApprovalOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Token,
        User,
        Status,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TokenStatusFilterOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Token,
        Status,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TokenWithdrawnOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "owner")] Owner,
        withdrawnAmount,
        leftAmount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TokensDispensedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "user")] User,
        amountTaken,
        leftAmount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum TotalInvestedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        poolAmount,
        totalInvested,
        leftAmount
    }

    public enum TotalUnlocksAmountOrderBy
    {
        [EnumMember(Value = "id")] Id,
        totalUnlocksAmount,
        blockTimestamp
    }

    public enum TotalUserInvestedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "user")] User,
        [EnumMember(Value = "amount")] Amount,
        blockTimestamp
    }

    public enum TransferOrderBy
    {
        [EnumMember(Value = "id")] Id,
        [EnumMember(Value = "from")] From,
        [EnumMember(Value = "to")] To,
        tokenId,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum UpdateParamsOrderBy
    {
        [EnumMember(Value = "id")] Id,
        poolId,
        [EnumMember(Value = "params")] Params,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum UpdatedMaxDelayOrderBy
    {
        [EnumMember(Value = "id")] Id,
        OldDelay,
        NewDelay,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum UpdatedMinDelaysOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Token,
        Amounts,
        StartDelays,
        CliffDelays,
        FinishDelays,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum VaultRoyaltySetOrderBy
    {
        [EnumMember(Value = "id")] Id,
        vaultId,
        tokenAddress,
        [EnumMember(Value = "receiver")] Receiver,
        feeNumerator,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum VaultStatusUpdateOrderBy
    {
        [EnumMember(Value = "id")] Id,
        vaultId,
        depositStatus,
        withdrawStatus,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum VaultValueChangedOrderBy
    {
        [EnumMember(Value = "id")] Id,
        Token,
        Owner,
        Amount,
        StartDelay,
        CliffDelay,
        FinishDelay,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum VaultOrderBy
    {
        [EnumMember(Value = "id")] Id,
        vaultId,
        vaultAddress,
        [EnumMember(Value = "token")] Token,
        [EnumMember(Value = "balance")] Balance,
        depositStatus,
        withdrawStatus,
        royaltyReceiver,
        royaltyFeeNumerator
    }

    public enum WithdrawnOrderBy
    {
        [EnumMember(Value = "id")] Id,
        vaultId,
        tokenAddress,
        [EnumMember(Value = "to")] To,
        [EnumMember(Value = "amount")] Amount,
        blockNumber,
        blockTimestamp,
        transactionHash
    }

    public enum SubgraphErrorPolicy
    {
        [EnumMember(Value = "allow")] Allow,
        [EnumMember(Value = "deny")] Deny
    }
    #endregion

    #region directives
    public class SkipDirective : GraphQlDirective
    {
        public SkipDirective(QueryBuilderParameter<bool> @if) : base("skip")
        {
            AddArgument("if", @if);
        }
    }

    public class IncludeDirective : GraphQlDirective
    {
        public IncludeDirective(QueryBuilderParameter<bool> @if) : base("include")
        {
            AddArgument("if", @if);
        }
    }

    public class EntityDirective : GraphQlDirective
    {
        public EntityDirective() : base("entity")
        {
        }
    }

    public class SubgraphIdDirective : GraphQlDirective
    {
        public SubgraphIdDirective(QueryBuilderParameter<string> id) : base("subgraphId")
        {
            AddArgument("id", id);
        }
    }
    #endregion

    #region builder classes
    public partial class AllowedContractQueryBuilder : GraphQlQueryBuilder<AllowedContractQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "contractAddress" },
                new GraphQlFieldMetadata { Name = "status" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" }
            };

        protected override string TypeName { get { return "AllowedContract"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public AllowedContractQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public AllowedContractQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public AllowedContractQueryBuilder WithContractAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("contractAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public AllowedContractQueryBuilder ExceptContractAddress()
        {
            return ExceptField("contractAddress");
        }

        public AllowedContractQueryBuilder WithStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("status", alias, new GraphQlDirective[] { skip, include });
        }

        public AllowedContractQueryBuilder ExceptStatus()
        {
            return ExceptField("status");
        }

        public AllowedContractQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public AllowedContractQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }
    }

    public partial class ApprovalQueryBuilder : GraphQlQueryBuilder<ApprovalQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "approved" },
                new GraphQlFieldMetadata { Name = "tokenId" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "Approval"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ApprovalQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public ApprovalQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public ApprovalQueryBuilder WithApproved(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("approved", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptApproved()
        {
            return ExceptField("approved");
        }

        public ApprovalQueryBuilder WithTokenId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenId", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptTokenId()
        {
            return ExceptField("tokenId");
        }

        public ApprovalQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public ApprovalQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public ApprovalQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class ApprovalForAllQueryBuilder : GraphQlQueryBuilder<ApprovalForAllQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "operator" },
                new GraphQlFieldMetadata { Name = "approved" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "ApprovalForAll"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ApprovalForAllQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public ApprovalForAllQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public ApprovalForAllQueryBuilder WithOperator(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("operator", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptOperator()
        {
            return ExceptField("operator");
        }

        public ApprovalForAllQueryBuilder WithApproved(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("approved", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptApproved()
        {
            return ExceptField("approved");
        }

        public ApprovalForAllQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public ApprovalForAllQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public ApprovalForAllQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public ApprovalForAllQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class BaseUriChangedQueryBuilder : GraphQlQueryBuilder<BaseUriChangedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "oldBaseURI" },
                new GraphQlFieldMetadata { Name = "newBaseURI" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "BaseURIChanged"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public BaseUriChangedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public BaseUriChangedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public BaseUriChangedQueryBuilder WithOldBaseUri(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("oldBaseURI", alias, new GraphQlDirective[] { skip, include });
        }

        public BaseUriChangedQueryBuilder ExceptOldBaseUri()
        {
            return ExceptField("oldBaseURI");
        }

        public BaseUriChangedQueryBuilder WithNewBaseUri(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newBaseURI", alias, new GraphQlDirective[] { skip, include });
        }

        public BaseUriChangedQueryBuilder ExceptNewBaseUri()
        {
            return ExceptField("newBaseURI");
        }

        public BaseUriChangedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public BaseUriChangedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public BaseUriChangedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public BaseUriChangedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public BaseUriChangedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public BaseUriChangedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class BatchMetadataUpdateQueryBuilder : GraphQlQueryBuilder<BatchMetadataUpdateQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "_fromTokenId" },
                new GraphQlFieldMetadata { Name = "_toTokenId" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "BatchMetadataUpdate"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public BatchMetadataUpdateQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public BatchMetadataUpdateQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public BatchMetadataUpdateQueryBuilder WithFromTokenId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("_fromTokenId", alias, new GraphQlDirective[] { skip, include });
        }

        public BatchMetadataUpdateQueryBuilder ExceptFromTokenId()
        {
            return ExceptField("_fromTokenId");
        }

        public BatchMetadataUpdateQueryBuilder WithToTokenId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("_toTokenId", alias, new GraphQlDirective[] { skip, include });
        }

        public BatchMetadataUpdateQueryBuilder ExceptToTokenId()
        {
            return ExceptField("_toTokenId");
        }

        public BatchMetadataUpdateQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public BatchMetadataUpdateQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public BatchMetadataUpdateQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public BatchMetadataUpdateQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public BatchMetadataUpdateQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public BatchMetadataUpdateQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class CollateralProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<CollateralProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "CollateralProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public CollateralProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public CollateralProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public CollateralProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public CollateralProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public CollateralProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public CollateralProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public CollateralProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public CollateralProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public CollateralProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public CollateralProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public CollateralProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public CollateralProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class ContractApprovedQueryBuilder : GraphQlQueryBuilder<ContractApprovedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "contractAddress" },
                new GraphQlFieldMetadata { Name = "status" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "ContractApproved"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public ContractApprovedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public ContractApprovedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public ContractApprovedQueryBuilder WithContractAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("contractAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public ContractApprovedQueryBuilder ExceptContractAddress()
        {
            return ExceptField("contractAddress");
        }

        public ContractApprovedQueryBuilder WithStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("status", alias, new GraphQlDirective[] { skip, include });
        }

        public ContractApprovedQueryBuilder ExceptStatus()
        {
            return ExceptField("status");
        }

        public ContractApprovedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public ContractApprovedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public ContractApprovedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public ContractApprovedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public ContractApprovedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public ContractApprovedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DealProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<DealProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DealProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DealProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DealProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DealProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public DealProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public DealProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public DealProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public DealProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DealProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DealProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DealProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DealProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DealProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DelayVaultOwnershipTransferredQueryBuilder : GraphQlQueryBuilder<DelayVaultOwnershipTransferredQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "previousOwner" },
                new GraphQlFieldMetadata { Name = "newOwner" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DelayVaultOwnershipTransferred"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DelayVaultOwnershipTransferredQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultOwnershipTransferredQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DelayVaultOwnershipTransferredQueryBuilder WithPreviousOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("previousOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultOwnershipTransferredQueryBuilder ExceptPreviousOwner()
        {
            return ExceptField("previousOwner");
        }

        public DelayVaultOwnershipTransferredQueryBuilder WithNewOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultOwnershipTransferredQueryBuilder ExceptNewOwner()
        {
            return ExceptField("newOwner");
        }

        public DelayVaultOwnershipTransferredQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultOwnershipTransferredQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DelayVaultOwnershipTransferredQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultOwnershipTransferredQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DelayVaultOwnershipTransferredQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultOwnershipTransferredQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DelayVaultPausedQueryBuilder : GraphQlQueryBuilder<DelayVaultPausedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "account" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DelayVaultPaused"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DelayVaultPausedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultPausedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DelayVaultPausedQueryBuilder WithAccount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("account", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultPausedQueryBuilder ExceptAccount()
        {
            return ExceptField("account");
        }

        public DelayVaultPausedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultPausedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DelayVaultPausedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultPausedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DelayVaultPausedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultPausedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DelayVaultProviderVaultValueChangedQueryBuilder : GraphQlQueryBuilder<DelayVaultProviderVaultValueChangedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "token" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "amount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DelayVaultProviderVaultValueChanged"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DelayVaultProviderVaultValueChangedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("token", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptToken()
        {
            return ExceptField("token");
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amount", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptAmount()
        {
            return ExceptField("amount");
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultProviderVaultValueChangedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DelayVaultTransferInQueryBuilder : GraphQlQueryBuilder<DelayVaultTransferInQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Amount" },
                new GraphQlFieldMetadata { Name = "From" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DelayVaultTransferIn"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DelayVaultTransferInQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DelayVaultTransferInQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Amount", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptAmount()
        {
            return ExceptField("Amount");
        }

        public DelayVaultTransferInQueryBuilder WithFrom(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("From", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptFrom()
        {
            return ExceptField("From");
        }

        public DelayVaultTransferInQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public DelayVaultTransferInQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DelayVaultTransferInQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DelayVaultTransferInQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferInQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DelayVaultTransferOutQueryBuilder : GraphQlQueryBuilder<DelayVaultTransferOutQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Amount" },
                new GraphQlFieldMetadata { Name = "To" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DelayVaultTransferOut"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DelayVaultTransferOutQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DelayVaultTransferOutQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Amount", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptAmount()
        {
            return ExceptField("Amount");
        }

        public DelayVaultTransferOutQueryBuilder WithTo(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("To", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptTo()
        {
            return ExceptField("To");
        }

        public DelayVaultTransferOutQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public DelayVaultTransferOutQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DelayVaultTransferOutQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DelayVaultTransferOutQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultTransferOutQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DelayVaultUnpausedQueryBuilder : GraphQlQueryBuilder<DelayVaultUnpausedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "account" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DelayVaultUnpaused"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DelayVaultUnpausedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultUnpausedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DelayVaultUnpausedQueryBuilder WithAccount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("account", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultUnpausedQueryBuilder ExceptAccount()
        {
            return ExceptField("account");
        }

        public DelayVaultUnpausedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultUnpausedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DelayVaultUnpausedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultUnpausedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DelayVaultUnpausedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DelayVaultUnpausedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DepositedQueryBuilder : GraphQlQueryBuilder<DepositedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "tokenAddress" },
                new GraphQlFieldMetadata { Name = "amount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "Deposited"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DepositedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DepositedQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public DepositedQueryBuilder WithTokenAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptTokenAddress()
        {
            return ExceptField("tokenAddress");
        }

        public DepositedQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amount", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptAmount()
        {
            return ExceptField("amount");
        }

        public DepositedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DepositedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DepositedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DepositedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DispenserProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<DispenserProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DispenserProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DispenserProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DispenserProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<DispenserProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DispenserProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DispenserProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DispenserProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public DispenserProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DispenserProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DispenserProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DispenserProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<DispenserProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "DispenserProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DispenserProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DispenserProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public DispenserProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public DispenserProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public DispenserProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public DispenserProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class DispenserTokenReserveQueryBuilder : GraphQlQueryBuilder<DispenserTokenReserveQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "totalAmountTaken" },
                new GraphQlFieldMetadata { Name = "leftAmount" }
            };

        protected override string TypeName { get { return "DispenserTokenReserve"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public DispenserTokenReserveQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserTokenReserveQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public DispenserTokenReserveQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserTokenReserveQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public DispenserTokenReserveQueryBuilder WithTotalAmountTaken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("totalAmountTaken", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserTokenReserveQueryBuilder ExceptTotalAmountTaken()
        {
            return ExceptField("totalAmountTaken");
        }

        public DispenserTokenReserveQueryBuilder WithLeftAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("leftAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public DispenserTokenReserveQueryBuilder ExceptLeftAmount()
        {
            return ExceptField("leftAmount");
        }
    }

    public partial class Eip712DomainChangedQueryBuilder : GraphQlQueryBuilder<Eip712DomainChangedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "EIP712DomainChanged"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public Eip712DomainChangedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public Eip712DomainChangedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public Eip712DomainChangedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public Eip712DomainChangedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public Eip712DomainChangedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public Eip712DomainChangedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public Eip712DomainChangedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public Eip712DomainChangedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class FirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<FirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "FirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public FirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public FirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public FirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public FirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public FirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class FirewallUpdatedQueryBuilder : GraphQlQueryBuilder<FirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "FirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public FirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public FirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public FirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public FirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public FirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public FirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class GovernorUpdatedQueryBuilder : GraphQlQueryBuilder<GovernorUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "oldGovernor" },
                new GraphQlFieldMetadata { Name = "newGovernor" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "GovernorUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public GovernorUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public GovernorUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public GovernorUpdatedQueryBuilder WithOldGovernor(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("oldGovernor", alias, new GraphQlDirective[] { skip, include });
        }

        public GovernorUpdatedQueryBuilder ExceptOldGovernor()
        {
            return ExceptField("oldGovernor");
        }

        public GovernorUpdatedQueryBuilder WithNewGovernor(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newGovernor", alias, new GraphQlDirective[] { skip, include });
        }

        public GovernorUpdatedQueryBuilder ExceptNewGovernor()
        {
            return ExceptField("newGovernor");
        }

        public GovernorUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public GovernorUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public GovernorUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public GovernorUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public GovernorUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public GovernorUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class InvestNewPoolCreatedQueryBuilder : GraphQlQueryBuilder<InvestNewPoolCreatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "poolAmount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "InvestNewPoolCreated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public InvestNewPoolCreatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public InvestNewPoolCreatedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public InvestNewPoolCreatedQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public InvestNewPoolCreatedQueryBuilder WithPoolAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptPoolAmount()
        {
            return ExceptField("poolAmount");
        }

        public InvestNewPoolCreatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public InvestNewPoolCreatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public InvestNewPoolCreatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestNewPoolCreatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class InvestProviderEip712DomainChangedQueryBuilder : GraphQlQueryBuilder<InvestProviderEip712DomainChangedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "InvestProviderEIP712DomainChanged"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public InvestProviderEip712DomainChangedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderEip712DomainChangedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public InvestProviderEip712DomainChangedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderEip712DomainChangedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public InvestProviderEip712DomainChangedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderEip712DomainChangedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public InvestProviderEip712DomainChangedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderEip712DomainChangedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class InvestProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<InvestProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "InvestProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public InvestProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class InvestProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<InvestProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "InvestProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public InvestProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public InvestProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public InvestProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public InvestProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public InvestProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class InvestProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<InvestProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "InvestProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public InvestProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public InvestProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public InvestProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public InvestProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public InvestProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public InvestProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class InvestedQueryBuilder : GraphQlQueryBuilder<InvestedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "user" },
                new GraphQlFieldMetadata { Name = "amount" },
                new GraphQlFieldMetadata { Name = "newNonce" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "Invested"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public InvestedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public InvestedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public InvestedQueryBuilder WithUser(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("user", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptUser()
        {
            return ExceptField("user");
        }

        public InvestedQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amount", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptAmount()
        {
            return ExceptField("amount");
        }

        public InvestedQueryBuilder WithNewNonce(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newNonce", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptNewNonce()
        {
            return ExceptField("newNonce");
        }

        public InvestedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public InvestedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public InvestedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public InvestedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class LockDealNftOwnershipTransferredQueryBuilder : GraphQlQueryBuilder<LockDealNftOwnershipTransferredQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "previousOwner" },
                new GraphQlFieldMetadata { Name = "newOwner" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "LockDealNFTOwnershipTransferred"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LockDealNftOwnershipTransferredQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealNftOwnershipTransferredQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public LockDealNftOwnershipTransferredQueryBuilder WithPreviousOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("previousOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealNftOwnershipTransferredQueryBuilder ExceptPreviousOwner()
        {
            return ExceptField("previousOwner");
        }

        public LockDealNftOwnershipTransferredQueryBuilder WithNewOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealNftOwnershipTransferredQueryBuilder ExceptNewOwner()
        {
            return ExceptField("newOwner");
        }

        public LockDealNftOwnershipTransferredQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealNftOwnershipTransferredQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public LockDealNftOwnershipTransferredQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealNftOwnershipTransferredQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public LockDealNftOwnershipTransferredQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealNftOwnershipTransferredQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class LockDealProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<LockDealProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "LockDealProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LockDealProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class LockDealProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<LockDealProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "LockDealProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LockDealProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public LockDealProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public LockDealProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public LockDealProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public LockDealProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class LockDealProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<LockDealProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "LockDealProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public LockDealProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public LockDealProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public LockDealProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public LockDealProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public LockDealProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public LockDealProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public LockDealProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class MetadataUpdateQueryBuilder : GraphQlQueryBuilder<MetadataUpdateQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "_tokenId" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "MetadataUpdate"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MetadataUpdateQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public MetadataUpdateQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public MetadataUpdateQueryBuilder WithTokenId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("_tokenId", alias, new GraphQlDirective[] { skip, include });
        }

        public MetadataUpdateQueryBuilder ExceptTokenId()
        {
            return ExceptField("_tokenId");
        }

        public MetadataUpdateQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public MetadataUpdateQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public MetadataUpdateQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public MetadataUpdateQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public MetadataUpdateQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public MetadataUpdateQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class NewPoolCreatedQueryBuilder : GraphQlQueryBuilder<NewPoolCreatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "PoolId" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "FinishTime" },
                new GraphQlFieldMetadata { Name = "StartAmount" },
                new GraphQlFieldMetadata { Name = "Owner" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "NewPoolCreated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public NewPoolCreatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public NewPoolCreatedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("PoolId", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptPoolId()
        {
            return ExceptField("PoolId");
        }

        public NewPoolCreatedQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public NewPoolCreatedQueryBuilder WithFinishTime(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("FinishTime", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptFinishTime()
        {
            return ExceptField("FinishTime");
        }

        public NewPoolCreatedQueryBuilder WithStartAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("StartAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptStartAmount()
        {
            return ExceptField("StartAmount");
        }

        public NewPoolCreatedQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Owner", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptOwner()
        {
            return ExceptField("Owner");
        }

        public NewPoolCreatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public NewPoolCreatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public NewPoolCreatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public NewPoolCreatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class NewVaultCreatedQueryBuilder : GraphQlQueryBuilder<NewVaultCreatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "tokenAddress" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "NewVaultCreated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public NewVaultCreatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public NewVaultCreatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public NewVaultCreatedQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public NewVaultCreatedQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public NewVaultCreatedQueryBuilder WithTokenAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public NewVaultCreatedQueryBuilder ExceptTokenAddress()
        {
            return ExceptField("tokenAddress");
        }

        public NewVaultCreatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public NewVaultCreatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public NewVaultCreatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public NewVaultCreatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public NewVaultCreatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public NewVaultCreatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldDealProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<OldDealProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldDealProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldDealProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldDealProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<OldDealProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldDealProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldDealProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldDealProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public OldDealProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldDealProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldDealProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldDealProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<OldDealProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldDealProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldDealProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldDealProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public OldDealProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public OldDealProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldDealProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldDealProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldDealProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldLockDealProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<OldLockDealProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldLockDealProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldLockDealProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<OldLockDealProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldLockDealProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldLockDealProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldLockDealProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<OldLockDealProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldLockDealProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldLockDealProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldLockDealProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public OldLockDealProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public OldLockDealProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldLockDealProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldLockDealProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldLockDealProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldTimedDealProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<OldTimedDealProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldTimedDealProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldTimedDealProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<OldTimedDealProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldTimedDealProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldTimedDealProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OldTimedDealProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<OldTimedDealProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OldTimedDealProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OldTimedDealProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OldTimedDealProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class OwnershipTransferredQueryBuilder : GraphQlQueryBuilder<OwnershipTransferredQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "previousOwner" },
                new GraphQlFieldMetadata { Name = "newOwner" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "OwnershipTransferred"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public OwnershipTransferredQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public OwnershipTransferredQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public OwnershipTransferredQueryBuilder WithPreviousOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("previousOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public OwnershipTransferredQueryBuilder ExceptPreviousOwner()
        {
            return ExceptField("previousOwner");
        }

        public OwnershipTransferredQueryBuilder WithNewOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public OwnershipTransferredQueryBuilder ExceptNewOwner()
        {
            return ExceptField("newOwner");
        }

        public OwnershipTransferredQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public OwnershipTransferredQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public OwnershipTransferredQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public OwnershipTransferredQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public OwnershipTransferredQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public OwnershipTransferredQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class PoolCreatedQueryBuilder : GraphQlQueryBuilder<PoolCreatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "provider" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "PoolCreated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PoolCreatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolCreatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PoolCreatedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolCreatedQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public PoolCreatedQueryBuilder WithProvider(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("provider", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolCreatedQueryBuilder ExceptProvider()
        {
            return ExceptField("provider");
        }

        public PoolCreatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolCreatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public PoolCreatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolCreatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public PoolCreatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolCreatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class PoolDataQueryBuilder : GraphQlQueryBuilder<PoolDataQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "previousOwner" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "provider" },
                new GraphQlFieldMetadata { Name = "providerName" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "tokenAddress" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true }
            };

        protected override string TypeName { get { return "PoolData"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PoolDataQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PoolDataQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public PoolDataQueryBuilder WithPreviousOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("previousOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptPreviousOwner()
        {
            return ExceptField("previousOwner");
        }

        public PoolDataQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public PoolDataQueryBuilder WithProvider(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("provider", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptProvider()
        {
            return ExceptField("provider");
        }

        public PoolDataQueryBuilder WithProviderName(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("providerName", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptProviderName()
        {
            return ExceptField("providerName");
        }

        public PoolDataQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public PoolDataQueryBuilder WithTokenAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptTokenAddress()
        {
            return ExceptField("tokenAddress");
        }

        public PoolDataQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolDataQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }
    }

    public partial class PoolSplitQueryBuilder : GraphQlQueryBuilder<PoolSplitQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "newPoolId" },
                new GraphQlFieldMetadata { Name = "newOwner" },
                new GraphQlFieldMetadata { Name = "splitLeftAmount" },
                new GraphQlFieldMetadata { Name = "newSplitLeftAmount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "PoolSplit"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PoolSplitQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PoolSplitQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public PoolSplitQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public PoolSplitQueryBuilder WithNewPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newPoolId", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptNewPoolId()
        {
            return ExceptField("newPoolId");
        }

        public PoolSplitQueryBuilder WithNewOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newOwner", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptNewOwner()
        {
            return ExceptField("newOwner");
        }

        public PoolSplitQueryBuilder WithSplitLeftAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("splitLeftAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptSplitLeftAmount()
        {
            return ExceptField("splitLeftAmount");
        }

        public PoolSplitQueryBuilder WithNewSplitLeftAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newSplitLeftAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptNewSplitLeftAmount()
        {
            return ExceptField("newSplitLeftAmount");
        }

        public PoolSplitQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public PoolSplitQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public PoolSplitQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolSplitQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class PoolxLockedBalanceQueryBuilder : GraphQlQueryBuilder<PoolxLockedBalanceQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "delayVaultAmount" },
                new GraphQlFieldMetadata { Name = "delayVaultProviderAmount" },
                new GraphQlFieldMetadata { Name = "totalAmount" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" }
            };

        protected override string TypeName { get { return "PoolxLockedBalance"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PoolxLockedBalanceQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxLockedBalanceQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PoolxLockedBalanceQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxLockedBalanceQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public PoolxLockedBalanceQueryBuilder WithDelayVaultAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("delayVaultAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxLockedBalanceQueryBuilder ExceptDelayVaultAmount()
        {
            return ExceptField("delayVaultAmount");
        }

        public PoolxLockedBalanceQueryBuilder WithDelayVaultProviderAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("delayVaultProviderAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxLockedBalanceQueryBuilder ExceptDelayVaultProviderAmount()
        {
            return ExceptField("delayVaultProviderAmount");
        }

        public PoolxLockedBalanceQueryBuilder WithTotalAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("totalAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxLockedBalanceQueryBuilder ExceptTotalAmount()
        {
            return ExceptField("totalAmount");
        }

        public PoolxLockedBalanceQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxLockedBalanceQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }
    }

    public partial class PoolxUnlocksQueryBuilder : GraphQlQueryBuilder<PoolxUnlocksQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "amount" },
                new GraphQlFieldMetadata { Name = "createdAt" },
                new GraphQlFieldMetadata { Name = "unlocksAt" }
            };

        protected override string TypeName { get { return "PoolxUnlocks"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public PoolxUnlocksQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxUnlocksQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public PoolxUnlocksQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxUnlocksQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public PoolxUnlocksQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxUnlocksQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public PoolxUnlocksQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amount", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxUnlocksQueryBuilder ExceptAmount()
        {
            return ExceptField("amount");
        }

        public PoolxUnlocksQueryBuilder WithCreatedAt(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("createdAt", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxUnlocksQueryBuilder ExceptCreatedAt()
        {
            return ExceptField("createdAt");
        }

        public PoolxUnlocksQueryBuilder WithUnlocksAt(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("unlocksAt", alias, new GraphQlDirective[] { skip, include });
        }

        public PoolxUnlocksQueryBuilder ExceptUnlocksAt()
        {
            return ExceptField("unlocksAt");
        }
    }

    public partial class QueryQueryBuilder : GraphQlQueryBuilder<QueryQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "governorUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(GovernorUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "governorUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(GovernorUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultOwnershipTransferred", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultOwnershipTransferredQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultOwnershipTransferreds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultOwnershipTransferredQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultPaused", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultPausedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultPauseds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultPausedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "redeemedTokens", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(RedeemedTokensQueryBuilder) },
                new GraphQlFieldMetadata { Name = "redeemedTokens_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(RedeemedTokensQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokenRedemptionApproval", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokenRedemptionApprovalQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokenRedemptionApprovals", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokenRedemptionApprovalQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokenStatusFilter", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokenStatusFilterQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokenStatusFilters", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokenStatusFilterQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultTransferIn", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultTransferInQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultTransferIns", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultTransferInQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultTransferOut", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultTransferOutQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultTransferOuts", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultTransferOutQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultUnpaused", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultUnpausedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultUnpauseds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultUnpausedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updatedMaxDelay", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UpdatedMaxDelayQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updatedMaxDelays", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UpdatedMaxDelayQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updatedMinDelays", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UpdatedMinDelaysQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updatedMinDelays_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UpdatedMinDelaysQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaultValueChanged", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultValueChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaultValueChangeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultValueChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "updateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(UpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultProviderVaultValueChanged", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultProviderVaultValueChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "delayVaultProviderVaultValueChangeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DelayVaultProviderVaultValueChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "newPoolCreated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(NewPoolCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "newPoolCreateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(NewPoolCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "deposited", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DepositedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "depositeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DepositedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "newVaultCreated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(NewVaultCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "newVaultCreateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(NewVaultCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "ownershipTransferred", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OwnershipTransferredQueryBuilder) },
                new GraphQlFieldMetadata { Name = "ownershipTransferreds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OwnershipTransferredQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaultRoyaltySet", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultRoyaltySetQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaultRoyaltySets", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultRoyaltySetQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaultStatusUpdate", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultStatusUpdateQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaultStatusUpdates", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultStatusUpdateQueryBuilder) },
                new GraphQlFieldMetadata { Name = "withdrawn", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(WithdrawnQueryBuilder) },
                new GraphQlFieldMetadata { Name = "withdrawns", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(WithdrawnQueryBuilder) },
                new GraphQlFieldMetadata { Name = "approval", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ApprovalQueryBuilder) },
                new GraphQlFieldMetadata { Name = "approvals", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ApprovalQueryBuilder) },
                new GraphQlFieldMetadata { Name = "approvalForAll", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ApprovalForAllQueryBuilder) },
                new GraphQlFieldMetadata { Name = "approvalForAlls", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ApprovalForAllQueryBuilder) },
                new GraphQlFieldMetadata { Name = "baseURIChanged", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(BaseUriChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "baseURIChangeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(BaseUriChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "batchMetadataUpdate", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(BatchMetadataUpdateQueryBuilder) },
                new GraphQlFieldMetadata { Name = "batchMetadataUpdates", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(BatchMetadataUpdateQueryBuilder) },
                new GraphQlFieldMetadata { Name = "contractApproved", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ContractApprovedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "contractApproveds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(ContractApprovedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "metadataUpdate", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(MetadataUpdateQueryBuilder) },
                new GraphQlFieldMetadata { Name = "metadataUpdates", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(MetadataUpdateQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealNFTOwnershipTransferred", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealNftOwnershipTransferredQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealNFTOwnershipTransferreds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealNftOwnershipTransferredQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolSplit", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolSplitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolSplits", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolSplitQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokenWithdrawn", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokenWithdrawnQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokenWithdrawns", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokenWithdrawnQueryBuilder) },
                new GraphQlFieldMetadata { Name = "transfer", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TransferQueryBuilder) },
                new GraphQlFieldMetadata { Name = "transfers", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TransferQueryBuilder) },
                new GraphQlFieldMetadata { Name = "firewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "firewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "firewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "firewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(FirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dealProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dealProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "lockDealProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(LockDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timedDealProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimedDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timedDealProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimedDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timedDealProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimedDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timedDealProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimedDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timedDealProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimedDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "timedDealProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TimedDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "eip712DomainChanged", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(Eip712DomainChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "eip712DomainChangeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(Eip712DomainChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolCreated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolCreateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokensDispensed", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokensDispensedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "tokensDispenseds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TokensDispensedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vault", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultQueryBuilder) },
                new GraphQlFieldMetadata { Name = "vaults", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(VaultQueryBuilder) },
                new GraphQlFieldMetadata { Name = "allowedContract", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(AllowedContractQueryBuilder) },
                new GraphQlFieldMetadata { Name = "allowedContracts", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(AllowedContractQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolxLockedBalance", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolxLockedBalanceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolxLockedBalances", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolxLockedBalanceQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolxUnlocks", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolxUnlocksQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolxUnlocks_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolxUnlocksQueryBuilder) },
                new GraphQlFieldMetadata { Name = "totalUnlocksAmount", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TotalUnlocksAmountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "totalUnlocksAmounts", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TotalUnlocksAmountQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolData", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolDataQueryBuilder) },
                new GraphQlFieldMetadata { Name = "poolDatas", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(PoolDataQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldDealProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldDealProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldDealProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldDealProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldDealProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldDealProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldLockDealProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldLockDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldLockDealProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldLockDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldLockDealProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldLockDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldLockDealProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldLockDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldLockDealProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldLockDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldLockDealProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldLockDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldTimedDealProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldTimedDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldTimedDealProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldTimedDealProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldTimedDealProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldTimedDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldTimedDealProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldTimedDealProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldTimedDealProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldTimedDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "oldTimedDealProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(OldTimedDealProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "collateralProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(CollateralProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "collateralProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(CollateralProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "refundProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(RefundProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "refundProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(RefundProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserTokenReserve", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserTokenReserveQueryBuilder) },
                new GraphQlFieldMetadata { Name = "dispenserTokenReserves", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(DispenserTokenReserveQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderEIP712DomainChanged", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderEip712DomainChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderEIP712DomainChangeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderEip712DomainChangedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderFirewallAdminUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderFirewallAdminUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderFirewallAdminUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderFirewallUpdated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderFirewallUpdateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderFirewallUpdatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "invested", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investeds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investNewPoolCreated", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestNewPoolCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investNewPoolCreateds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestNewPoolCreatedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderUpdateParams", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "investProviderUpdateParams_collection", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(InvestProviderUpdateParamsQueryBuilder) },
                new GraphQlFieldMetadata { Name = "totalUserInvested", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TotalUserInvestedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "totalUserInvesteds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TotalUserInvestedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "totalInvested", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TotalInvestedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "totalInvesteds", RequiresParameters = true, IsComplex = true, QueryBuilderType = typeof(TotalInvestedQueryBuilder) },
                new GraphQlFieldMetadata { Name = "_meta", IsComplex = true, QueryBuilderType = typeof(MetaQueryBuilder) }
            };

        protected override string TypeName { get { return "Query"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public QueryQueryBuilder(string operationName = null) : base("query", operationName)
        {
        }

        public QueryQueryBuilder WithParameter<T>(GraphQlQueryParameter<T> parameter)
        {
            return WithParameterInternal(parameter);
        }

        public QueryQueryBuilder WithGovernorUpdated(GovernorUpdatedQueryBuilder governorUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("governorUpdated", alias, governorUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptGovernorUpdated()
        {
            return ExceptField("governorUpdated");
        }

        public QueryQueryBuilder WithGovernorUpdateds(GovernorUpdatedQueryBuilder governorUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<GovernorUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<GovernorUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("governorUpdateds", alias, governorUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptGovernorUpdateds()
        {
            return ExceptField("governorUpdateds");
        }

        public QueryQueryBuilder WithDelayVaultOwnershipTransferred(DelayVaultOwnershipTransferredQueryBuilder delayVaultOwnershipTransferredQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultOwnershipTransferred", alias, delayVaultOwnershipTransferredQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultOwnershipTransferred()
        {
            return ExceptField("delayVaultOwnershipTransferred");
        }

        public QueryQueryBuilder WithDelayVaultOwnershipTransferreds(DelayVaultOwnershipTransferredQueryBuilder delayVaultOwnershipTransferredQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DelayVaultOwnershipTransferredOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DelayVaultOwnershipTransferredFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultOwnershipTransferreds", alias, delayVaultOwnershipTransferredQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultOwnershipTransferreds()
        {
            return ExceptField("delayVaultOwnershipTransferreds");
        }

        public QueryQueryBuilder WithDelayVaultPaused(DelayVaultPausedQueryBuilder delayVaultPausedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultPaused", alias, delayVaultPausedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultPaused()
        {
            return ExceptField("delayVaultPaused");
        }

        public QueryQueryBuilder WithDelayVaultPauseds(DelayVaultPausedQueryBuilder delayVaultPausedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DelayVaultPausedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DelayVaultPausedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultPauseds", alias, delayVaultPausedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultPauseds()
        {
            return ExceptField("delayVaultPauseds");
        }

        public QueryQueryBuilder WithRedeemedTokens(RedeemedTokensQueryBuilder redeemedTokensQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("redeemedTokens", alias, redeemedTokensQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptRedeemedTokens()
        {
            return ExceptField("redeemedTokens");
        }

        public QueryQueryBuilder WithRedeemedTokensCollection(RedeemedTokensQueryBuilder redeemedTokensQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<RedeemedTokensOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<RedeemedTokensFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("redeemedTokens_collection", alias, redeemedTokensQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptRedeemedTokensCollection()
        {
            return ExceptField("redeemedTokens_collection");
        }

        public QueryQueryBuilder WithTokenRedemptionApproval(TokenRedemptionApprovalQueryBuilder tokenRedemptionApprovalQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokenRedemptionApproval", alias, tokenRedemptionApprovalQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTokenRedemptionApproval()
        {
            return ExceptField("tokenRedemptionApproval");
        }

        public QueryQueryBuilder WithTokenRedemptionApprovals(TokenRedemptionApprovalQueryBuilder tokenRedemptionApprovalQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TokenRedemptionApprovalOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TokenRedemptionApprovalFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokenRedemptionApprovals", alias, tokenRedemptionApprovalQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTokenRedemptionApprovals()
        {
            return ExceptField("tokenRedemptionApprovals");
        }

        public QueryQueryBuilder WithTokenStatusFilter(TokenStatusFilterQueryBuilder tokenStatusFilterQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokenStatusFilter", alias, tokenStatusFilterQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTokenStatusFilter()
        {
            return ExceptField("tokenStatusFilter");
        }

        public QueryQueryBuilder WithTokenStatusFilters(TokenStatusFilterQueryBuilder tokenStatusFilterQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TokenStatusFilterOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TokenStatusFilterFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokenStatusFilters", alias, tokenStatusFilterQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTokenStatusFilters()
        {
            return ExceptField("tokenStatusFilters");
        }

        public QueryQueryBuilder WithDelayVaultTransferIn(DelayVaultTransferInQueryBuilder delayVaultTransferInQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultTransferIn", alias, delayVaultTransferInQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultTransferIn()
        {
            return ExceptField("delayVaultTransferIn");
        }

        public QueryQueryBuilder WithDelayVaultTransferIns(DelayVaultTransferInQueryBuilder delayVaultTransferInQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DelayVaultTransferInOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DelayVaultTransferInFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultTransferIns", alias, delayVaultTransferInQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultTransferIns()
        {
            return ExceptField("delayVaultTransferIns");
        }

        public QueryQueryBuilder WithDelayVaultTransferOut(DelayVaultTransferOutQueryBuilder delayVaultTransferOutQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultTransferOut", alias, delayVaultTransferOutQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultTransferOut()
        {
            return ExceptField("delayVaultTransferOut");
        }

        public QueryQueryBuilder WithDelayVaultTransferOuts(DelayVaultTransferOutQueryBuilder delayVaultTransferOutQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DelayVaultTransferOutOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DelayVaultTransferOutFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultTransferOuts", alias, delayVaultTransferOutQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultTransferOuts()
        {
            return ExceptField("delayVaultTransferOuts");
        }

        public QueryQueryBuilder WithDelayVaultUnpaused(DelayVaultUnpausedQueryBuilder delayVaultUnpausedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultUnpaused", alias, delayVaultUnpausedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultUnpaused()
        {
            return ExceptField("delayVaultUnpaused");
        }

        public QueryQueryBuilder WithDelayVaultUnpauseds(DelayVaultUnpausedQueryBuilder delayVaultUnpausedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DelayVaultUnpausedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DelayVaultUnpausedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultUnpauseds", alias, delayVaultUnpausedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultUnpauseds()
        {
            return ExceptField("delayVaultUnpauseds");
        }

        public QueryQueryBuilder WithUpdatedMaxDelay(UpdatedMaxDelayQueryBuilder updatedMaxDelayQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("updatedMaxDelay", alias, updatedMaxDelayQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptUpdatedMaxDelay()
        {
            return ExceptField("updatedMaxDelay");
        }

        public QueryQueryBuilder WithUpdatedMaxDelays(UpdatedMaxDelayQueryBuilder updatedMaxDelayQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<UpdatedMaxDelayOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<UpdatedMaxDelayFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("updatedMaxDelays", alias, updatedMaxDelayQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptUpdatedMaxDelays()
        {
            return ExceptField("updatedMaxDelays");
        }

        public QueryQueryBuilder WithUpdatedMinDelays(UpdatedMinDelaysQueryBuilder updatedMinDelaysQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("updatedMinDelays", alias, updatedMinDelaysQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptUpdatedMinDelays()
        {
            return ExceptField("updatedMinDelays");
        }

        public QueryQueryBuilder WithUpdatedMinDelaysCollection(UpdatedMinDelaysQueryBuilder updatedMinDelaysQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<UpdatedMinDelaysOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<UpdatedMinDelaysFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("updatedMinDelays_collection", alias, updatedMinDelaysQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptUpdatedMinDelaysCollection()
        {
            return ExceptField("updatedMinDelays_collection");
        }

        public QueryQueryBuilder WithVaultValueChanged(VaultValueChangedQueryBuilder vaultValueChangedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaultValueChanged", alias, vaultValueChangedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptVaultValueChanged()
        {
            return ExceptField("vaultValueChanged");
        }

        public QueryQueryBuilder WithVaultValueChangeds(VaultValueChangedQueryBuilder vaultValueChangedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<VaultValueChangedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<VaultValueChangedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaultValueChangeds", alias, vaultValueChangedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptVaultValueChangeds()
        {
            return ExceptField("vaultValueChangeds");
        }

        public QueryQueryBuilder WithUpdateParams(UpdateParamsQueryBuilder updateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("updateParams", alias, updateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptUpdateParams()
        {
            return ExceptField("updateParams");
        }

        public QueryQueryBuilder WithUpdateParamsCollection(UpdateParamsQueryBuilder updateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<UpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<UpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("updateParams_collection", alias, updateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptUpdateParamsCollection()
        {
            return ExceptField("updateParams_collection");
        }

        public QueryQueryBuilder WithDelayVaultProviderVaultValueChanged(DelayVaultProviderVaultValueChangedQueryBuilder delayVaultProviderVaultValueChangedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultProviderVaultValueChanged", alias, delayVaultProviderVaultValueChangedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultProviderVaultValueChanged()
        {
            return ExceptField("delayVaultProviderVaultValueChanged");
        }

        public QueryQueryBuilder WithDelayVaultProviderVaultValueChangeds(DelayVaultProviderVaultValueChangedQueryBuilder delayVaultProviderVaultValueChangedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DelayVaultProviderVaultValueChangedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DelayVaultProviderVaultValueChangedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("delayVaultProviderVaultValueChangeds", alias, delayVaultProviderVaultValueChangedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDelayVaultProviderVaultValueChangeds()
        {
            return ExceptField("delayVaultProviderVaultValueChangeds");
        }

        public QueryQueryBuilder WithNewPoolCreated(NewPoolCreatedQueryBuilder newPoolCreatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("newPoolCreated", alias, newPoolCreatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptNewPoolCreated()
        {
            return ExceptField("newPoolCreated");
        }

        public QueryQueryBuilder WithNewPoolCreateds(NewPoolCreatedQueryBuilder newPoolCreatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<NewPoolCreatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<NewPoolCreatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("newPoolCreateds", alias, newPoolCreatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptNewPoolCreateds()
        {
            return ExceptField("newPoolCreateds");
        }

        public QueryQueryBuilder WithDeposited(DepositedQueryBuilder depositedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("deposited", alias, depositedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDeposited()
        {
            return ExceptField("deposited");
        }

        public QueryQueryBuilder WithDepositeds(DepositedQueryBuilder depositedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DepositedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DepositedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("depositeds", alias, depositedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDepositeds()
        {
            return ExceptField("depositeds");
        }

        public QueryQueryBuilder WithNewVaultCreated(NewVaultCreatedQueryBuilder newVaultCreatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("newVaultCreated", alias, newVaultCreatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptNewVaultCreated()
        {
            return ExceptField("newVaultCreated");
        }

        public QueryQueryBuilder WithNewVaultCreateds(NewVaultCreatedQueryBuilder newVaultCreatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<NewVaultCreatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<NewVaultCreatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("newVaultCreateds", alias, newVaultCreatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptNewVaultCreateds()
        {
            return ExceptField("newVaultCreateds");
        }

        public QueryQueryBuilder WithOwnershipTransferred(OwnershipTransferredQueryBuilder ownershipTransferredQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("ownershipTransferred", alias, ownershipTransferredQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOwnershipTransferred()
        {
            return ExceptField("ownershipTransferred");
        }

        public QueryQueryBuilder WithOwnershipTransferreds(OwnershipTransferredQueryBuilder ownershipTransferredQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OwnershipTransferredOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OwnershipTransferredFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("ownershipTransferreds", alias, ownershipTransferredQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOwnershipTransferreds()
        {
            return ExceptField("ownershipTransferreds");
        }

        public QueryQueryBuilder WithVaultRoyaltySet(VaultRoyaltySetQueryBuilder vaultRoyaltySetQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaultRoyaltySet", alias, vaultRoyaltySetQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptVaultRoyaltySet()
        {
            return ExceptField("vaultRoyaltySet");
        }

        public QueryQueryBuilder WithVaultRoyaltySets(VaultRoyaltySetQueryBuilder vaultRoyaltySetQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<VaultRoyaltySetOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<VaultRoyaltySetFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaultRoyaltySets", alias, vaultRoyaltySetQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptVaultRoyaltySets()
        {
            return ExceptField("vaultRoyaltySets");
        }

        public QueryQueryBuilder WithVaultStatusUpdate(VaultStatusUpdateQueryBuilder vaultStatusUpdateQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaultStatusUpdate", alias, vaultStatusUpdateQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptVaultStatusUpdate()
        {
            return ExceptField("vaultStatusUpdate");
        }

        public QueryQueryBuilder WithVaultStatusUpdates(VaultStatusUpdateQueryBuilder vaultStatusUpdateQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<VaultStatusUpdateOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<VaultStatusUpdateFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaultStatusUpdates", alias, vaultStatusUpdateQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptVaultStatusUpdates()
        {
            return ExceptField("vaultStatusUpdates");
        }

        public QueryQueryBuilder WithWithdrawn(WithdrawnQueryBuilder withdrawnQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("withdrawn", alias, withdrawnQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptWithdrawn()
        {
            return ExceptField("withdrawn");
        }

        public QueryQueryBuilder WithWithdrawns(WithdrawnQueryBuilder withdrawnQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<WithdrawnOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<WithdrawnFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("withdrawns", alias, withdrawnQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptWithdrawns()
        {
            return ExceptField("withdrawns");
        }

        public QueryQueryBuilder WithApproval(ApprovalQueryBuilder approvalQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("approval", alias, approvalQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptApproval()
        {
            return ExceptField("approval");
        }

        public QueryQueryBuilder WithApprovals(ApprovalQueryBuilder approvalQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<ApprovalOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<ApprovalFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("approvals", alias, approvalQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptApprovals()
        {
            return ExceptField("approvals");
        }

        public QueryQueryBuilder WithApprovalForAll(ApprovalForAllQueryBuilder approvalForAllQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("approvalForAll", alias, approvalForAllQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptApprovalForAll()
        {
            return ExceptField("approvalForAll");
        }

        public QueryQueryBuilder WithApprovalForAlls(ApprovalForAllQueryBuilder approvalForAllQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<ApprovalForAllOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<ApprovalForAllFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("approvalForAlls", alias, approvalForAllQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptApprovalForAlls()
        {
            return ExceptField("approvalForAlls");
        }

        public QueryQueryBuilder WithBaseUriChanged(BaseUriChangedQueryBuilder baseUriChangedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("baseURIChanged", alias, baseUriChangedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptBaseUriChanged()
        {
            return ExceptField("baseURIChanged");
        }

        public QueryQueryBuilder WithBaseUriChangeds(BaseUriChangedQueryBuilder baseUriChangedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<BaseUriChangedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<BaseUriChangedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("baseURIChangeds", alias, baseUriChangedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptBaseUriChangeds()
        {
            return ExceptField("baseURIChangeds");
        }

        public QueryQueryBuilder WithBatchMetadataUpdate(BatchMetadataUpdateQueryBuilder batchMetadataUpdateQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("batchMetadataUpdate", alias, batchMetadataUpdateQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptBatchMetadataUpdate()
        {
            return ExceptField("batchMetadataUpdate");
        }

        public QueryQueryBuilder WithBatchMetadataUpdates(BatchMetadataUpdateQueryBuilder batchMetadataUpdateQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<BatchMetadataUpdateOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<BatchMetadataUpdateFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("batchMetadataUpdates", alias, batchMetadataUpdateQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptBatchMetadataUpdates()
        {
            return ExceptField("batchMetadataUpdates");
        }

        public QueryQueryBuilder WithContractApproved(ContractApprovedQueryBuilder contractApprovedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("contractApproved", alias, contractApprovedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptContractApproved()
        {
            return ExceptField("contractApproved");
        }

        public QueryQueryBuilder WithContractApproveds(ContractApprovedQueryBuilder contractApprovedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<ContractApprovedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<ContractApprovedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("contractApproveds", alias, contractApprovedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptContractApproveds()
        {
            return ExceptField("contractApproveds");
        }

        public QueryQueryBuilder WithMetadataUpdate(MetadataUpdateQueryBuilder metadataUpdateQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("metadataUpdate", alias, metadataUpdateQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptMetadataUpdate()
        {
            return ExceptField("metadataUpdate");
        }

        public QueryQueryBuilder WithMetadataUpdates(MetadataUpdateQueryBuilder metadataUpdateQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<MetadataUpdateOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<MetadataUpdateFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("metadataUpdates", alias, metadataUpdateQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptMetadataUpdates()
        {
            return ExceptField("metadataUpdates");
        }

        public QueryQueryBuilder WithLockDealNftOwnershipTransferred(LockDealNftOwnershipTransferredQueryBuilder lockDealNftOwnershipTransferredQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealNFTOwnershipTransferred", alias, lockDealNftOwnershipTransferredQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealNftOwnershipTransferred()
        {
            return ExceptField("lockDealNFTOwnershipTransferred");
        }

        public QueryQueryBuilder WithLockDealNftOwnershipTransferreds(LockDealNftOwnershipTransferredQueryBuilder lockDealNftOwnershipTransferredQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<LockDealNftOwnershipTransferredOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<LockDealNftOwnershipTransferredFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealNFTOwnershipTransferreds", alias, lockDealNftOwnershipTransferredQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealNftOwnershipTransferreds()
        {
            return ExceptField("lockDealNFTOwnershipTransferreds");
        }

        public QueryQueryBuilder WithPoolSplit(PoolSplitQueryBuilder poolSplitQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolSplit", alias, poolSplitQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptPoolSplit()
        {
            return ExceptField("poolSplit");
        }

        public QueryQueryBuilder WithPoolSplits(PoolSplitQueryBuilder poolSplitQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<PoolSplitOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<PoolSplitFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolSplits", alias, poolSplitQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptPoolSplits()
        {
            return ExceptField("poolSplits");
        }

        public QueryQueryBuilder WithTokenWithdrawn(TokenWithdrawnQueryBuilder tokenWithdrawnQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokenWithdrawn", alias, tokenWithdrawnQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTokenWithdrawn()
        {
            return ExceptField("tokenWithdrawn");
        }

        public QueryQueryBuilder WithTokenWithdrawns(TokenWithdrawnQueryBuilder tokenWithdrawnQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TokenWithdrawnOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TokenWithdrawnFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokenWithdrawns", alias, tokenWithdrawnQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTokenWithdrawns()
        {
            return ExceptField("tokenWithdrawns");
        }

        public QueryQueryBuilder WithTransfer(TransferQueryBuilder transferQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("transfer", alias, transferQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTransfer()
        {
            return ExceptField("transfer");
        }

        public QueryQueryBuilder WithTransfers(TransferQueryBuilder transferQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TransferOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TransferFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("transfers", alias, transferQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTransfers()
        {
            return ExceptField("transfers");
        }

        public QueryQueryBuilder WithFirewallAdminUpdated(FirewallAdminUpdatedQueryBuilder firewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("firewallAdminUpdated", alias, firewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptFirewallAdminUpdated()
        {
            return ExceptField("firewallAdminUpdated");
        }

        public QueryQueryBuilder WithFirewallAdminUpdateds(FirewallAdminUpdatedQueryBuilder firewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<FirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<FirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("firewallAdminUpdateds", alias, firewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptFirewallAdminUpdateds()
        {
            return ExceptField("firewallAdminUpdateds");
        }

        public QueryQueryBuilder WithFirewallUpdated(FirewallUpdatedQueryBuilder firewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("firewallUpdated", alias, firewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptFirewallUpdated()
        {
            return ExceptField("firewallUpdated");
        }

        public QueryQueryBuilder WithFirewallUpdateds(FirewallUpdatedQueryBuilder firewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<FirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<FirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("firewallUpdateds", alias, firewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptFirewallUpdateds()
        {
            return ExceptField("firewallUpdateds");
        }

        public QueryQueryBuilder WithDealProviderUpdateParams(DealProviderUpdateParamsQueryBuilder dealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dealProviderUpdateParams", alias, dealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDealProviderUpdateParams()
        {
            return ExceptField("dealProviderUpdateParams");
        }

        public QueryQueryBuilder WithDealProviderUpdateParamsCollection(DealProviderUpdateParamsQueryBuilder dealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DealProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DealProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dealProviderUpdateParams_collection", alias, dealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDealProviderUpdateParamsCollection()
        {
            return ExceptField("dealProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithLockDealProviderFirewallAdminUpdated(LockDealProviderFirewallAdminUpdatedQueryBuilder lockDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealProviderFirewallAdminUpdated", alias, lockDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealProviderFirewallAdminUpdated()
        {
            return ExceptField("lockDealProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithLockDealProviderFirewallAdminUpdateds(LockDealProviderFirewallAdminUpdatedQueryBuilder lockDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<LockDealProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<LockDealProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealProviderFirewallAdminUpdateds", alias, lockDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealProviderFirewallAdminUpdateds()
        {
            return ExceptField("lockDealProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithLockDealProviderFirewallUpdated(LockDealProviderFirewallUpdatedQueryBuilder lockDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealProviderFirewallUpdated", alias, lockDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealProviderFirewallUpdated()
        {
            return ExceptField("lockDealProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithLockDealProviderFirewallUpdateds(LockDealProviderFirewallUpdatedQueryBuilder lockDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<LockDealProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<LockDealProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealProviderFirewallUpdateds", alias, lockDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealProviderFirewallUpdateds()
        {
            return ExceptField("lockDealProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithLockDealProviderUpdateParams(LockDealProviderUpdateParamsQueryBuilder lockDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealProviderUpdateParams", alias, lockDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealProviderUpdateParams()
        {
            return ExceptField("lockDealProviderUpdateParams");
        }

        public QueryQueryBuilder WithLockDealProviderUpdateParamsCollection(LockDealProviderUpdateParamsQueryBuilder lockDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<LockDealProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<LockDealProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("lockDealProviderUpdateParams_collection", alias, lockDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptLockDealProviderUpdateParamsCollection()
        {
            return ExceptField("lockDealProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithTimedDealProviderFirewallAdminUpdated(TimedDealProviderFirewallAdminUpdatedQueryBuilder timedDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("timedDealProviderFirewallAdminUpdated", alias, timedDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTimedDealProviderFirewallAdminUpdated()
        {
            return ExceptField("timedDealProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithTimedDealProviderFirewallAdminUpdateds(TimedDealProviderFirewallAdminUpdatedQueryBuilder timedDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TimedDealProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TimedDealProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("timedDealProviderFirewallAdminUpdateds", alias, timedDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTimedDealProviderFirewallAdminUpdateds()
        {
            return ExceptField("timedDealProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithTimedDealProviderFirewallUpdated(TimedDealProviderFirewallUpdatedQueryBuilder timedDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("timedDealProviderFirewallUpdated", alias, timedDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTimedDealProviderFirewallUpdated()
        {
            return ExceptField("timedDealProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithTimedDealProviderFirewallUpdateds(TimedDealProviderFirewallUpdatedQueryBuilder timedDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TimedDealProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TimedDealProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("timedDealProviderFirewallUpdateds", alias, timedDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTimedDealProviderFirewallUpdateds()
        {
            return ExceptField("timedDealProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithTimedDealProviderUpdateParams(TimedDealProviderUpdateParamsQueryBuilder timedDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("timedDealProviderUpdateParams", alias, timedDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTimedDealProviderUpdateParams()
        {
            return ExceptField("timedDealProviderUpdateParams");
        }

        public QueryQueryBuilder WithTimedDealProviderUpdateParamsCollection(TimedDealProviderUpdateParamsQueryBuilder timedDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TimedDealProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TimedDealProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("timedDealProviderUpdateParams_collection", alias, timedDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTimedDealProviderUpdateParamsCollection()
        {
            return ExceptField("timedDealProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithEip712DomainChanged(Eip712DomainChangedQueryBuilder eip712DomainChangedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("eip712DomainChanged", alias, eip712DomainChangedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptEip712DomainChanged()
        {
            return ExceptField("eip712DomainChanged");
        }

        public QueryQueryBuilder WithEip712DomainChangeds(Eip712DomainChangedQueryBuilder eip712DomainChangedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<Eip712DomainChangedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<Eip712DomainChangedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("eip712DomainChangeds", alias, eip712DomainChangedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptEip712DomainChangeds()
        {
            return ExceptField("eip712DomainChangeds");
        }

        public QueryQueryBuilder WithDispenserProviderFirewallAdminUpdated(DispenserProviderFirewallAdminUpdatedQueryBuilder dispenserProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserProviderFirewallAdminUpdated", alias, dispenserProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserProviderFirewallAdminUpdated()
        {
            return ExceptField("dispenserProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithDispenserProviderFirewallAdminUpdateds(DispenserProviderFirewallAdminUpdatedQueryBuilder dispenserProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DispenserProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DispenserProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserProviderFirewallAdminUpdateds", alias, dispenserProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserProviderFirewallAdminUpdateds()
        {
            return ExceptField("dispenserProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithDispenserProviderFirewallUpdated(DispenserProviderFirewallUpdatedQueryBuilder dispenserProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserProviderFirewallUpdated", alias, dispenserProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserProviderFirewallUpdated()
        {
            return ExceptField("dispenserProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithDispenserProviderFirewallUpdateds(DispenserProviderFirewallUpdatedQueryBuilder dispenserProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DispenserProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DispenserProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserProviderFirewallUpdateds", alias, dispenserProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserProviderFirewallUpdateds()
        {
            return ExceptField("dispenserProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithPoolCreated(PoolCreatedQueryBuilder poolCreatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolCreated", alias, poolCreatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptPoolCreated()
        {
            return ExceptField("poolCreated");
        }

        public QueryQueryBuilder WithPoolCreateds(PoolCreatedQueryBuilder poolCreatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<PoolCreatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<PoolCreatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolCreateds", alias, poolCreatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptPoolCreateds()
        {
            return ExceptField("poolCreateds");
        }

        public QueryQueryBuilder WithTokensDispensed(TokensDispensedQueryBuilder tokensDispensedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokensDispensed", alias, tokensDispensedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTokensDispensed()
        {
            return ExceptField("tokensDispensed");
        }

        public QueryQueryBuilder WithTokensDispenseds(TokensDispensedQueryBuilder tokensDispensedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TokensDispensedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TokensDispensedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("tokensDispenseds", alias, tokensDispensedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTokensDispenseds()
        {
            return ExceptField("tokensDispenseds");
        }

        public QueryQueryBuilder WithDispenserProviderUpdateParams(DispenserProviderUpdateParamsQueryBuilder dispenserProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserProviderUpdateParams", alias, dispenserProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserProviderUpdateParams()
        {
            return ExceptField("dispenserProviderUpdateParams");
        }

        public QueryQueryBuilder WithDispenserProviderUpdateParamsCollection(DispenserProviderUpdateParamsQueryBuilder dispenserProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DispenserProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DispenserProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserProviderUpdateParams_collection", alias, dispenserProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserProviderUpdateParamsCollection()
        {
            return ExceptField("dispenserProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithVault(VaultQueryBuilder vaultQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vault", alias, vaultQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptVault()
        {
            return ExceptField("vault");
        }

        public QueryQueryBuilder WithVaults(VaultQueryBuilder vaultQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<VaultOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<VaultFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("vaults", alias, vaultQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptVaults()
        {
            return ExceptField("vaults");
        }

        public QueryQueryBuilder WithAllowedContract(AllowedContractQueryBuilder allowedContractQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("allowedContract", alias, allowedContractQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptAllowedContract()
        {
            return ExceptField("allowedContract");
        }

        public QueryQueryBuilder WithAllowedContracts(AllowedContractQueryBuilder allowedContractQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<AllowedContractOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<AllowedContractFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("allowedContracts", alias, allowedContractQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptAllowedContracts()
        {
            return ExceptField("allowedContracts");
        }

        public QueryQueryBuilder WithPoolxLockedBalance(PoolxLockedBalanceQueryBuilder poolxLockedBalanceQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolxLockedBalance", alias, poolxLockedBalanceQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptPoolxLockedBalance()
        {
            return ExceptField("poolxLockedBalance");
        }

        public QueryQueryBuilder WithPoolxLockedBalances(PoolxLockedBalanceQueryBuilder poolxLockedBalanceQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<PoolxLockedBalanceOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<PoolxLockedBalanceFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolxLockedBalances", alias, poolxLockedBalanceQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptPoolxLockedBalances()
        {
            return ExceptField("poolxLockedBalances");
        }

        public QueryQueryBuilder WithPoolxUnlocks(PoolxUnlocksQueryBuilder poolxUnlocksQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolxUnlocks", alias, poolxUnlocksQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptPoolxUnlocks()
        {
            return ExceptField("poolxUnlocks");
        }

        public QueryQueryBuilder WithPoolxUnlocksCollection(PoolxUnlocksQueryBuilder poolxUnlocksQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<PoolxUnlocksOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<PoolxUnlocksFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolxUnlocks_collection", alias, poolxUnlocksQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptPoolxUnlocksCollection()
        {
            return ExceptField("poolxUnlocks_collection");
        }

        public QueryQueryBuilder WithTotalUnlocksAmount(TotalUnlocksAmountQueryBuilder totalUnlocksAmountQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("totalUnlocksAmount", alias, totalUnlocksAmountQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTotalUnlocksAmount()
        {
            return ExceptField("totalUnlocksAmount");
        }

        public QueryQueryBuilder WithTotalUnlocksAmounts(TotalUnlocksAmountQueryBuilder totalUnlocksAmountQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TotalUnlocksAmountOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TotalUnlocksAmountFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("totalUnlocksAmounts", alias, totalUnlocksAmountQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTotalUnlocksAmounts()
        {
            return ExceptField("totalUnlocksAmounts");
        }

        public QueryQueryBuilder WithPoolData(PoolDataQueryBuilder poolDataQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolData", alias, poolDataQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptPoolData()
        {
            return ExceptField("poolData");
        }

        public QueryQueryBuilder WithPoolDatas(PoolDataQueryBuilder poolDataQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<PoolDataOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<PoolDataFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("poolDatas", alias, poolDataQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptPoolDatas()
        {
            return ExceptField("poolDatas");
        }

        public QueryQueryBuilder WithOldDealProviderFirewallAdminUpdated(OldDealProviderFirewallAdminUpdatedQueryBuilder oldDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldDealProviderFirewallAdminUpdated", alias, oldDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldDealProviderFirewallAdminUpdated()
        {
            return ExceptField("oldDealProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithOldDealProviderFirewallAdminUpdateds(OldDealProviderFirewallAdminUpdatedQueryBuilder oldDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldDealProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldDealProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldDealProviderFirewallAdminUpdateds", alias, oldDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldDealProviderFirewallAdminUpdateds()
        {
            return ExceptField("oldDealProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithOldDealProviderFirewallUpdated(OldDealProviderFirewallUpdatedQueryBuilder oldDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldDealProviderFirewallUpdated", alias, oldDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldDealProviderFirewallUpdated()
        {
            return ExceptField("oldDealProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithOldDealProviderFirewallUpdateds(OldDealProviderFirewallUpdatedQueryBuilder oldDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldDealProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldDealProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldDealProviderFirewallUpdateds", alias, oldDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldDealProviderFirewallUpdateds()
        {
            return ExceptField("oldDealProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithOldDealProviderUpdateParams(OldDealProviderUpdateParamsQueryBuilder oldDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldDealProviderUpdateParams", alias, oldDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldDealProviderUpdateParams()
        {
            return ExceptField("oldDealProviderUpdateParams");
        }

        public QueryQueryBuilder WithOldDealProviderUpdateParamsCollection(OldDealProviderUpdateParamsQueryBuilder oldDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldDealProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldDealProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldDealProviderUpdateParams_collection", alias, oldDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldDealProviderUpdateParamsCollection()
        {
            return ExceptField("oldDealProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithOldLockDealProviderFirewallAdminUpdated(OldLockDealProviderFirewallAdminUpdatedQueryBuilder oldLockDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldLockDealProviderFirewallAdminUpdated", alias, oldLockDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldLockDealProviderFirewallAdminUpdated()
        {
            return ExceptField("oldLockDealProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithOldLockDealProviderFirewallAdminUpdateds(OldLockDealProviderFirewallAdminUpdatedQueryBuilder oldLockDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldLockDealProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldLockDealProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldLockDealProviderFirewallAdminUpdateds", alias, oldLockDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldLockDealProviderFirewallAdminUpdateds()
        {
            return ExceptField("oldLockDealProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithOldLockDealProviderFirewallUpdated(OldLockDealProviderFirewallUpdatedQueryBuilder oldLockDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldLockDealProviderFirewallUpdated", alias, oldLockDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldLockDealProviderFirewallUpdated()
        {
            return ExceptField("oldLockDealProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithOldLockDealProviderFirewallUpdateds(OldLockDealProviderFirewallUpdatedQueryBuilder oldLockDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldLockDealProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldLockDealProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldLockDealProviderFirewallUpdateds", alias, oldLockDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldLockDealProviderFirewallUpdateds()
        {
            return ExceptField("oldLockDealProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithOldLockDealProviderUpdateParams(OldLockDealProviderUpdateParamsQueryBuilder oldLockDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldLockDealProviderUpdateParams", alias, oldLockDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldLockDealProviderUpdateParams()
        {
            return ExceptField("oldLockDealProviderUpdateParams");
        }

        public QueryQueryBuilder WithOldLockDealProviderUpdateParamsCollection(OldLockDealProviderUpdateParamsQueryBuilder oldLockDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldLockDealProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldLockDealProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldLockDealProviderUpdateParams_collection", alias, oldLockDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldLockDealProviderUpdateParamsCollection()
        {
            return ExceptField("oldLockDealProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithOldTimedDealProviderFirewallAdminUpdated(OldTimedDealProviderFirewallAdminUpdatedQueryBuilder oldTimedDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldTimedDealProviderFirewallAdminUpdated", alias, oldTimedDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldTimedDealProviderFirewallAdminUpdated()
        {
            return ExceptField("oldTimedDealProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithOldTimedDealProviderFirewallAdminUpdateds(OldTimedDealProviderFirewallAdminUpdatedQueryBuilder oldTimedDealProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldTimedDealProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldTimedDealProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldTimedDealProviderFirewallAdminUpdateds", alias, oldTimedDealProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldTimedDealProviderFirewallAdminUpdateds()
        {
            return ExceptField("oldTimedDealProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithOldTimedDealProviderFirewallUpdated(OldTimedDealProviderFirewallUpdatedQueryBuilder oldTimedDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldTimedDealProviderFirewallUpdated", alias, oldTimedDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldTimedDealProviderFirewallUpdated()
        {
            return ExceptField("oldTimedDealProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithOldTimedDealProviderFirewallUpdateds(OldTimedDealProviderFirewallUpdatedQueryBuilder oldTimedDealProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldTimedDealProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldTimedDealProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldTimedDealProviderFirewallUpdateds", alias, oldTimedDealProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldTimedDealProviderFirewallUpdateds()
        {
            return ExceptField("oldTimedDealProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithOldTimedDealProviderUpdateParams(OldTimedDealProviderUpdateParamsQueryBuilder oldTimedDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldTimedDealProviderUpdateParams", alias, oldTimedDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptOldTimedDealProviderUpdateParams()
        {
            return ExceptField("oldTimedDealProviderUpdateParams");
        }

        public QueryQueryBuilder WithOldTimedDealProviderUpdateParamsCollection(OldTimedDealProviderUpdateParamsQueryBuilder oldTimedDealProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<OldTimedDealProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<OldTimedDealProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("oldTimedDealProviderUpdateParams_collection", alias, oldTimedDealProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptOldTimedDealProviderUpdateParamsCollection()
        {
            return ExceptField("oldTimedDealProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithCollateralProviderUpdateParams(CollateralProviderUpdateParamsQueryBuilder collateralProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("collateralProviderUpdateParams", alias, collateralProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptCollateralProviderUpdateParams()
        {
            return ExceptField("collateralProviderUpdateParams");
        }

        public QueryQueryBuilder WithCollateralProviderUpdateParamsCollection(CollateralProviderUpdateParamsQueryBuilder collateralProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<CollateralProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<CollateralProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("collateralProviderUpdateParams_collection", alias, collateralProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptCollateralProviderUpdateParamsCollection()
        {
            return ExceptField("collateralProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithRefundProviderUpdateParams(RefundProviderUpdateParamsQueryBuilder refundProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("refundProviderUpdateParams", alias, refundProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptRefundProviderUpdateParams()
        {
            return ExceptField("refundProviderUpdateParams");
        }

        public QueryQueryBuilder WithRefundProviderUpdateParamsCollection(RefundProviderUpdateParamsQueryBuilder refundProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<RefundProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<RefundProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("refundProviderUpdateParams_collection", alias, refundProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptRefundProviderUpdateParamsCollection()
        {
            return ExceptField("refundProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithDispenserTokenReserve(DispenserTokenReserveQueryBuilder dispenserTokenReserveQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserTokenReserve", alias, dispenserTokenReserveQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserTokenReserve()
        {
            return ExceptField("dispenserTokenReserve");
        }

        public QueryQueryBuilder WithDispenserTokenReserves(DispenserTokenReserveQueryBuilder dispenserTokenReserveQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<DispenserTokenReserveOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<DispenserTokenReserveFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("dispenserTokenReserves", alias, dispenserTokenReserveQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptDispenserTokenReserves()
        {
            return ExceptField("dispenserTokenReserves");
        }

        public QueryQueryBuilder WithInvestProviderEip712DomainChanged(InvestProviderEip712DomainChangedQueryBuilder investProviderEip712DomainChangedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderEIP712DomainChanged", alias, investProviderEip712DomainChangedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderEip712DomainChanged()
        {
            return ExceptField("investProviderEIP712DomainChanged");
        }

        public QueryQueryBuilder WithInvestProviderEip712DomainChangeds(InvestProviderEip712DomainChangedQueryBuilder investProviderEip712DomainChangedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<InvestProviderEip712DomainChangedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<InvestProviderEip712DomainChangedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderEIP712DomainChangeds", alias, investProviderEip712DomainChangedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderEip712DomainChangeds()
        {
            return ExceptField("investProviderEIP712DomainChangeds");
        }

        public QueryQueryBuilder WithInvestProviderFirewallAdminUpdated(InvestProviderFirewallAdminUpdatedQueryBuilder investProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderFirewallAdminUpdated", alias, investProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderFirewallAdminUpdated()
        {
            return ExceptField("investProviderFirewallAdminUpdated");
        }

        public QueryQueryBuilder WithInvestProviderFirewallAdminUpdateds(InvestProviderFirewallAdminUpdatedQueryBuilder investProviderFirewallAdminUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<InvestProviderFirewallAdminUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<InvestProviderFirewallAdminUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderFirewallAdminUpdateds", alias, investProviderFirewallAdminUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderFirewallAdminUpdateds()
        {
            return ExceptField("investProviderFirewallAdminUpdateds");
        }

        public QueryQueryBuilder WithInvestProviderFirewallUpdated(InvestProviderFirewallUpdatedQueryBuilder investProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderFirewallUpdated", alias, investProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderFirewallUpdated()
        {
            return ExceptField("investProviderFirewallUpdated");
        }

        public QueryQueryBuilder WithInvestProviderFirewallUpdateds(InvestProviderFirewallUpdatedQueryBuilder investProviderFirewallUpdatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<InvestProviderFirewallUpdatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<InvestProviderFirewallUpdatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderFirewallUpdateds", alias, investProviderFirewallUpdatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderFirewallUpdateds()
        {
            return ExceptField("investProviderFirewallUpdateds");
        }

        public QueryQueryBuilder WithInvested(InvestedQueryBuilder investedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("invested", alias, investedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptInvested()
        {
            return ExceptField("invested");
        }

        public QueryQueryBuilder WithInvesteds(InvestedQueryBuilder investedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<InvestedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<InvestedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investeds", alias, investedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptInvesteds()
        {
            return ExceptField("investeds");
        }

        public QueryQueryBuilder WithInvestNewPoolCreated(InvestNewPoolCreatedQueryBuilder investNewPoolCreatedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investNewPoolCreated", alias, investNewPoolCreatedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptInvestNewPoolCreated()
        {
            return ExceptField("investNewPoolCreated");
        }

        public QueryQueryBuilder WithInvestNewPoolCreateds(InvestNewPoolCreatedQueryBuilder investNewPoolCreatedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<InvestNewPoolCreatedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<InvestNewPoolCreatedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investNewPoolCreateds", alias, investNewPoolCreatedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptInvestNewPoolCreateds()
        {
            return ExceptField("investNewPoolCreateds");
        }

        public QueryQueryBuilder WithInvestProviderUpdateParams(InvestProviderUpdateParamsQueryBuilder investProviderUpdateParamsQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderUpdateParams", alias, investProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderUpdateParams()
        {
            return ExceptField("investProviderUpdateParams");
        }

        public QueryQueryBuilder WithInvestProviderUpdateParamsCollection(InvestProviderUpdateParamsQueryBuilder investProviderUpdateParamsQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<InvestProviderUpdateParamsOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<InvestProviderUpdateParamsFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("investProviderUpdateParams_collection", alias, investProviderUpdateParamsQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptInvestProviderUpdateParamsCollection()
        {
            return ExceptField("investProviderUpdateParams_collection");
        }

        public QueryQueryBuilder WithTotalUserInvested(TotalUserInvestedQueryBuilder totalUserInvestedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("totalUserInvested", alias, totalUserInvestedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTotalUserInvested()
        {
            return ExceptField("totalUserInvested");
        }

        public QueryQueryBuilder WithTotalUserInvesteds(TotalUserInvestedQueryBuilder totalUserInvestedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TotalUserInvestedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TotalUserInvestedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("totalUserInvesteds", alias, totalUserInvestedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTotalUserInvesteds()
        {
            return ExceptField("totalUserInvesteds");
        }

        public QueryQueryBuilder WithTotalInvested(TotalInvestedQueryBuilder totalInvestedQueryBuilder, QueryBuilderParameter<string> id, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "id", ArgumentValue = id} );
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("totalInvested", alias, totalInvestedQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptTotalInvested()
        {
            return ExceptField("totalInvested");
        }

        public QueryQueryBuilder WithTotalInvesteds(TotalInvestedQueryBuilder totalInvestedQueryBuilder, QueryBuilderParameter<SubgraphErrorPolicy> subgraphError, QueryBuilderParameter<int?> skip = null, QueryBuilderParameter<int?> first = null, QueryBuilderParameter<TotalInvestedOrderBy?> orderBy = null, QueryBuilderParameter<OrderDirection?> orderDirection = null, QueryBuilderParameter<TotalInvestedFilter> where = null, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skipDirective = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (skip != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "skip", ArgumentValue = skip} );

            if (first != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "first", ArgumentValue = first} );

            if (orderBy != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderBy", ArgumentValue = orderBy} );

            if (orderDirection != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "orderDirection", ArgumentValue = orderDirection} );

            if (where != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "where", ArgumentValue = where} );

            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            args.Add(new QueryBuilderArgumentInfo { ArgumentName = "subgraphError", ArgumentValue = subgraphError} );
            return WithObjectField("totalInvesteds", alias, totalInvestedQueryBuilder, new GraphQlDirective[] { skipDirective, include }, args);
        }

        public QueryQueryBuilder ExceptTotalInvesteds()
        {
            return ExceptField("totalInvesteds");
        }

        public QueryQueryBuilder WithMeta(MetaQueryBuilder metaQueryBuilder, QueryBuilderParameter<BlockHeight> block = null, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            var args = new List<QueryBuilderArgumentInfo>();
            if (block != null)
                args.Add(new QueryBuilderArgumentInfo { ArgumentName = "block", ArgumentValue = block} );

            return WithObjectField("_meta", alias, metaQueryBuilder, new GraphQlDirective[] { skip, include }, args);
        }

        public QueryQueryBuilder ExceptMeta()
        {
            return ExceptField("_meta");
        }
    }

    public partial class RedeemedTokensQueryBuilder : GraphQlQueryBuilder<RedeemedTokensQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "Amount" },
                new GraphQlFieldMetadata { Name = "RemaningAmount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "RedeemedTokens"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RedeemedTokensQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public RedeemedTokensQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public RedeemedTokensQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Amount", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptAmount()
        {
            return ExceptField("Amount");
        }

        public RedeemedTokensQueryBuilder WithRemaningAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("RemaningAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptRemaningAmount()
        {
            return ExceptField("RemaningAmount");
        }

        public RedeemedTokensQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public RedeemedTokensQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public RedeemedTokensQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public RedeemedTokensQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class RefundProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<RefundProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "RefundProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public RefundProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public RefundProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public RefundProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public RefundProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public RefundProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public RefundProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public RefundProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public RefundProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public RefundProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public RefundProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public RefundProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public RefundProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TimedDealProviderFirewallAdminUpdatedQueryBuilder : GraphQlQueryBuilder<TimedDealProviderFirewallAdminUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newAdmin" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TimedDealProviderFirewallAdminUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder WithNewAdmin(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newAdmin", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptNewAdmin()
        {
            return ExceptField("newAdmin");
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallAdminUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TimedDealProviderFirewallUpdatedQueryBuilder : GraphQlQueryBuilder<TimedDealProviderFirewallUpdatedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "newFirewall" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TimedDealProviderFirewallUpdated"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TimedDealProviderFirewallUpdatedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder WithNewFirewall(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("newFirewall", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder ExceptNewFirewall()
        {
            return ExceptField("newFirewall");
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderFirewallUpdatedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TimedDealProviderUpdateParamsQueryBuilder : GraphQlQueryBuilder<TimedDealProviderUpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TimedDealProviderUpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TimedDealProviderUpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderUpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TimedDealProviderUpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderUpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public TimedDealProviderUpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderUpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public TimedDealProviderUpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderUpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TimedDealProviderUpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderUpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TimedDealProviderUpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TimedDealProviderUpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TokenRedemptionApprovalQueryBuilder : GraphQlQueryBuilder<TokenRedemptionApprovalQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "User" },
                new GraphQlFieldMetadata { Name = "Status" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TokenRedemptionApproval"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TokenRedemptionApprovalQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TokenRedemptionApprovalQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public TokenRedemptionApprovalQueryBuilder WithUser(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("User", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptUser()
        {
            return ExceptField("User");
        }

        public TokenRedemptionApprovalQueryBuilder WithStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Status", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptStatus()
        {
            return ExceptField("Status");
        }

        public TokenRedemptionApprovalQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TokenRedemptionApprovalQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TokenRedemptionApprovalQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenRedemptionApprovalQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TokenStatusFilterQueryBuilder : GraphQlQueryBuilder<TokenStatusFilterQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "Status" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TokenStatusFilter"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TokenStatusFilterQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenStatusFilterQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TokenStatusFilterQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenStatusFilterQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public TokenStatusFilterQueryBuilder WithStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Status", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenStatusFilterQueryBuilder ExceptStatus()
        {
            return ExceptField("Status");
        }

        public TokenStatusFilterQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenStatusFilterQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TokenStatusFilterQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenStatusFilterQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TokenStatusFilterQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenStatusFilterQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TokenWithdrawnQueryBuilder : GraphQlQueryBuilder<TokenWithdrawnQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "owner" },
                new GraphQlFieldMetadata { Name = "withdrawnAmount" },
                new GraphQlFieldMetadata { Name = "leftAmount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TokenWithdrawn"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TokenWithdrawnQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TokenWithdrawnQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public TokenWithdrawnQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("owner", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptOwner()
        {
            return ExceptField("owner");
        }

        public TokenWithdrawnQueryBuilder WithWithdrawnAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("withdrawnAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptWithdrawnAmount()
        {
            return ExceptField("withdrawnAmount");
        }

        public TokenWithdrawnQueryBuilder WithLeftAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("leftAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptLeftAmount()
        {
            return ExceptField("leftAmount");
        }

        public TokenWithdrawnQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TokenWithdrawnQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TokenWithdrawnQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TokenWithdrawnQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TokensDispensedQueryBuilder : GraphQlQueryBuilder<TokensDispensedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "user" },
                new GraphQlFieldMetadata { Name = "amountTaken" },
                new GraphQlFieldMetadata { Name = "leftAmount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "TokensDispensed"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TokensDispensedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TokensDispensedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public TokensDispensedQueryBuilder WithUser(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("user", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptUser()
        {
            return ExceptField("user");
        }

        public TokensDispensedQueryBuilder WithAmountTaken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amountTaken", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptAmountTaken()
        {
            return ExceptField("amountTaken");
        }

        public TokensDispensedQueryBuilder WithLeftAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("leftAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptLeftAmount()
        {
            return ExceptField("leftAmount");
        }

        public TokensDispensedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TokensDispensedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TokensDispensedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TokensDispensedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class TotalInvestedQueryBuilder : GraphQlQueryBuilder<TotalInvestedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "poolAmount" },
                new GraphQlFieldMetadata { Name = "totalInvested" },
                new GraphQlFieldMetadata { Name = "leftAmount" }
            };

        protected override string TypeName { get { return "TotalInvested"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TotalInvestedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalInvestedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TotalInvestedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalInvestedQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public TotalInvestedQueryBuilder WithPoolAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalInvestedQueryBuilder ExceptPoolAmount()
        {
            return ExceptField("poolAmount");
        }

        public TotalInvestedQueryBuilder WithTotalInvested(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("totalInvested", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalInvestedQueryBuilder ExceptTotalInvested()
        {
            return ExceptField("totalInvested");
        }

        public TotalInvestedQueryBuilder WithLeftAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("leftAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalInvestedQueryBuilder ExceptLeftAmount()
        {
            return ExceptField("leftAmount");
        }
    }

    public partial class TotalUnlocksAmountQueryBuilder : GraphQlQueryBuilder<TotalUnlocksAmountQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "totalUnlocksAmount" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" }
            };

        protected override string TypeName { get { return "TotalUnlocksAmount"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TotalUnlocksAmountQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUnlocksAmountQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TotalUnlocksAmountQueryBuilder WithTotalUnlocksAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("totalUnlocksAmount", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUnlocksAmountQueryBuilder ExceptTotalUnlocksAmount()
        {
            return ExceptField("totalUnlocksAmount");
        }

        public TotalUnlocksAmountQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUnlocksAmountQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }
    }

    public partial class TotalUserInvestedQueryBuilder : GraphQlQueryBuilder<TotalUserInvestedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "user" },
                new GraphQlFieldMetadata { Name = "amount" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" }
            };

        protected override string TypeName { get { return "TotalUserInvested"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TotalUserInvestedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUserInvestedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TotalUserInvestedQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUserInvestedQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public TotalUserInvestedQueryBuilder WithUser(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("user", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUserInvestedQueryBuilder ExceptUser()
        {
            return ExceptField("user");
        }

        public TotalUserInvestedQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amount", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUserInvestedQueryBuilder ExceptAmount()
        {
            return ExceptField("amount");
        }

        public TotalUserInvestedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TotalUserInvestedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }
    }

    public partial class TransferQueryBuilder : GraphQlQueryBuilder<TransferQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "from" },
                new GraphQlFieldMetadata { Name = "to" },
                new GraphQlFieldMetadata { Name = "tokenId" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "Transfer"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public TransferQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public TransferQueryBuilder WithFrom(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("from", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptFrom()
        {
            return ExceptField("from");
        }

        public TransferQueryBuilder WithTo(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("to", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptTo()
        {
            return ExceptField("to");
        }

        public TransferQueryBuilder WithTokenId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenId", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptTokenId()
        {
            return ExceptField("tokenId");
        }

        public TransferQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public TransferQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public TransferQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public TransferQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class UpdateParamsQueryBuilder : GraphQlQueryBuilder<UpdateParamsQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "poolId" },
                new GraphQlFieldMetadata { Name = "params", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "UpdateParams"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public UpdateParamsQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdateParamsQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public UpdateParamsQueryBuilder WithPoolId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("poolId", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdateParamsQueryBuilder ExceptPoolId()
        {
            return ExceptField("poolId");
        }

        public UpdateParamsQueryBuilder WithParams(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("params", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdateParamsQueryBuilder ExceptParams()
        {
            return ExceptField("params");
        }

        public UpdateParamsQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdateParamsQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public UpdateParamsQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdateParamsQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public UpdateParamsQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdateParamsQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class UpdatedMaxDelayQueryBuilder : GraphQlQueryBuilder<UpdatedMaxDelayQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "OldDelay" },
                new GraphQlFieldMetadata { Name = "NewDelay" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "UpdatedMaxDelay"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public UpdatedMaxDelayQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMaxDelayQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public UpdatedMaxDelayQueryBuilder WithOldDelay(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("OldDelay", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMaxDelayQueryBuilder ExceptOldDelay()
        {
            return ExceptField("OldDelay");
        }

        public UpdatedMaxDelayQueryBuilder WithNewDelay(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("NewDelay", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMaxDelayQueryBuilder ExceptNewDelay()
        {
            return ExceptField("NewDelay");
        }

        public UpdatedMaxDelayQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMaxDelayQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public UpdatedMaxDelayQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMaxDelayQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public UpdatedMaxDelayQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMaxDelayQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class UpdatedMinDelaysQueryBuilder : GraphQlQueryBuilder<UpdatedMinDelaysQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "Amounts", IsComplex = true },
                new GraphQlFieldMetadata { Name = "StartDelays", IsComplex = true },
                new GraphQlFieldMetadata { Name = "CliffDelays", IsComplex = true },
                new GraphQlFieldMetadata { Name = "FinishDelays", IsComplex = true },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "UpdatedMinDelays"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public UpdatedMinDelaysQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public UpdatedMinDelaysQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public UpdatedMinDelaysQueryBuilder WithAmounts(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Amounts", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptAmounts()
        {
            return ExceptField("Amounts");
        }

        public UpdatedMinDelaysQueryBuilder WithStartDelays(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("StartDelays", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptStartDelays()
        {
            return ExceptField("StartDelays");
        }

        public UpdatedMinDelaysQueryBuilder WithCliffDelays(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("CliffDelays", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptCliffDelays()
        {
            return ExceptField("CliffDelays");
        }

        public UpdatedMinDelaysQueryBuilder WithFinishDelays(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("FinishDelays", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptFinishDelays()
        {
            return ExceptField("FinishDelays");
        }

        public UpdatedMinDelaysQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public UpdatedMinDelaysQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public UpdatedMinDelaysQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public UpdatedMinDelaysQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class VaultQueryBuilder : GraphQlQueryBuilder<VaultQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "vaultAddress" },
                new GraphQlFieldMetadata { Name = "token" },
                new GraphQlFieldMetadata { Name = "balance" },
                new GraphQlFieldMetadata { Name = "depositStatus" },
                new GraphQlFieldMetadata { Name = "withdrawStatus" },
                new GraphQlFieldMetadata { Name = "royaltyReceiver" },
                new GraphQlFieldMetadata { Name = "royaltyFeeNumerator" }
            };

        protected override string TypeName { get { return "Vault"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public VaultQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public VaultQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public VaultQueryBuilder WithVaultAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptVaultAddress()
        {
            return ExceptField("vaultAddress");
        }

        public VaultQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("token", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptToken()
        {
            return ExceptField("token");
        }

        public VaultQueryBuilder WithBalance(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("balance", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptBalance()
        {
            return ExceptField("balance");
        }

        public VaultQueryBuilder WithDepositStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("depositStatus", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptDepositStatus()
        {
            return ExceptField("depositStatus");
        }

        public VaultQueryBuilder WithWithdrawStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("withdrawStatus", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptWithdrawStatus()
        {
            return ExceptField("withdrawStatus");
        }

        public VaultQueryBuilder WithRoyaltyReceiver(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("royaltyReceiver", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptRoyaltyReceiver()
        {
            return ExceptField("royaltyReceiver");
        }

        public VaultQueryBuilder WithRoyaltyFeeNumerator(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("royaltyFeeNumerator", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultQueryBuilder ExceptRoyaltyFeeNumerator()
        {
            return ExceptField("royaltyFeeNumerator");
        }
    }

    public partial class VaultRoyaltySetQueryBuilder : GraphQlQueryBuilder<VaultRoyaltySetQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "tokenAddress" },
                new GraphQlFieldMetadata { Name = "receiver" },
                new GraphQlFieldMetadata { Name = "feeNumerator" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "VaultRoyaltySet"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public VaultRoyaltySetQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public VaultRoyaltySetQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public VaultRoyaltySetQueryBuilder WithTokenAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptTokenAddress()
        {
            return ExceptField("tokenAddress");
        }

        public VaultRoyaltySetQueryBuilder WithReceiver(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("receiver", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptReceiver()
        {
            return ExceptField("receiver");
        }

        public VaultRoyaltySetQueryBuilder WithFeeNumerator(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("feeNumerator", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptFeeNumerator()
        {
            return ExceptField("feeNumerator");
        }

        public VaultRoyaltySetQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public VaultRoyaltySetQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public VaultRoyaltySetQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultRoyaltySetQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class VaultStatusUpdateQueryBuilder : GraphQlQueryBuilder<VaultStatusUpdateQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "depositStatus" },
                new GraphQlFieldMetadata { Name = "withdrawStatus" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "VaultStatusUpdate"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public VaultStatusUpdateQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public VaultStatusUpdateQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public VaultStatusUpdateQueryBuilder WithDepositStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("depositStatus", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptDepositStatus()
        {
            return ExceptField("depositStatus");
        }

        public VaultStatusUpdateQueryBuilder WithWithdrawStatus(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("withdrawStatus", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptWithdrawStatus()
        {
            return ExceptField("withdrawStatus");
        }

        public VaultStatusUpdateQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public VaultStatusUpdateQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public VaultStatusUpdateQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultStatusUpdateQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class VaultValueChangedQueryBuilder : GraphQlQueryBuilder<VaultValueChangedQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "Token" },
                new GraphQlFieldMetadata { Name = "Owner" },
                new GraphQlFieldMetadata { Name = "Amount" },
                new GraphQlFieldMetadata { Name = "StartDelay" },
                new GraphQlFieldMetadata { Name = "CliffDelay" },
                new GraphQlFieldMetadata { Name = "FinishDelay" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "VaultValueChanged"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public VaultValueChangedQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public VaultValueChangedQueryBuilder WithToken(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Token", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptToken()
        {
            return ExceptField("Token");
        }

        public VaultValueChangedQueryBuilder WithOwner(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Owner", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptOwner()
        {
            return ExceptField("Owner");
        }

        public VaultValueChangedQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("Amount", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptAmount()
        {
            return ExceptField("Amount");
        }

        public VaultValueChangedQueryBuilder WithStartDelay(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("StartDelay", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptStartDelay()
        {
            return ExceptField("StartDelay");
        }

        public VaultValueChangedQueryBuilder WithCliffDelay(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("CliffDelay", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptCliffDelay()
        {
            return ExceptField("CliffDelay");
        }

        public VaultValueChangedQueryBuilder WithFinishDelay(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("FinishDelay", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptFinishDelay()
        {
            return ExceptField("FinishDelay");
        }

        public VaultValueChangedQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public VaultValueChangedQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public VaultValueChangedQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public VaultValueChangedQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class WithdrawnQueryBuilder : GraphQlQueryBuilder<WithdrawnQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "id" },
                new GraphQlFieldMetadata { Name = "vaultId" },
                new GraphQlFieldMetadata { Name = "tokenAddress" },
                new GraphQlFieldMetadata { Name = "to" },
                new GraphQlFieldMetadata { Name = "amount" },
                new GraphQlFieldMetadata { Name = "blockNumber" },
                new GraphQlFieldMetadata { Name = "blockTimestamp" },
                new GraphQlFieldMetadata { Name = "transactionHash" }
            };

        protected override string TypeName { get { return "Withdrawn"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public WithdrawnQueryBuilder WithId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("id", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptId()
        {
            return ExceptField("id");
        }

        public WithdrawnQueryBuilder WithVaultId(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("vaultId", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptVaultId()
        {
            return ExceptField("vaultId");
        }

        public WithdrawnQueryBuilder WithTokenAddress(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("tokenAddress", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptTokenAddress()
        {
            return ExceptField("tokenAddress");
        }

        public WithdrawnQueryBuilder WithTo(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("to", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptTo()
        {
            return ExceptField("to");
        }

        public WithdrawnQueryBuilder WithAmount(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("amount", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptAmount()
        {
            return ExceptField("amount");
        }

        public WithdrawnQueryBuilder WithBlockNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockNumber", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptBlockNumber()
        {
            return ExceptField("blockNumber");
        }

        public WithdrawnQueryBuilder WithBlockTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("blockTimestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptBlockTimestamp()
        {
            return ExceptField("blockTimestamp");
        }

        public WithdrawnQueryBuilder WithTransactionHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("transactionHash", alias, new GraphQlDirective[] { skip, include });
        }

        public WithdrawnQueryBuilder ExceptTransactionHash()
        {
            return ExceptField("transactionHash");
        }
    }

    public partial class BlockQueryBuilder : GraphQlQueryBuilder<BlockQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "hash" },
                new GraphQlFieldMetadata { Name = "number" },
                new GraphQlFieldMetadata { Name = "timestamp" },
                new GraphQlFieldMetadata { Name = "parentHash" }
            };

        protected override string TypeName { get { return "_Block_"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public BlockQueryBuilder WithHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("hash", alias, new GraphQlDirective[] { skip, include });
        }

        public BlockQueryBuilder ExceptHash()
        {
            return ExceptField("hash");
        }

        public BlockQueryBuilder WithNumber(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("number", alias, new GraphQlDirective[] { skip, include });
        }

        public BlockQueryBuilder ExceptNumber()
        {
            return ExceptField("number");
        }

        public BlockQueryBuilder WithTimestamp(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("timestamp", alias, new GraphQlDirective[] { skip, include });
        }

        public BlockQueryBuilder ExceptTimestamp()
        {
            return ExceptField("timestamp");
        }

        public BlockQueryBuilder WithParentHash(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("parentHash", alias, new GraphQlDirective[] { skip, include });
        }

        public BlockQueryBuilder ExceptParentHash()
        {
            return ExceptField("parentHash");
        }
    }

    public partial class MetaQueryBuilder : GraphQlQueryBuilder<MetaQueryBuilder>
    {
        private static readonly GraphQlFieldMetadata[] AllFieldMetadata =
            new []
            {
                new GraphQlFieldMetadata { Name = "block", IsComplex = true, QueryBuilderType = typeof(BlockQueryBuilder) },
                new GraphQlFieldMetadata { Name = "deployment" },
                new GraphQlFieldMetadata { Name = "hasIndexingErrors" }
            };

        protected override string TypeName { get { return "_Meta_"; } } 

        public override IReadOnlyList<GraphQlFieldMetadata> AllFields { get { return AllFieldMetadata; } } 

        public MetaQueryBuilder WithBlock(BlockQueryBuilder blockQueryBuilder, string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithObjectField("block", alias, blockQueryBuilder, new GraphQlDirective[] { skip, include });
        }

        public MetaQueryBuilder ExceptBlock()
        {
            return ExceptField("block");
        }

        public MetaQueryBuilder WithDeployment(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("deployment", alias, new GraphQlDirective[] { skip, include });
        }

        public MetaQueryBuilder ExceptDeployment()
        {
            return ExceptField("deployment");
        }

        public MetaQueryBuilder WithHasIndexingErrors(string alias = null, SkipDirective skip = null, IncludeDirective include = null)
        {
            return WithScalarField("hasIndexingErrors", alias, new GraphQlDirective[] { skip, include });
        }

        public MetaQueryBuilder ExceptHasIndexingErrors()
        {
            return ExceptField("hasIndexingErrors");
        }
    }
    #endregion

    #region input classes
    public partial class AllowedContractFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _contractAddress;
        private InputPropertyInfo _contractAddressNot;
        private InputPropertyInfo _contractAddressGt;
        private InputPropertyInfo _contractAddressLt;
        private InputPropertyInfo _contractAddressGte;
        private InputPropertyInfo _contractAddressLte;
        private InputPropertyInfo _contractAddressIn;
        private InputPropertyInfo _contractAddressNotIn;
        private InputPropertyInfo _contractAddressContains;
        private InputPropertyInfo _contractAddressNotContains;
        private InputPropertyInfo _status;
        private InputPropertyInfo _statusNot;
        private InputPropertyInfo _statusIn;
        private InputPropertyInfo _statusNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddress
        {
            get { return (QueryBuilderParameter<string>)_contractAddress.Value; }
            set { _contractAddress = new InputPropertyInfo { Name = "contractAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressNot
        {
            get { return (QueryBuilderParameter<string>)_contractAddressNot.Value; }
            set { _contractAddressNot = new InputPropertyInfo { Name = "contractAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressGt
        {
            get { return (QueryBuilderParameter<string>)_contractAddressGt.Value; }
            set { _contractAddressGt = new InputPropertyInfo { Name = "contractAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressLt
        {
            get { return (QueryBuilderParameter<string>)_contractAddressLt.Value; }
            set { _contractAddressLt = new InputPropertyInfo { Name = "contractAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressGte
        {
            get { return (QueryBuilderParameter<string>)_contractAddressGte.Value; }
            set { _contractAddressGte = new InputPropertyInfo { Name = "contractAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressLte
        {
            get { return (QueryBuilderParameter<string>)_contractAddressLte.Value; }
            set { _contractAddressLte = new InputPropertyInfo { Name = "contractAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ContractAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_contractAddressIn.Value; }
            set { _contractAddressIn = new InputPropertyInfo { Name = "contractAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ContractAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_contractAddressNotIn.Value; }
            set { _contractAddressNotIn = new InputPropertyInfo { Name = "contractAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressContains
        {
            get { return (QueryBuilderParameter<string>)_contractAddressContains.Value; }
            set { _contractAddressContains = new InputPropertyInfo { Name = "contractAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_contractAddressNotContains.Value; }
            set { _contractAddressNotContains = new InputPropertyInfo { Name = "contractAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> Status
        {
            get { return (QueryBuilderParameter<bool?>)_status.Value; }
            set { _status = new InputPropertyInfo { Name = "status", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("status_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> StatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_statusNot.Value; }
            set { _statusNot = new InputPropertyInfo { Name = "status_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("status_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusIn.Value; }
            set { _statusIn = new InputPropertyInfo { Name = "status_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("status_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusNotIn.Value; }
            set { _statusNotIn = new InputPropertyInfo { Name = "status_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<AllowedContractFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<AllowedContractFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<AllowedContractFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<AllowedContractFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<AllowedContractFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<AllowedContractFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_contractAddress.Name != null) yield return _contractAddress;
            if (_contractAddressNot.Name != null) yield return _contractAddressNot;
            if (_contractAddressGt.Name != null) yield return _contractAddressGt;
            if (_contractAddressLt.Name != null) yield return _contractAddressLt;
            if (_contractAddressGte.Name != null) yield return _contractAddressGte;
            if (_contractAddressLte.Name != null) yield return _contractAddressLte;
            if (_contractAddressIn.Name != null) yield return _contractAddressIn;
            if (_contractAddressNotIn.Name != null) yield return _contractAddressNotIn;
            if (_contractAddressContains.Name != null) yield return _contractAddressContains;
            if (_contractAddressNotContains.Name != null) yield return _contractAddressNotContains;
            if (_status.Name != null) yield return _status;
            if (_statusNot.Name != null) yield return _statusNot;
            if (_statusIn.Name != null) yield return _statusIn;
            if (_statusNotIn.Name != null) yield return _statusNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class ApprovalForAllFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _operator;
        private InputPropertyInfo _operatorNot;
        private InputPropertyInfo _operatorGt;
        private InputPropertyInfo _operatorLt;
        private InputPropertyInfo _operatorGte;
        private InputPropertyInfo _operatorLte;
        private InputPropertyInfo _operatorIn;
        private InputPropertyInfo _operatorNotIn;
        private InputPropertyInfo _operatorContains;
        private InputPropertyInfo _operatorNotContains;
        private InputPropertyInfo _approved;
        private InputPropertyInfo _approvedNot;
        private InputPropertyInfo _approvedIn;
        private InputPropertyInfo _approvedNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Operator
        {
            get { return (QueryBuilderParameter<string>)_operator.Value; }
            set { _operator = new InputPropertyInfo { Name = "operator", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorNot
        {
            get { return (QueryBuilderParameter<string>)_operatorNot.Value; }
            set { _operatorNot = new InputPropertyInfo { Name = "operator_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorGt
        {
            get { return (QueryBuilderParameter<string>)_operatorGt.Value; }
            set { _operatorGt = new InputPropertyInfo { Name = "operator_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorLt
        {
            get { return (QueryBuilderParameter<string>)_operatorLt.Value; }
            set { _operatorLt = new InputPropertyInfo { Name = "operator_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorGte
        {
            get { return (QueryBuilderParameter<string>)_operatorGte.Value; }
            set { _operatorGte = new InputPropertyInfo { Name = "operator_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorLte
        {
            get { return (QueryBuilderParameter<string>)_operatorLte.Value; }
            set { _operatorLte = new InputPropertyInfo { Name = "operator_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OperatorIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_operatorIn.Value; }
            set { _operatorIn = new InputPropertyInfo { Name = "operator_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OperatorNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_operatorNotIn.Value; }
            set { _operatorNotIn = new InputPropertyInfo { Name = "operator_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorContains
        {
            get { return (QueryBuilderParameter<string>)_operatorContains.Value; }
            set { _operatorContains = new InputPropertyInfo { Name = "operator_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("operator_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OperatorNotContains
        {
            get { return (QueryBuilderParameter<string>)_operatorNotContains.Value; }
            set { _operatorNotContains = new InputPropertyInfo { Name = "operator_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> Approved
        {
            get { return (QueryBuilderParameter<bool?>)_approved.Value; }
            set { _approved = new InputPropertyInfo { Name = "approved", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> ApprovedNot
        {
            get { return (QueryBuilderParameter<bool?>)_approvedNot.Value; }
            set { _approvedNot = new InputPropertyInfo { Name = "approved_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> ApprovedIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_approvedIn.Value; }
            set { _approvedIn = new InputPropertyInfo { Name = "approved_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> ApprovedNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_approvedNotIn.Value; }
            set { _approvedNotIn = new InputPropertyInfo { Name = "approved_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ApprovalForAllFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<ApprovalForAllFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<ApprovalForAllFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ApprovalForAllFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<ApprovalForAllFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<ApprovalForAllFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_operator.Name != null) yield return _operator;
            if (_operatorNot.Name != null) yield return _operatorNot;
            if (_operatorGt.Name != null) yield return _operatorGt;
            if (_operatorLt.Name != null) yield return _operatorLt;
            if (_operatorGte.Name != null) yield return _operatorGte;
            if (_operatorLte.Name != null) yield return _operatorLte;
            if (_operatorIn.Name != null) yield return _operatorIn;
            if (_operatorNotIn.Name != null) yield return _operatorNotIn;
            if (_operatorContains.Name != null) yield return _operatorContains;
            if (_operatorNotContains.Name != null) yield return _operatorNotContains;
            if (_approved.Name != null) yield return _approved;
            if (_approvedNot.Name != null) yield return _approvedNot;
            if (_approvedIn.Name != null) yield return _approvedIn;
            if (_approvedNotIn.Name != null) yield return _approvedNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class ApprovalFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _approved;
        private InputPropertyInfo _approvedNot;
        private InputPropertyInfo _approvedGt;
        private InputPropertyInfo _approvedLt;
        private InputPropertyInfo _approvedGte;
        private InputPropertyInfo _approvedLte;
        private InputPropertyInfo _approvedIn;
        private InputPropertyInfo _approvedNotIn;
        private InputPropertyInfo _approvedContains;
        private InputPropertyInfo _approvedNotContains;
        private InputPropertyInfo _tokenId;
        private InputPropertyInfo _tokenIdNot;
        private InputPropertyInfo _tokenIdGt;
        private InputPropertyInfo _tokenIdLt;
        private InputPropertyInfo _tokenIdGte;
        private InputPropertyInfo _tokenIdLte;
        private InputPropertyInfo _tokenIdIn;
        private InputPropertyInfo _tokenIdNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Approved
        {
            get { return (QueryBuilderParameter<string>)_approved.Value; }
            set { _approved = new InputPropertyInfo { Name = "approved", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedNot
        {
            get { return (QueryBuilderParameter<string>)_approvedNot.Value; }
            set { _approvedNot = new InputPropertyInfo { Name = "approved_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedGt
        {
            get { return (QueryBuilderParameter<string>)_approvedGt.Value; }
            set { _approvedGt = new InputPropertyInfo { Name = "approved_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedLt
        {
            get { return (QueryBuilderParameter<string>)_approvedLt.Value; }
            set { _approvedLt = new InputPropertyInfo { Name = "approved_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedGte
        {
            get { return (QueryBuilderParameter<string>)_approvedGte.Value; }
            set { _approvedGte = new InputPropertyInfo { Name = "approved_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedLte
        {
            get { return (QueryBuilderParameter<string>)_approvedLte.Value; }
            set { _approvedLte = new InputPropertyInfo { Name = "approved_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ApprovedIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_approvedIn.Value; }
            set { _approvedIn = new InputPropertyInfo { Name = "approved_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ApprovedNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_approvedNotIn.Value; }
            set { _approvedNotIn = new InputPropertyInfo { Name = "approved_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedContains
        {
            get { return (QueryBuilderParameter<string>)_approvedContains.Value; }
            set { _approvedContains = new InputPropertyInfo { Name = "approved_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("approved_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ApprovedNotContains
        {
            get { return (QueryBuilderParameter<string>)_approvedNotContains.Value; }
            set { _approvedNotContains = new InputPropertyInfo { Name = "approved_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenId.Value; }
            set { _tokenId = new InputPropertyInfo { Name = "tokenId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdNot.Value; }
            set { _tokenIdNot = new InputPropertyInfo { Name = "tokenId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdGt.Value; }
            set { _tokenIdGt = new InputPropertyInfo { Name = "tokenId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdLt.Value; }
            set { _tokenIdLt = new InputPropertyInfo { Name = "tokenId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdGte.Value; }
            set { _tokenIdGte = new InputPropertyInfo { Name = "tokenId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdLte.Value; }
            set { _tokenIdLte = new InputPropertyInfo { Name = "tokenId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TokenIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_tokenIdIn.Value; }
            set { _tokenIdIn = new InputPropertyInfo { Name = "tokenId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TokenIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_tokenIdNotIn.Value; }
            set { _tokenIdNotIn = new InputPropertyInfo { Name = "tokenId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ApprovalFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<ApprovalFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<ApprovalFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ApprovalFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<ApprovalFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<ApprovalFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_approved.Name != null) yield return _approved;
            if (_approvedNot.Name != null) yield return _approvedNot;
            if (_approvedGt.Name != null) yield return _approvedGt;
            if (_approvedLt.Name != null) yield return _approvedLt;
            if (_approvedGte.Name != null) yield return _approvedGte;
            if (_approvedLte.Name != null) yield return _approvedLte;
            if (_approvedIn.Name != null) yield return _approvedIn;
            if (_approvedNotIn.Name != null) yield return _approvedNotIn;
            if (_approvedContains.Name != null) yield return _approvedContains;
            if (_approvedNotContains.Name != null) yield return _approvedNotContains;
            if (_tokenId.Name != null) yield return _tokenId;
            if (_tokenIdNot.Name != null) yield return _tokenIdNot;
            if (_tokenIdGt.Name != null) yield return _tokenIdGt;
            if (_tokenIdLt.Name != null) yield return _tokenIdLt;
            if (_tokenIdGte.Name != null) yield return _tokenIdGte;
            if (_tokenIdLte.Name != null) yield return _tokenIdLte;
            if (_tokenIdIn.Name != null) yield return _tokenIdIn;
            if (_tokenIdNotIn.Name != null) yield return _tokenIdNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class BaseUriChangedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _oldBaseUri;
        private InputPropertyInfo _oldBaseUriNot;
        private InputPropertyInfo _oldBaseUriGt;
        private InputPropertyInfo _oldBaseUriLt;
        private InputPropertyInfo _oldBaseUriGte;
        private InputPropertyInfo _oldBaseUriLte;
        private InputPropertyInfo _oldBaseUriIn;
        private InputPropertyInfo _oldBaseUriNotIn;
        private InputPropertyInfo _oldBaseUriContains;
        private InputPropertyInfo _oldBaseUriContainsNocase;
        private InputPropertyInfo _oldBaseUriNotContains;
        private InputPropertyInfo _oldBaseUriNotContainsNocase;
        private InputPropertyInfo _oldBaseUriStartsWith;
        private InputPropertyInfo _oldBaseUriStartsWithNocase;
        private InputPropertyInfo _oldBaseUriNotStartsWith;
        private InputPropertyInfo _oldBaseUriNotStartsWithNocase;
        private InputPropertyInfo _oldBaseUriEndsWith;
        private InputPropertyInfo _oldBaseUriEndsWithNocase;
        private InputPropertyInfo _oldBaseUriNotEndsWith;
        private InputPropertyInfo _oldBaseUriNotEndsWithNocase;
        private InputPropertyInfo _newBaseUri;
        private InputPropertyInfo _newBaseUriNot;
        private InputPropertyInfo _newBaseUriGt;
        private InputPropertyInfo _newBaseUriLt;
        private InputPropertyInfo _newBaseUriGte;
        private InputPropertyInfo _newBaseUriLte;
        private InputPropertyInfo _newBaseUriIn;
        private InputPropertyInfo _newBaseUriNotIn;
        private InputPropertyInfo _newBaseUriContains;
        private InputPropertyInfo _newBaseUriContainsNocase;
        private InputPropertyInfo _newBaseUriNotContains;
        private InputPropertyInfo _newBaseUriNotContainsNocase;
        private InputPropertyInfo _newBaseUriStartsWith;
        private InputPropertyInfo _newBaseUriStartsWithNocase;
        private InputPropertyInfo _newBaseUriNotStartsWith;
        private InputPropertyInfo _newBaseUriNotStartsWithNocase;
        private InputPropertyInfo _newBaseUriEndsWith;
        private InputPropertyInfo _newBaseUriEndsWithNocase;
        private InputPropertyInfo _newBaseUriNotEndsWith;
        private InputPropertyInfo _newBaseUriNotEndsWithNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUri
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUri.Value; }
            set { _oldBaseUri = new InputPropertyInfo { Name = "oldBaseURI", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNot
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNot.Value; }
            set { _oldBaseUriNot = new InputPropertyInfo { Name = "oldBaseURI_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriGt
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriGt.Value; }
            set { _oldBaseUriGt = new InputPropertyInfo { Name = "oldBaseURI_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriLt
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriLt.Value; }
            set { _oldBaseUriLt = new InputPropertyInfo { Name = "oldBaseURI_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriGte
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriGte.Value; }
            set { _oldBaseUriGte = new InputPropertyInfo { Name = "oldBaseURI_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriLte
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriLte.Value; }
            set { _oldBaseUriLte = new InputPropertyInfo { Name = "oldBaseURI_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OldBaseUriIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_oldBaseUriIn.Value; }
            set { _oldBaseUriIn = new InputPropertyInfo { Name = "oldBaseURI_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OldBaseUriNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_oldBaseUriNotIn.Value; }
            set { _oldBaseUriNotIn = new InputPropertyInfo { Name = "oldBaseURI_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriContains
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriContains.Value; }
            set { _oldBaseUriContains = new InputPropertyInfo { Name = "oldBaseURI_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriContainsNocase
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriContainsNocase.Value; }
            set { _oldBaseUriContainsNocase = new InputPropertyInfo { Name = "oldBaseURI_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNotContains
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNotContains.Value; }
            set { _oldBaseUriNotContains = new InputPropertyInfo { Name = "oldBaseURI_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNotContainsNocase
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNotContainsNocase.Value; }
            set { _oldBaseUriNotContainsNocase = new InputPropertyInfo { Name = "oldBaseURI_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_starts_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriStartsWith
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriStartsWith.Value; }
            set { _oldBaseUriStartsWith = new InputPropertyInfo { Name = "oldBaseURI_starts_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_starts_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriStartsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriStartsWithNocase.Value; }
            set { _oldBaseUriStartsWithNocase = new InputPropertyInfo { Name = "oldBaseURI_starts_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_starts_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNotStartsWith
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNotStartsWith.Value; }
            set { _oldBaseUriNotStartsWith = new InputPropertyInfo { Name = "oldBaseURI_not_starts_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_starts_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNotStartsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNotStartsWithNocase.Value; }
            set { _oldBaseUriNotStartsWithNocase = new InputPropertyInfo { Name = "oldBaseURI_not_starts_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_ends_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriEndsWith
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriEndsWith.Value; }
            set { _oldBaseUriEndsWith = new InputPropertyInfo { Name = "oldBaseURI_ends_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_ends_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriEndsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriEndsWithNocase.Value; }
            set { _oldBaseUriEndsWithNocase = new InputPropertyInfo { Name = "oldBaseURI_ends_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_ends_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNotEndsWith
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNotEndsWith.Value; }
            set { _oldBaseUriNotEndsWith = new InputPropertyInfo { Name = "oldBaseURI_not_ends_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldBaseURI_not_ends_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldBaseUriNotEndsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_oldBaseUriNotEndsWithNocase.Value; }
            set { _oldBaseUriNotEndsWithNocase = new InputPropertyInfo { Name = "oldBaseURI_not_ends_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUri
        {
            get { return (QueryBuilderParameter<string>)_newBaseUri.Value; }
            set { _newBaseUri = new InputPropertyInfo { Name = "newBaseURI", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNot
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNot.Value; }
            set { _newBaseUriNot = new InputPropertyInfo { Name = "newBaseURI_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriGt
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriGt.Value; }
            set { _newBaseUriGt = new InputPropertyInfo { Name = "newBaseURI_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriLt
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriLt.Value; }
            set { _newBaseUriLt = new InputPropertyInfo { Name = "newBaseURI_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriGte
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriGte.Value; }
            set { _newBaseUriGte = new InputPropertyInfo { Name = "newBaseURI_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriLte
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriLte.Value; }
            set { _newBaseUriLte = new InputPropertyInfo { Name = "newBaseURI_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewBaseUriIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newBaseUriIn.Value; }
            set { _newBaseUriIn = new InputPropertyInfo { Name = "newBaseURI_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewBaseUriNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newBaseUriNotIn.Value; }
            set { _newBaseUriNotIn = new InputPropertyInfo { Name = "newBaseURI_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriContains
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriContains.Value; }
            set { _newBaseUriContains = new InputPropertyInfo { Name = "newBaseURI_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriContainsNocase
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriContainsNocase.Value; }
            set { _newBaseUriContainsNocase = new InputPropertyInfo { Name = "newBaseURI_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNotContains
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNotContains.Value; }
            set { _newBaseUriNotContains = new InputPropertyInfo { Name = "newBaseURI_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNotContainsNocase
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNotContainsNocase.Value; }
            set { _newBaseUriNotContainsNocase = new InputPropertyInfo { Name = "newBaseURI_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_starts_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriStartsWith
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriStartsWith.Value; }
            set { _newBaseUriStartsWith = new InputPropertyInfo { Name = "newBaseURI_starts_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_starts_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriStartsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriStartsWithNocase.Value; }
            set { _newBaseUriStartsWithNocase = new InputPropertyInfo { Name = "newBaseURI_starts_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_starts_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNotStartsWith
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNotStartsWith.Value; }
            set { _newBaseUriNotStartsWith = new InputPropertyInfo { Name = "newBaseURI_not_starts_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_starts_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNotStartsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNotStartsWithNocase.Value; }
            set { _newBaseUriNotStartsWithNocase = new InputPropertyInfo { Name = "newBaseURI_not_starts_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_ends_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriEndsWith
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriEndsWith.Value; }
            set { _newBaseUriEndsWith = new InputPropertyInfo { Name = "newBaseURI_ends_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_ends_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriEndsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriEndsWithNocase.Value; }
            set { _newBaseUriEndsWithNocase = new InputPropertyInfo { Name = "newBaseURI_ends_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_ends_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNotEndsWith
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNotEndsWith.Value; }
            set { _newBaseUriNotEndsWith = new InputPropertyInfo { Name = "newBaseURI_not_ends_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newBaseURI_not_ends_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewBaseUriNotEndsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_newBaseUriNotEndsWithNocase.Value; }
            set { _newBaseUriNotEndsWithNocase = new InputPropertyInfo { Name = "newBaseURI_not_ends_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<BaseUriChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<BaseUriChangedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<BaseUriChangedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<BaseUriChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<BaseUriChangedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<BaseUriChangedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_oldBaseUri.Name != null) yield return _oldBaseUri;
            if (_oldBaseUriNot.Name != null) yield return _oldBaseUriNot;
            if (_oldBaseUriGt.Name != null) yield return _oldBaseUriGt;
            if (_oldBaseUriLt.Name != null) yield return _oldBaseUriLt;
            if (_oldBaseUriGte.Name != null) yield return _oldBaseUriGte;
            if (_oldBaseUriLte.Name != null) yield return _oldBaseUriLte;
            if (_oldBaseUriIn.Name != null) yield return _oldBaseUriIn;
            if (_oldBaseUriNotIn.Name != null) yield return _oldBaseUriNotIn;
            if (_oldBaseUriContains.Name != null) yield return _oldBaseUriContains;
            if (_oldBaseUriContainsNocase.Name != null) yield return _oldBaseUriContainsNocase;
            if (_oldBaseUriNotContains.Name != null) yield return _oldBaseUriNotContains;
            if (_oldBaseUriNotContainsNocase.Name != null) yield return _oldBaseUriNotContainsNocase;
            if (_oldBaseUriStartsWith.Name != null) yield return _oldBaseUriStartsWith;
            if (_oldBaseUriStartsWithNocase.Name != null) yield return _oldBaseUriStartsWithNocase;
            if (_oldBaseUriNotStartsWith.Name != null) yield return _oldBaseUriNotStartsWith;
            if (_oldBaseUriNotStartsWithNocase.Name != null) yield return _oldBaseUriNotStartsWithNocase;
            if (_oldBaseUriEndsWith.Name != null) yield return _oldBaseUriEndsWith;
            if (_oldBaseUriEndsWithNocase.Name != null) yield return _oldBaseUriEndsWithNocase;
            if (_oldBaseUriNotEndsWith.Name != null) yield return _oldBaseUriNotEndsWith;
            if (_oldBaseUriNotEndsWithNocase.Name != null) yield return _oldBaseUriNotEndsWithNocase;
            if (_newBaseUri.Name != null) yield return _newBaseUri;
            if (_newBaseUriNot.Name != null) yield return _newBaseUriNot;
            if (_newBaseUriGt.Name != null) yield return _newBaseUriGt;
            if (_newBaseUriLt.Name != null) yield return _newBaseUriLt;
            if (_newBaseUriGte.Name != null) yield return _newBaseUriGte;
            if (_newBaseUriLte.Name != null) yield return _newBaseUriLte;
            if (_newBaseUriIn.Name != null) yield return _newBaseUriIn;
            if (_newBaseUriNotIn.Name != null) yield return _newBaseUriNotIn;
            if (_newBaseUriContains.Name != null) yield return _newBaseUriContains;
            if (_newBaseUriContainsNocase.Name != null) yield return _newBaseUriContainsNocase;
            if (_newBaseUriNotContains.Name != null) yield return _newBaseUriNotContains;
            if (_newBaseUriNotContainsNocase.Name != null) yield return _newBaseUriNotContainsNocase;
            if (_newBaseUriStartsWith.Name != null) yield return _newBaseUriStartsWith;
            if (_newBaseUriStartsWithNocase.Name != null) yield return _newBaseUriStartsWithNocase;
            if (_newBaseUriNotStartsWith.Name != null) yield return _newBaseUriNotStartsWith;
            if (_newBaseUriNotStartsWithNocase.Name != null) yield return _newBaseUriNotStartsWithNocase;
            if (_newBaseUriEndsWith.Name != null) yield return _newBaseUriEndsWith;
            if (_newBaseUriEndsWithNocase.Name != null) yield return _newBaseUriEndsWithNocase;
            if (_newBaseUriNotEndsWith.Name != null) yield return _newBaseUriNotEndsWith;
            if (_newBaseUriNotEndsWithNocase.Name != null) yield return _newBaseUriNotEndsWithNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class BatchMetadataUpdateFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _fromTokenId;
        private InputPropertyInfo _fromTokenIdNot;
        private InputPropertyInfo _fromTokenIdGt;
        private InputPropertyInfo _fromTokenIdLt;
        private InputPropertyInfo _fromTokenIdGte;
        private InputPropertyInfo _fromTokenIdLte;
        private InputPropertyInfo _fromTokenIdIn;
        private InputPropertyInfo _fromTokenIdNotIn;
        private InputPropertyInfo _toTokenId;
        private InputPropertyInfo _toTokenIdNot;
        private InputPropertyInfo _toTokenIdGt;
        private InputPropertyInfo _toTokenIdLt;
        private InputPropertyInfo _toTokenIdGte;
        private InputPropertyInfo _toTokenIdLte;
        private InputPropertyInfo _toTokenIdIn;
        private InputPropertyInfo _toTokenIdNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FromTokenId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_fromTokenId.Value; }
            set { _fromTokenId = new InputPropertyInfo { Name = "_fromTokenId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FromTokenIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_fromTokenIdNot.Value; }
            set { _fromTokenIdNot = new InputPropertyInfo { Name = "_fromTokenId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FromTokenIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_fromTokenIdGt.Value; }
            set { _fromTokenIdGt = new InputPropertyInfo { Name = "_fromTokenId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FromTokenIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_fromTokenIdLt.Value; }
            set { _fromTokenIdLt = new InputPropertyInfo { Name = "_fromTokenId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FromTokenIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_fromTokenIdGte.Value; }
            set { _fromTokenIdGte = new InputPropertyInfo { Name = "_fromTokenId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FromTokenIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_fromTokenIdLte.Value; }
            set { _fromTokenIdLte = new InputPropertyInfo { Name = "_fromTokenId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FromTokenIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_fromTokenIdIn.Value; }
            set { _fromTokenIdIn = new InputPropertyInfo { Name = "_fromTokenId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FromTokenIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_fromTokenIdNotIn.Value; }
            set { _fromTokenIdNotIn = new InputPropertyInfo { Name = "_fromTokenId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> ToTokenId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_toTokenId.Value; }
            set { _toTokenId = new InputPropertyInfo { Name = "_toTokenId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> ToTokenIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_toTokenIdNot.Value; }
            set { _toTokenIdNot = new InputPropertyInfo { Name = "_toTokenId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> ToTokenIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_toTokenIdGt.Value; }
            set { _toTokenIdGt = new InputPropertyInfo { Name = "_toTokenId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> ToTokenIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_toTokenIdLt.Value; }
            set { _toTokenIdLt = new InputPropertyInfo { Name = "_toTokenId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> ToTokenIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_toTokenIdGte.Value; }
            set { _toTokenIdGte = new InputPropertyInfo { Name = "_toTokenId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> ToTokenIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_toTokenIdLte.Value; }
            set { _toTokenIdLte = new InputPropertyInfo { Name = "_toTokenId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ToTokenIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_toTokenIdIn.Value; }
            set { _toTokenIdIn = new InputPropertyInfo { Name = "_toTokenId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ToTokenIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_toTokenIdNotIn.Value; }
            set { _toTokenIdNotIn = new InputPropertyInfo { Name = "_toTokenId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<BatchMetadataUpdateFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<BatchMetadataUpdateFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<BatchMetadataUpdateFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<BatchMetadataUpdateFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<BatchMetadataUpdateFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<BatchMetadataUpdateFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_fromTokenId.Name != null) yield return _fromTokenId;
            if (_fromTokenIdNot.Name != null) yield return _fromTokenIdNot;
            if (_fromTokenIdGt.Name != null) yield return _fromTokenIdGt;
            if (_fromTokenIdLt.Name != null) yield return _fromTokenIdLt;
            if (_fromTokenIdGte.Name != null) yield return _fromTokenIdGte;
            if (_fromTokenIdLte.Name != null) yield return _fromTokenIdLte;
            if (_fromTokenIdIn.Name != null) yield return _fromTokenIdIn;
            if (_fromTokenIdNotIn.Name != null) yield return _fromTokenIdNotIn;
            if (_toTokenId.Name != null) yield return _toTokenId;
            if (_toTokenIdNot.Name != null) yield return _toTokenIdNot;
            if (_toTokenIdGt.Name != null) yield return _toTokenIdGt;
            if (_toTokenIdLt.Name != null) yield return _toTokenIdLt;
            if (_toTokenIdGte.Name != null) yield return _toTokenIdGte;
            if (_toTokenIdLte.Name != null) yield return _toTokenIdLte;
            if (_toTokenIdIn.Name != null) yield return _toTokenIdIn;
            if (_toTokenIdNotIn.Name != null) yield return _toTokenIdNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class BlockChangedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _numberGte;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("number_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> NumberGte
        {
            get { return (QueryBuilderParameter<int?>)_numberGte.Value; }
            set { _numberGte = new InputPropertyInfo { Name = "number_gte", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_numberGte.Name != null) yield return _numberGte;
        }
    }

    public partial class BlockHeight : IGraphQlInputObject
    {
        private InputPropertyInfo _hash;
        private InputPropertyInfo _number;
        private InputPropertyInfo _numberGte;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Hash
        {
            get { return (QueryBuilderParameter<string>)_hash.Value; }
            set { _hash = new InputPropertyInfo { Name = "hash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> Number
        {
            get { return (QueryBuilderParameter<int?>)_number.Value; }
            set { _number = new InputPropertyInfo { Name = "number", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("number_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<int?>))]
        #endif
        public QueryBuilderParameter<int?> NumberGte
        {
            get { return (QueryBuilderParameter<int?>)_numberGte.Value; }
            set { _numberGte = new InputPropertyInfo { Name = "number_gte", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_hash.Name != null) yield return _hash;
            if (_number.Name != null) yield return _number;
            if (_numberGte.Name != null) yield return _numberGte;
        }
    }

    public partial class CollateralProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<CollateralProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<CollateralProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<CollateralProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<CollateralProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<CollateralProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<CollateralProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class ContractApprovedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _contractAddress;
        private InputPropertyInfo _contractAddressNot;
        private InputPropertyInfo _contractAddressGt;
        private InputPropertyInfo _contractAddressLt;
        private InputPropertyInfo _contractAddressGte;
        private InputPropertyInfo _contractAddressLte;
        private InputPropertyInfo _contractAddressIn;
        private InputPropertyInfo _contractAddressNotIn;
        private InputPropertyInfo _contractAddressContains;
        private InputPropertyInfo _contractAddressNotContains;
        private InputPropertyInfo _status;
        private InputPropertyInfo _statusNot;
        private InputPropertyInfo _statusIn;
        private InputPropertyInfo _statusNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddress
        {
            get { return (QueryBuilderParameter<string>)_contractAddress.Value; }
            set { _contractAddress = new InputPropertyInfo { Name = "contractAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressNot
        {
            get { return (QueryBuilderParameter<string>)_contractAddressNot.Value; }
            set { _contractAddressNot = new InputPropertyInfo { Name = "contractAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressGt
        {
            get { return (QueryBuilderParameter<string>)_contractAddressGt.Value; }
            set { _contractAddressGt = new InputPropertyInfo { Name = "contractAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressLt
        {
            get { return (QueryBuilderParameter<string>)_contractAddressLt.Value; }
            set { _contractAddressLt = new InputPropertyInfo { Name = "contractAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressGte
        {
            get { return (QueryBuilderParameter<string>)_contractAddressGte.Value; }
            set { _contractAddressGte = new InputPropertyInfo { Name = "contractAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressLte
        {
            get { return (QueryBuilderParameter<string>)_contractAddressLte.Value; }
            set { _contractAddressLte = new InputPropertyInfo { Name = "contractAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ContractAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_contractAddressIn.Value; }
            set { _contractAddressIn = new InputPropertyInfo { Name = "contractAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ContractAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_contractAddressNotIn.Value; }
            set { _contractAddressNotIn = new InputPropertyInfo { Name = "contractAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressContains
        {
            get { return (QueryBuilderParameter<string>)_contractAddressContains.Value; }
            set { _contractAddressContains = new InputPropertyInfo { Name = "contractAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("contractAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ContractAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_contractAddressNotContains.Value; }
            set { _contractAddressNotContains = new InputPropertyInfo { Name = "contractAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> Status
        {
            get { return (QueryBuilderParameter<bool?>)_status.Value; }
            set { _status = new InputPropertyInfo { Name = "status", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("status_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> StatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_statusNot.Value; }
            set { _statusNot = new InputPropertyInfo { Name = "status_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("status_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusIn.Value; }
            set { _statusIn = new InputPropertyInfo { Name = "status_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("status_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusNotIn.Value; }
            set { _statusNotIn = new InputPropertyInfo { Name = "status_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ContractApprovedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<ContractApprovedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<ContractApprovedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<ContractApprovedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<ContractApprovedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<ContractApprovedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_contractAddress.Name != null) yield return _contractAddress;
            if (_contractAddressNot.Name != null) yield return _contractAddressNot;
            if (_contractAddressGt.Name != null) yield return _contractAddressGt;
            if (_contractAddressLt.Name != null) yield return _contractAddressLt;
            if (_contractAddressGte.Name != null) yield return _contractAddressGte;
            if (_contractAddressLte.Name != null) yield return _contractAddressLte;
            if (_contractAddressIn.Name != null) yield return _contractAddressIn;
            if (_contractAddressNotIn.Name != null) yield return _contractAddressNotIn;
            if (_contractAddressContains.Name != null) yield return _contractAddressContains;
            if (_contractAddressNotContains.Name != null) yield return _contractAddressNotContains;
            if (_status.Name != null) yield return _status;
            if (_statusNot.Name != null) yield return _statusNot;
            if (_statusIn.Name != null) yield return _statusIn;
            if (_statusNotIn.Name != null) yield return _statusNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DealProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DealProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DealProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DealProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DealProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DelayVaultOwnershipTransferredFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _previousOwner;
        private InputPropertyInfo _previousOwnerNot;
        private InputPropertyInfo _previousOwnerGt;
        private InputPropertyInfo _previousOwnerLt;
        private InputPropertyInfo _previousOwnerGte;
        private InputPropertyInfo _previousOwnerLte;
        private InputPropertyInfo _previousOwnerIn;
        private InputPropertyInfo _previousOwnerNotIn;
        private InputPropertyInfo _previousOwnerContains;
        private InputPropertyInfo _previousOwnerNotContains;
        private InputPropertyInfo _newOwner;
        private InputPropertyInfo _newOwnerNot;
        private InputPropertyInfo _newOwnerGt;
        private InputPropertyInfo _newOwnerLt;
        private InputPropertyInfo _newOwnerGte;
        private InputPropertyInfo _newOwnerLte;
        private InputPropertyInfo _newOwnerIn;
        private InputPropertyInfo _newOwnerNotIn;
        private InputPropertyInfo _newOwnerContains;
        private InputPropertyInfo _newOwnerNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwner
        {
            get { return (QueryBuilderParameter<string>)_previousOwner.Value; }
            set { _previousOwner = new InputPropertyInfo { Name = "previousOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNot.Value; }
            set { _previousOwnerNot = new InputPropertyInfo { Name = "previousOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGt.Value; }
            set { _previousOwnerGt = new InputPropertyInfo { Name = "previousOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLt.Value; }
            set { _previousOwnerLt = new InputPropertyInfo { Name = "previousOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGte.Value; }
            set { _previousOwnerGte = new InputPropertyInfo { Name = "previousOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLte.Value; }
            set { _previousOwnerLte = new InputPropertyInfo { Name = "previousOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerIn.Value; }
            set { _previousOwnerIn = new InputPropertyInfo { Name = "previousOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerNotIn.Value; }
            set { _previousOwnerNotIn = new InputPropertyInfo { Name = "previousOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerContains.Value; }
            set { _previousOwnerContains = new InputPropertyInfo { Name = "previousOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNotContains.Value; }
            set { _previousOwnerNotContains = new InputPropertyInfo { Name = "previousOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwner
        {
            get { return (QueryBuilderParameter<string>)_newOwner.Value; }
            set { _newOwner = new InputPropertyInfo { Name = "newOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNot.Value; }
            set { _newOwnerNot = new InputPropertyInfo { Name = "newOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGt.Value; }
            set { _newOwnerGt = new InputPropertyInfo { Name = "newOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLt.Value; }
            set { _newOwnerLt = new InputPropertyInfo { Name = "newOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGte.Value; }
            set { _newOwnerGte = new InputPropertyInfo { Name = "newOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLte.Value; }
            set { _newOwnerLte = new InputPropertyInfo { Name = "newOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerIn.Value; }
            set { _newOwnerIn = new InputPropertyInfo { Name = "newOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerNotIn.Value; }
            set { _newOwnerNotIn = new InputPropertyInfo { Name = "newOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerContains.Value; }
            set { _newOwnerContains = new InputPropertyInfo { Name = "newOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNotContains.Value; }
            set { _newOwnerNotContains = new InputPropertyInfo { Name = "newOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultOwnershipTransferredFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultOwnershipTransferredFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultOwnershipTransferredFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultOwnershipTransferredFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultOwnershipTransferredFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultOwnershipTransferredFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_previousOwner.Name != null) yield return _previousOwner;
            if (_previousOwnerNot.Name != null) yield return _previousOwnerNot;
            if (_previousOwnerGt.Name != null) yield return _previousOwnerGt;
            if (_previousOwnerLt.Name != null) yield return _previousOwnerLt;
            if (_previousOwnerGte.Name != null) yield return _previousOwnerGte;
            if (_previousOwnerLte.Name != null) yield return _previousOwnerLte;
            if (_previousOwnerIn.Name != null) yield return _previousOwnerIn;
            if (_previousOwnerNotIn.Name != null) yield return _previousOwnerNotIn;
            if (_previousOwnerContains.Name != null) yield return _previousOwnerContains;
            if (_previousOwnerNotContains.Name != null) yield return _previousOwnerNotContains;
            if (_newOwner.Name != null) yield return _newOwner;
            if (_newOwnerNot.Name != null) yield return _newOwnerNot;
            if (_newOwnerGt.Name != null) yield return _newOwnerGt;
            if (_newOwnerLt.Name != null) yield return _newOwnerLt;
            if (_newOwnerGte.Name != null) yield return _newOwnerGte;
            if (_newOwnerLte.Name != null) yield return _newOwnerLte;
            if (_newOwnerIn.Name != null) yield return _newOwnerIn;
            if (_newOwnerNotIn.Name != null) yield return _newOwnerNotIn;
            if (_newOwnerContains.Name != null) yield return _newOwnerContains;
            if (_newOwnerNotContains.Name != null) yield return _newOwnerNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DelayVaultPausedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _account;
        private InputPropertyInfo _accountNot;
        private InputPropertyInfo _accountGt;
        private InputPropertyInfo _accountLt;
        private InputPropertyInfo _accountGte;
        private InputPropertyInfo _accountLte;
        private InputPropertyInfo _accountIn;
        private InputPropertyInfo _accountNotIn;
        private InputPropertyInfo _accountContains;
        private InputPropertyInfo _accountNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Account
        {
            get { return (QueryBuilderParameter<string>)_account.Value; }
            set { _account = new InputPropertyInfo { Name = "account", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountNot
        {
            get { return (QueryBuilderParameter<string>)_accountNot.Value; }
            set { _accountNot = new InputPropertyInfo { Name = "account_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountGt
        {
            get { return (QueryBuilderParameter<string>)_accountGt.Value; }
            set { _accountGt = new InputPropertyInfo { Name = "account_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountLt
        {
            get { return (QueryBuilderParameter<string>)_accountLt.Value; }
            set { _accountLt = new InputPropertyInfo { Name = "account_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountGte
        {
            get { return (QueryBuilderParameter<string>)_accountGte.Value; }
            set { _accountGte = new InputPropertyInfo { Name = "account_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountLte
        {
            get { return (QueryBuilderParameter<string>)_accountLte.Value; }
            set { _accountLte = new InputPropertyInfo { Name = "account_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> AccountIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_accountIn.Value; }
            set { _accountIn = new InputPropertyInfo { Name = "account_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> AccountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_accountNotIn.Value; }
            set { _accountNotIn = new InputPropertyInfo { Name = "account_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountContains
        {
            get { return (QueryBuilderParameter<string>)_accountContains.Value; }
            set { _accountContains = new InputPropertyInfo { Name = "account_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountNotContains
        {
            get { return (QueryBuilderParameter<string>)_accountNotContains.Value; }
            set { _accountNotContains = new InputPropertyInfo { Name = "account_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultPausedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultPausedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultPausedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultPausedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultPausedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultPausedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_account.Name != null) yield return _account;
            if (_accountNot.Name != null) yield return _accountNot;
            if (_accountGt.Name != null) yield return _accountGt;
            if (_accountLt.Name != null) yield return _accountLt;
            if (_accountGte.Name != null) yield return _accountGte;
            if (_accountLte.Name != null) yield return _accountLte;
            if (_accountIn.Name != null) yield return _accountIn;
            if (_accountNotIn.Name != null) yield return _accountNotIn;
            if (_accountContains.Name != null) yield return _accountContains;
            if (_accountNotContains.Name != null) yield return _accountNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DelayVaultProviderVaultValueChangedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultProviderVaultValueChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultProviderVaultValueChangedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultProviderVaultValueChangedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultProviderVaultValueChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultProviderVaultValueChangedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultProviderVaultValueChangedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DelayVaultTransferInFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _from;
        private InputPropertyInfo _fromNot;
        private InputPropertyInfo _fromGt;
        private InputPropertyInfo _fromLt;
        private InputPropertyInfo _fromGte;
        private InputPropertyInfo _fromLte;
        private InputPropertyInfo _fromIn;
        private InputPropertyInfo _fromNotIn;
        private InputPropertyInfo _fromContains;
        private InputPropertyInfo _fromNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "Amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "Amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "Amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "Amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "Amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "Amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "Amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "Amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> From
        {
            get { return (QueryBuilderParameter<string>)_from.Value; }
            set { _from = new InputPropertyInfo { Name = "From", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromNot
        {
            get { return (QueryBuilderParameter<string>)_fromNot.Value; }
            set { _fromNot = new InputPropertyInfo { Name = "From_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromGt
        {
            get { return (QueryBuilderParameter<string>)_fromGt.Value; }
            set { _fromGt = new InputPropertyInfo { Name = "From_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromLt
        {
            get { return (QueryBuilderParameter<string>)_fromLt.Value; }
            set { _fromLt = new InputPropertyInfo { Name = "From_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromGte
        {
            get { return (QueryBuilderParameter<string>)_fromGte.Value; }
            set { _fromGte = new InputPropertyInfo { Name = "From_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromLte
        {
            get { return (QueryBuilderParameter<string>)_fromLte.Value; }
            set { _fromLte = new InputPropertyInfo { Name = "From_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> FromIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_fromIn.Value; }
            set { _fromIn = new InputPropertyInfo { Name = "From_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> FromNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_fromNotIn.Value; }
            set { _fromNotIn = new InputPropertyInfo { Name = "From_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromContains
        {
            get { return (QueryBuilderParameter<string>)_fromContains.Value; }
            set { _fromContains = new InputPropertyInfo { Name = "From_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("From_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromNotContains
        {
            get { return (QueryBuilderParameter<string>)_fromNotContains.Value; }
            set { _fromNotContains = new InputPropertyInfo { Name = "From_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultTransferInFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultTransferInFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultTransferInFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultTransferInFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultTransferInFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultTransferInFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_from.Name != null) yield return _from;
            if (_fromNot.Name != null) yield return _fromNot;
            if (_fromGt.Name != null) yield return _fromGt;
            if (_fromLt.Name != null) yield return _fromLt;
            if (_fromGte.Name != null) yield return _fromGte;
            if (_fromLte.Name != null) yield return _fromLte;
            if (_fromIn.Name != null) yield return _fromIn;
            if (_fromNotIn.Name != null) yield return _fromNotIn;
            if (_fromContains.Name != null) yield return _fromContains;
            if (_fromNotContains.Name != null) yield return _fromNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DelayVaultTransferOutFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _to;
        private InputPropertyInfo _toNot;
        private InputPropertyInfo _toGt;
        private InputPropertyInfo _toLt;
        private InputPropertyInfo _toGte;
        private InputPropertyInfo _toLte;
        private InputPropertyInfo _toIn;
        private InputPropertyInfo _toNotIn;
        private InputPropertyInfo _toContains;
        private InputPropertyInfo _toNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "Amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "Amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "Amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "Amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "Amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "Amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "Amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "Amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> To
        {
            get { return (QueryBuilderParameter<string>)_to.Value; }
            set { _to = new InputPropertyInfo { Name = "To", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToNot
        {
            get { return (QueryBuilderParameter<string>)_toNot.Value; }
            set { _toNot = new InputPropertyInfo { Name = "To_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToGt
        {
            get { return (QueryBuilderParameter<string>)_toGt.Value; }
            set { _toGt = new InputPropertyInfo { Name = "To_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToLt
        {
            get { return (QueryBuilderParameter<string>)_toLt.Value; }
            set { _toLt = new InputPropertyInfo { Name = "To_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToGte
        {
            get { return (QueryBuilderParameter<string>)_toGte.Value; }
            set { _toGte = new InputPropertyInfo { Name = "To_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToLte
        {
            get { return (QueryBuilderParameter<string>)_toLte.Value; }
            set { _toLte = new InputPropertyInfo { Name = "To_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ToIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_toIn.Value; }
            set { _toIn = new InputPropertyInfo { Name = "To_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ToNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_toNotIn.Value; }
            set { _toNotIn = new InputPropertyInfo { Name = "To_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToContains
        {
            get { return (QueryBuilderParameter<string>)_toContains.Value; }
            set { _toContains = new InputPropertyInfo { Name = "To_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("To_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToNotContains
        {
            get { return (QueryBuilderParameter<string>)_toNotContains.Value; }
            set { _toNotContains = new InputPropertyInfo { Name = "To_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultTransferOutFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultTransferOutFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultTransferOutFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultTransferOutFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultTransferOutFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultTransferOutFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_to.Name != null) yield return _to;
            if (_toNot.Name != null) yield return _toNot;
            if (_toGt.Name != null) yield return _toGt;
            if (_toLt.Name != null) yield return _toLt;
            if (_toGte.Name != null) yield return _toGte;
            if (_toLte.Name != null) yield return _toLte;
            if (_toIn.Name != null) yield return _toIn;
            if (_toNotIn.Name != null) yield return _toNotIn;
            if (_toContains.Name != null) yield return _toContains;
            if (_toNotContains.Name != null) yield return _toNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DelayVaultUnpausedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _account;
        private InputPropertyInfo _accountNot;
        private InputPropertyInfo _accountGt;
        private InputPropertyInfo _accountLt;
        private InputPropertyInfo _accountGte;
        private InputPropertyInfo _accountLte;
        private InputPropertyInfo _accountIn;
        private InputPropertyInfo _accountNotIn;
        private InputPropertyInfo _accountContains;
        private InputPropertyInfo _accountNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Account
        {
            get { return (QueryBuilderParameter<string>)_account.Value; }
            set { _account = new InputPropertyInfo { Name = "account", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountNot
        {
            get { return (QueryBuilderParameter<string>)_accountNot.Value; }
            set { _accountNot = new InputPropertyInfo { Name = "account_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountGt
        {
            get { return (QueryBuilderParameter<string>)_accountGt.Value; }
            set { _accountGt = new InputPropertyInfo { Name = "account_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountLt
        {
            get { return (QueryBuilderParameter<string>)_accountLt.Value; }
            set { _accountLt = new InputPropertyInfo { Name = "account_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountGte
        {
            get { return (QueryBuilderParameter<string>)_accountGte.Value; }
            set { _accountGte = new InputPropertyInfo { Name = "account_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountLte
        {
            get { return (QueryBuilderParameter<string>)_accountLte.Value; }
            set { _accountLte = new InputPropertyInfo { Name = "account_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> AccountIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_accountIn.Value; }
            set { _accountIn = new InputPropertyInfo { Name = "account_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> AccountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_accountNotIn.Value; }
            set { _accountNotIn = new InputPropertyInfo { Name = "account_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountContains
        {
            get { return (QueryBuilderParameter<string>)_accountContains.Value; }
            set { _accountContains = new InputPropertyInfo { Name = "account_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("account_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> AccountNotContains
        {
            get { return (QueryBuilderParameter<string>)_accountNotContains.Value; }
            set { _accountNotContains = new InputPropertyInfo { Name = "account_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultUnpausedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultUnpausedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultUnpausedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DelayVaultUnpausedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DelayVaultUnpausedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DelayVaultUnpausedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_account.Name != null) yield return _account;
            if (_accountNot.Name != null) yield return _accountNot;
            if (_accountGt.Name != null) yield return _accountGt;
            if (_accountLt.Name != null) yield return _accountLt;
            if (_accountGte.Name != null) yield return _accountGte;
            if (_accountLte.Name != null) yield return _accountLte;
            if (_accountIn.Name != null) yield return _accountIn;
            if (_accountNotIn.Name != null) yield return _accountNotIn;
            if (_accountContains.Name != null) yield return _accountContains;
            if (_accountNotContains.Name != null) yield return _accountNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DepositedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _tokenAddress;
        private InputPropertyInfo _tokenAddressNot;
        private InputPropertyInfo _tokenAddressGt;
        private InputPropertyInfo _tokenAddressLt;
        private InputPropertyInfo _tokenAddressGte;
        private InputPropertyInfo _tokenAddressLte;
        private InputPropertyInfo _tokenAddressIn;
        private InputPropertyInfo _tokenAddressNotIn;
        private InputPropertyInfo _tokenAddressContains;
        private InputPropertyInfo _tokenAddressNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddress
        {
            get { return (QueryBuilderParameter<string>)_tokenAddress.Value; }
            set { _tokenAddress = new InputPropertyInfo { Name = "tokenAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNot
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNot.Value; }
            set { _tokenAddressNot = new InputPropertyInfo { Name = "tokenAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGt.Value; }
            set { _tokenAddressGt = new InputPropertyInfo { Name = "tokenAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLt.Value; }
            set { _tokenAddressLt = new InputPropertyInfo { Name = "tokenAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGte.Value; }
            set { _tokenAddressGte = new InputPropertyInfo { Name = "tokenAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLte.Value; }
            set { _tokenAddressLte = new InputPropertyInfo { Name = "tokenAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressIn.Value; }
            set { _tokenAddressIn = new InputPropertyInfo { Name = "tokenAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressNotIn.Value; }
            set { _tokenAddressNotIn = new InputPropertyInfo { Name = "tokenAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressContains.Value; }
            set { _tokenAddressContains = new InputPropertyInfo { Name = "tokenAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNotContains.Value; }
            set { _tokenAddressNotContains = new InputPropertyInfo { Name = "tokenAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DepositedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DepositedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DepositedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DepositedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DepositedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DepositedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_tokenAddress.Name != null) yield return _tokenAddress;
            if (_tokenAddressNot.Name != null) yield return _tokenAddressNot;
            if (_tokenAddressGt.Name != null) yield return _tokenAddressGt;
            if (_tokenAddressLt.Name != null) yield return _tokenAddressLt;
            if (_tokenAddressGte.Name != null) yield return _tokenAddressGte;
            if (_tokenAddressLte.Name != null) yield return _tokenAddressLte;
            if (_tokenAddressIn.Name != null) yield return _tokenAddressIn;
            if (_tokenAddressNotIn.Name != null) yield return _tokenAddressNotIn;
            if (_tokenAddressContains.Name != null) yield return _tokenAddressContains;
            if (_tokenAddressNotContains.Name != null) yield return _tokenAddressNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DispenserProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DispenserProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DispenserProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DispenserProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DispenserProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DispenserProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DispenserProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DispenserProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DispenserProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class DispenserTokenReserveFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _totalAmountTaken;
        private InputPropertyInfo _totalAmountTakenNot;
        private InputPropertyInfo _totalAmountTakenGt;
        private InputPropertyInfo _totalAmountTakenLt;
        private InputPropertyInfo _totalAmountTakenGte;
        private InputPropertyInfo _totalAmountTakenLte;
        private InputPropertyInfo _totalAmountTakenIn;
        private InputPropertyInfo _totalAmountTakenNotIn;
        private InputPropertyInfo _leftAmount;
        private InputPropertyInfo _leftAmountNot;
        private InputPropertyInfo _leftAmountGt;
        private InputPropertyInfo _leftAmountLt;
        private InputPropertyInfo _leftAmountGte;
        private InputPropertyInfo _leftAmountLte;
        private InputPropertyInfo _leftAmountIn;
        private InputPropertyInfo _leftAmountNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountTaken
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountTaken.Value; }
            set { _totalAmountTaken = new InputPropertyInfo { Name = "totalAmountTaken", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountTakenNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountTakenNot.Value; }
            set { _totalAmountTakenNot = new InputPropertyInfo { Name = "totalAmountTaken_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountTakenGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountTakenGt.Value; }
            set { _totalAmountTakenGt = new InputPropertyInfo { Name = "totalAmountTaken_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountTakenLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountTakenLt.Value; }
            set { _totalAmountTakenLt = new InputPropertyInfo { Name = "totalAmountTaken_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountTakenGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountTakenGte.Value; }
            set { _totalAmountTakenGte = new InputPropertyInfo { Name = "totalAmountTaken_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountTakenLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountTakenLte.Value; }
            set { _totalAmountTakenLte = new InputPropertyInfo { Name = "totalAmountTaken_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalAmountTakenIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalAmountTakenIn.Value; }
            set { _totalAmountTakenIn = new InputPropertyInfo { Name = "totalAmountTaken_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmountTaken_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalAmountTakenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalAmountTakenNotIn.Value; }
            set { _totalAmountTakenNotIn = new InputPropertyInfo { Name = "totalAmountTaken_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmount.Value; }
            set { _leftAmount = new InputPropertyInfo { Name = "leftAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountNot.Value; }
            set { _leftAmountNot = new InputPropertyInfo { Name = "leftAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGt.Value; }
            set { _leftAmountGt = new InputPropertyInfo { Name = "leftAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLt.Value; }
            set { _leftAmountLt = new InputPropertyInfo { Name = "leftAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGte.Value; }
            set { _leftAmountGte = new InputPropertyInfo { Name = "leftAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLte.Value; }
            set { _leftAmountLte = new InputPropertyInfo { Name = "leftAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountIn.Value; }
            set { _leftAmountIn = new InputPropertyInfo { Name = "leftAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountNotIn.Value; }
            set { _leftAmountNotIn = new InputPropertyInfo { Name = "leftAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserTokenReserveFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserTokenReserveFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<DispenserTokenReserveFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<DispenserTokenReserveFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<DispenserTokenReserveFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<DispenserTokenReserveFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_totalAmountTaken.Name != null) yield return _totalAmountTaken;
            if (_totalAmountTakenNot.Name != null) yield return _totalAmountTakenNot;
            if (_totalAmountTakenGt.Name != null) yield return _totalAmountTakenGt;
            if (_totalAmountTakenLt.Name != null) yield return _totalAmountTakenLt;
            if (_totalAmountTakenGte.Name != null) yield return _totalAmountTakenGte;
            if (_totalAmountTakenLte.Name != null) yield return _totalAmountTakenLte;
            if (_totalAmountTakenIn.Name != null) yield return _totalAmountTakenIn;
            if (_totalAmountTakenNotIn.Name != null) yield return _totalAmountTakenNotIn;
            if (_leftAmount.Name != null) yield return _leftAmount;
            if (_leftAmountNot.Name != null) yield return _leftAmountNot;
            if (_leftAmountGt.Name != null) yield return _leftAmountGt;
            if (_leftAmountLt.Name != null) yield return _leftAmountLt;
            if (_leftAmountGte.Name != null) yield return _leftAmountGte;
            if (_leftAmountLte.Name != null) yield return _leftAmountLte;
            if (_leftAmountIn.Name != null) yield return _leftAmountIn;
            if (_leftAmountNotIn.Name != null) yield return _leftAmountNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class Eip712DomainChangedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<Eip712DomainChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<Eip712DomainChangedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<Eip712DomainChangedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<Eip712DomainChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<Eip712DomainChangedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<Eip712DomainChangedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class FirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<FirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<FirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<FirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<FirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<FirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<FirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class FirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<FirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<FirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<FirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<FirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<FirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<FirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class GovernorUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _oldGovernor;
        private InputPropertyInfo _oldGovernorNot;
        private InputPropertyInfo _oldGovernorGt;
        private InputPropertyInfo _oldGovernorLt;
        private InputPropertyInfo _oldGovernorGte;
        private InputPropertyInfo _oldGovernorLte;
        private InputPropertyInfo _oldGovernorIn;
        private InputPropertyInfo _oldGovernorNotIn;
        private InputPropertyInfo _oldGovernorContains;
        private InputPropertyInfo _oldGovernorNotContains;
        private InputPropertyInfo _newGovernor;
        private InputPropertyInfo _newGovernorNot;
        private InputPropertyInfo _newGovernorGt;
        private InputPropertyInfo _newGovernorLt;
        private InputPropertyInfo _newGovernorGte;
        private InputPropertyInfo _newGovernorLte;
        private InputPropertyInfo _newGovernorIn;
        private InputPropertyInfo _newGovernorNotIn;
        private InputPropertyInfo _newGovernorContains;
        private InputPropertyInfo _newGovernorNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernor
        {
            get { return (QueryBuilderParameter<string>)_oldGovernor.Value; }
            set { _oldGovernor = new InputPropertyInfo { Name = "oldGovernor", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorNot
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorNot.Value; }
            set { _oldGovernorNot = new InputPropertyInfo { Name = "oldGovernor_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorGt
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorGt.Value; }
            set { _oldGovernorGt = new InputPropertyInfo { Name = "oldGovernor_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorLt
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorLt.Value; }
            set { _oldGovernorLt = new InputPropertyInfo { Name = "oldGovernor_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorGte
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorGte.Value; }
            set { _oldGovernorGte = new InputPropertyInfo { Name = "oldGovernor_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorLte
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorLte.Value; }
            set { _oldGovernorLte = new InputPropertyInfo { Name = "oldGovernor_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OldGovernorIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_oldGovernorIn.Value; }
            set { _oldGovernorIn = new InputPropertyInfo { Name = "oldGovernor_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OldGovernorNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_oldGovernorNotIn.Value; }
            set { _oldGovernorNotIn = new InputPropertyInfo { Name = "oldGovernor_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorContains
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorContains.Value; }
            set { _oldGovernorContains = new InputPropertyInfo { Name = "oldGovernor_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldGovernor_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OldGovernorNotContains
        {
            get { return (QueryBuilderParameter<string>)_oldGovernorNotContains.Value; }
            set { _oldGovernorNotContains = new InputPropertyInfo { Name = "oldGovernor_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernor
        {
            get { return (QueryBuilderParameter<string>)_newGovernor.Value; }
            set { _newGovernor = new InputPropertyInfo { Name = "newGovernor", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorNot
        {
            get { return (QueryBuilderParameter<string>)_newGovernorNot.Value; }
            set { _newGovernorNot = new InputPropertyInfo { Name = "newGovernor_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorGt
        {
            get { return (QueryBuilderParameter<string>)_newGovernorGt.Value; }
            set { _newGovernorGt = new InputPropertyInfo { Name = "newGovernor_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorLt
        {
            get { return (QueryBuilderParameter<string>)_newGovernorLt.Value; }
            set { _newGovernorLt = new InputPropertyInfo { Name = "newGovernor_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorGte
        {
            get { return (QueryBuilderParameter<string>)_newGovernorGte.Value; }
            set { _newGovernorGte = new InputPropertyInfo { Name = "newGovernor_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorLte
        {
            get { return (QueryBuilderParameter<string>)_newGovernorLte.Value; }
            set { _newGovernorLte = new InputPropertyInfo { Name = "newGovernor_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewGovernorIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newGovernorIn.Value; }
            set { _newGovernorIn = new InputPropertyInfo { Name = "newGovernor_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewGovernorNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newGovernorNotIn.Value; }
            set { _newGovernorNotIn = new InputPropertyInfo { Name = "newGovernor_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorContains
        {
            get { return (QueryBuilderParameter<string>)_newGovernorContains.Value; }
            set { _newGovernorContains = new InputPropertyInfo { Name = "newGovernor_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newGovernor_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewGovernorNotContains
        {
            get { return (QueryBuilderParameter<string>)_newGovernorNotContains.Value; }
            set { _newGovernorNotContains = new InputPropertyInfo { Name = "newGovernor_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<GovernorUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<GovernorUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<GovernorUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<GovernorUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<GovernorUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<GovernorUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_oldGovernor.Name != null) yield return _oldGovernor;
            if (_oldGovernorNot.Name != null) yield return _oldGovernorNot;
            if (_oldGovernorGt.Name != null) yield return _oldGovernorGt;
            if (_oldGovernorLt.Name != null) yield return _oldGovernorLt;
            if (_oldGovernorGte.Name != null) yield return _oldGovernorGte;
            if (_oldGovernorLte.Name != null) yield return _oldGovernorLte;
            if (_oldGovernorIn.Name != null) yield return _oldGovernorIn;
            if (_oldGovernorNotIn.Name != null) yield return _oldGovernorNotIn;
            if (_oldGovernorContains.Name != null) yield return _oldGovernorContains;
            if (_oldGovernorNotContains.Name != null) yield return _oldGovernorNotContains;
            if (_newGovernor.Name != null) yield return _newGovernor;
            if (_newGovernorNot.Name != null) yield return _newGovernorNot;
            if (_newGovernorGt.Name != null) yield return _newGovernorGt;
            if (_newGovernorLt.Name != null) yield return _newGovernorLt;
            if (_newGovernorGte.Name != null) yield return _newGovernorGte;
            if (_newGovernorLte.Name != null) yield return _newGovernorLte;
            if (_newGovernorIn.Name != null) yield return _newGovernorIn;
            if (_newGovernorNotIn.Name != null) yield return _newGovernorNotIn;
            if (_newGovernorContains.Name != null) yield return _newGovernorContains;
            if (_newGovernorNotContains.Name != null) yield return _newGovernorNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class InvestNewPoolCreatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _poolAmount;
        private InputPropertyInfo _poolAmountNot;
        private InputPropertyInfo _poolAmountGt;
        private InputPropertyInfo _poolAmountLt;
        private InputPropertyInfo _poolAmountGte;
        private InputPropertyInfo _poolAmountLte;
        private InputPropertyInfo _poolAmountIn;
        private InputPropertyInfo _poolAmountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmount.Value; }
            set { _poolAmount = new InputPropertyInfo { Name = "poolAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountNot.Value; }
            set { _poolAmountNot = new InputPropertyInfo { Name = "poolAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountGt.Value; }
            set { _poolAmountGt = new InputPropertyInfo { Name = "poolAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountLt.Value; }
            set { _poolAmountLt = new InputPropertyInfo { Name = "poolAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountGte.Value; }
            set { _poolAmountGte = new InputPropertyInfo { Name = "poolAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountLte.Value; }
            set { _poolAmountLte = new InputPropertyInfo { Name = "poolAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolAmountIn.Value; }
            set { _poolAmountIn = new InputPropertyInfo { Name = "poolAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolAmountNotIn.Value; }
            set { _poolAmountNotIn = new InputPropertyInfo { Name = "poolAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestNewPoolCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestNewPoolCreatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<InvestNewPoolCreatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestNewPoolCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestNewPoolCreatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<InvestNewPoolCreatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_poolAmount.Name != null) yield return _poolAmount;
            if (_poolAmountNot.Name != null) yield return _poolAmountNot;
            if (_poolAmountGt.Name != null) yield return _poolAmountGt;
            if (_poolAmountLt.Name != null) yield return _poolAmountLt;
            if (_poolAmountGte.Name != null) yield return _poolAmountGte;
            if (_poolAmountLte.Name != null) yield return _poolAmountLte;
            if (_poolAmountIn.Name != null) yield return _poolAmountIn;
            if (_poolAmountNotIn.Name != null) yield return _poolAmountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class InvestProviderEip712DomainChangedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderEip712DomainChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderEip712DomainChangedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderEip712DomainChangedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderEip712DomainChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderEip712DomainChangedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderEip712DomainChangedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class InvestProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class InvestProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class InvestProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<InvestProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class InvestedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _user;
        private InputPropertyInfo _userNot;
        private InputPropertyInfo _userGt;
        private InputPropertyInfo _userLt;
        private InputPropertyInfo _userGte;
        private InputPropertyInfo _userLte;
        private InputPropertyInfo _userIn;
        private InputPropertyInfo _userNotIn;
        private InputPropertyInfo _userContains;
        private InputPropertyInfo _userNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _newNonce;
        private InputPropertyInfo _newNonceNot;
        private InputPropertyInfo _newNonceGt;
        private InputPropertyInfo _newNonceLt;
        private InputPropertyInfo _newNonceGte;
        private InputPropertyInfo _newNonceLte;
        private InputPropertyInfo _newNonceIn;
        private InputPropertyInfo _newNonceNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> User
        {
            get { return (QueryBuilderParameter<string>)_user.Value; }
            set { _user = new InputPropertyInfo { Name = "user", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNot
        {
            get { return (QueryBuilderParameter<string>)_userNot.Value; }
            set { _userNot = new InputPropertyInfo { Name = "user_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGt
        {
            get { return (QueryBuilderParameter<string>)_userGt.Value; }
            set { _userGt = new InputPropertyInfo { Name = "user_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLt
        {
            get { return (QueryBuilderParameter<string>)_userLt.Value; }
            set { _userLt = new InputPropertyInfo { Name = "user_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGte
        {
            get { return (QueryBuilderParameter<string>)_userGte.Value; }
            set { _userGte = new InputPropertyInfo { Name = "user_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLte
        {
            get { return (QueryBuilderParameter<string>)_userLte.Value; }
            set { _userLte = new InputPropertyInfo { Name = "user_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userIn.Value; }
            set { _userIn = new InputPropertyInfo { Name = "user_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userNotIn.Value; }
            set { _userNotIn = new InputPropertyInfo { Name = "user_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserContains
        {
            get { return (QueryBuilderParameter<string>)_userContains.Value; }
            set { _userContains = new InputPropertyInfo { Name = "user_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNotContains
        {
            get { return (QueryBuilderParameter<string>)_userNotContains.Value; }
            set { _userNotContains = new InputPropertyInfo { Name = "user_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewNonce
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newNonce.Value; }
            set { _newNonce = new InputPropertyInfo { Name = "newNonce", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewNonceNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newNonceNot.Value; }
            set { _newNonceNot = new InputPropertyInfo { Name = "newNonce_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewNonceGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newNonceGt.Value; }
            set { _newNonceGt = new InputPropertyInfo { Name = "newNonce_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewNonceLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newNonceLt.Value; }
            set { _newNonceLt = new InputPropertyInfo { Name = "newNonce_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewNonceGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newNonceGte.Value; }
            set { _newNonceGte = new InputPropertyInfo { Name = "newNonce_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewNonceLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newNonceLte.Value; }
            set { _newNonceLte = new InputPropertyInfo { Name = "newNonce_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewNonceIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newNonceIn.Value; }
            set { _newNonceIn = new InputPropertyInfo { Name = "newNonce_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newNonce_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewNonceNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newNonceNotIn.Value; }
            set { _newNonceNotIn = new InputPropertyInfo { Name = "newNonce_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<InvestedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<InvestedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<InvestedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<InvestedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_user.Name != null) yield return _user;
            if (_userNot.Name != null) yield return _userNot;
            if (_userGt.Name != null) yield return _userGt;
            if (_userLt.Name != null) yield return _userLt;
            if (_userGte.Name != null) yield return _userGte;
            if (_userLte.Name != null) yield return _userLte;
            if (_userIn.Name != null) yield return _userIn;
            if (_userNotIn.Name != null) yield return _userNotIn;
            if (_userContains.Name != null) yield return _userContains;
            if (_userNotContains.Name != null) yield return _userNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_newNonce.Name != null) yield return _newNonce;
            if (_newNonceNot.Name != null) yield return _newNonceNot;
            if (_newNonceGt.Name != null) yield return _newNonceGt;
            if (_newNonceLt.Name != null) yield return _newNonceLt;
            if (_newNonceGte.Name != null) yield return _newNonceGte;
            if (_newNonceLte.Name != null) yield return _newNonceLte;
            if (_newNonceIn.Name != null) yield return _newNonceIn;
            if (_newNonceNotIn.Name != null) yield return _newNonceNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class LockDealNftOwnershipTransferredFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _previousOwner;
        private InputPropertyInfo _previousOwnerNot;
        private InputPropertyInfo _previousOwnerGt;
        private InputPropertyInfo _previousOwnerLt;
        private InputPropertyInfo _previousOwnerGte;
        private InputPropertyInfo _previousOwnerLte;
        private InputPropertyInfo _previousOwnerIn;
        private InputPropertyInfo _previousOwnerNotIn;
        private InputPropertyInfo _previousOwnerContains;
        private InputPropertyInfo _previousOwnerNotContains;
        private InputPropertyInfo _newOwner;
        private InputPropertyInfo _newOwnerNot;
        private InputPropertyInfo _newOwnerGt;
        private InputPropertyInfo _newOwnerLt;
        private InputPropertyInfo _newOwnerGte;
        private InputPropertyInfo _newOwnerLte;
        private InputPropertyInfo _newOwnerIn;
        private InputPropertyInfo _newOwnerNotIn;
        private InputPropertyInfo _newOwnerContains;
        private InputPropertyInfo _newOwnerNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwner
        {
            get { return (QueryBuilderParameter<string>)_previousOwner.Value; }
            set { _previousOwner = new InputPropertyInfo { Name = "previousOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNot.Value; }
            set { _previousOwnerNot = new InputPropertyInfo { Name = "previousOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGt.Value; }
            set { _previousOwnerGt = new InputPropertyInfo { Name = "previousOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLt.Value; }
            set { _previousOwnerLt = new InputPropertyInfo { Name = "previousOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGte.Value; }
            set { _previousOwnerGte = new InputPropertyInfo { Name = "previousOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLte.Value; }
            set { _previousOwnerLte = new InputPropertyInfo { Name = "previousOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerIn.Value; }
            set { _previousOwnerIn = new InputPropertyInfo { Name = "previousOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerNotIn.Value; }
            set { _previousOwnerNotIn = new InputPropertyInfo { Name = "previousOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerContains.Value; }
            set { _previousOwnerContains = new InputPropertyInfo { Name = "previousOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNotContains.Value; }
            set { _previousOwnerNotContains = new InputPropertyInfo { Name = "previousOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwner
        {
            get { return (QueryBuilderParameter<string>)_newOwner.Value; }
            set { _newOwner = new InputPropertyInfo { Name = "newOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNot.Value; }
            set { _newOwnerNot = new InputPropertyInfo { Name = "newOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGt.Value; }
            set { _newOwnerGt = new InputPropertyInfo { Name = "newOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLt.Value; }
            set { _newOwnerLt = new InputPropertyInfo { Name = "newOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGte.Value; }
            set { _newOwnerGte = new InputPropertyInfo { Name = "newOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLte.Value; }
            set { _newOwnerLte = new InputPropertyInfo { Name = "newOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerIn.Value; }
            set { _newOwnerIn = new InputPropertyInfo { Name = "newOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerNotIn.Value; }
            set { _newOwnerNotIn = new InputPropertyInfo { Name = "newOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerContains.Value; }
            set { _newOwnerContains = new InputPropertyInfo { Name = "newOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNotContains.Value; }
            set { _newOwnerNotContains = new InputPropertyInfo { Name = "newOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealNftOwnershipTransferredFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealNftOwnershipTransferredFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<LockDealNftOwnershipTransferredFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealNftOwnershipTransferredFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealNftOwnershipTransferredFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<LockDealNftOwnershipTransferredFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_previousOwner.Name != null) yield return _previousOwner;
            if (_previousOwnerNot.Name != null) yield return _previousOwnerNot;
            if (_previousOwnerGt.Name != null) yield return _previousOwnerGt;
            if (_previousOwnerLt.Name != null) yield return _previousOwnerLt;
            if (_previousOwnerGte.Name != null) yield return _previousOwnerGte;
            if (_previousOwnerLte.Name != null) yield return _previousOwnerLte;
            if (_previousOwnerIn.Name != null) yield return _previousOwnerIn;
            if (_previousOwnerNotIn.Name != null) yield return _previousOwnerNotIn;
            if (_previousOwnerContains.Name != null) yield return _previousOwnerContains;
            if (_previousOwnerNotContains.Name != null) yield return _previousOwnerNotContains;
            if (_newOwner.Name != null) yield return _newOwner;
            if (_newOwnerNot.Name != null) yield return _newOwnerNot;
            if (_newOwnerGt.Name != null) yield return _newOwnerGt;
            if (_newOwnerLt.Name != null) yield return _newOwnerLt;
            if (_newOwnerGte.Name != null) yield return _newOwnerGte;
            if (_newOwnerLte.Name != null) yield return _newOwnerLte;
            if (_newOwnerIn.Name != null) yield return _newOwnerIn;
            if (_newOwnerNotIn.Name != null) yield return _newOwnerNotIn;
            if (_newOwnerContains.Name != null) yield return _newOwnerContains;
            if (_newOwnerNotContains.Name != null) yield return _newOwnerNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class LockDealProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<LockDealProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<LockDealProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class LockDealProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<LockDealProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<LockDealProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class LockDealProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<LockDealProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<LockDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<LockDealProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<LockDealProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class MetadataUpdateFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _tokenId;
        private InputPropertyInfo _tokenIdNot;
        private InputPropertyInfo _tokenIdGt;
        private InputPropertyInfo _tokenIdLt;
        private InputPropertyInfo _tokenIdGte;
        private InputPropertyInfo _tokenIdLte;
        private InputPropertyInfo _tokenIdIn;
        private InputPropertyInfo _tokenIdNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenId.Value; }
            set { _tokenId = new InputPropertyInfo { Name = "_tokenId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdNot.Value; }
            set { _tokenIdNot = new InputPropertyInfo { Name = "_tokenId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdGt.Value; }
            set { _tokenIdGt = new InputPropertyInfo { Name = "_tokenId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdLt.Value; }
            set { _tokenIdLt = new InputPropertyInfo { Name = "_tokenId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdGte.Value; }
            set { _tokenIdGte = new InputPropertyInfo { Name = "_tokenId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdLte.Value; }
            set { _tokenIdLte = new InputPropertyInfo { Name = "_tokenId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TokenIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_tokenIdIn.Value; }
            set { _tokenIdIn = new InputPropertyInfo { Name = "_tokenId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TokenIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_tokenIdNotIn.Value; }
            set { _tokenIdNotIn = new InputPropertyInfo { Name = "_tokenId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<MetadataUpdateFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<MetadataUpdateFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<MetadataUpdateFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<MetadataUpdateFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<MetadataUpdateFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<MetadataUpdateFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_tokenId.Name != null) yield return _tokenId;
            if (_tokenIdNot.Name != null) yield return _tokenIdNot;
            if (_tokenIdGt.Name != null) yield return _tokenIdGt;
            if (_tokenIdLt.Name != null) yield return _tokenIdLt;
            if (_tokenIdGte.Name != null) yield return _tokenIdGte;
            if (_tokenIdLte.Name != null) yield return _tokenIdLte;
            if (_tokenIdIn.Name != null) yield return _tokenIdIn;
            if (_tokenIdNotIn.Name != null) yield return _tokenIdNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class NewPoolCreatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _finishTime;
        private InputPropertyInfo _finishTimeNot;
        private InputPropertyInfo _finishTimeGt;
        private InputPropertyInfo _finishTimeLt;
        private InputPropertyInfo _finishTimeGte;
        private InputPropertyInfo _finishTimeLte;
        private InputPropertyInfo _finishTimeIn;
        private InputPropertyInfo _finishTimeNotIn;
        private InputPropertyInfo _startAmount;
        private InputPropertyInfo _startAmountNot;
        private InputPropertyInfo _startAmountGt;
        private InputPropertyInfo _startAmountLt;
        private InputPropertyInfo _startAmountGte;
        private InputPropertyInfo _startAmountLte;
        private InputPropertyInfo _startAmountIn;
        private InputPropertyInfo _startAmountNotIn;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "PoolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "PoolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "PoolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "PoolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "PoolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "PoolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "PoolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("PoolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "PoolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishTime
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishTime.Value; }
            set { _finishTime = new InputPropertyInfo { Name = "FinishTime", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishTimeNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishTimeNot.Value; }
            set { _finishTimeNot = new InputPropertyInfo { Name = "FinishTime_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishTimeGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishTimeGt.Value; }
            set { _finishTimeGt = new InputPropertyInfo { Name = "FinishTime_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishTimeLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishTimeLt.Value; }
            set { _finishTimeLt = new InputPropertyInfo { Name = "FinishTime_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishTimeGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishTimeGte.Value; }
            set { _finishTimeGte = new InputPropertyInfo { Name = "FinishTime_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishTimeLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishTimeLte.Value; }
            set { _finishTimeLte = new InputPropertyInfo { Name = "FinishTime_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishTimeIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishTimeIn.Value; }
            set { _finishTimeIn = new InputPropertyInfo { Name = "FinishTime_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishTime_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishTimeNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishTimeNotIn.Value; }
            set { _finishTimeNotIn = new InputPropertyInfo { Name = "FinishTime_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startAmount.Value; }
            set { _startAmount = new InputPropertyInfo { Name = "StartAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startAmountNot.Value; }
            set { _startAmountNot = new InputPropertyInfo { Name = "StartAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startAmountGt.Value; }
            set { _startAmountGt = new InputPropertyInfo { Name = "StartAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startAmountLt.Value; }
            set { _startAmountLt = new InputPropertyInfo { Name = "StartAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startAmountGte.Value; }
            set { _startAmountGte = new InputPropertyInfo { Name = "StartAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startAmountLte.Value; }
            set { _startAmountLte = new InputPropertyInfo { Name = "StartAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startAmountIn.Value; }
            set { _startAmountIn = new InputPropertyInfo { Name = "StartAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startAmountNotIn.Value; }
            set { _startAmountNotIn = new InputPropertyInfo { Name = "StartAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "Owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "Owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "Owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "Owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "Owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "Owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "Owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "Owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "Owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "Owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<NewPoolCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<NewPoolCreatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<NewPoolCreatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<NewPoolCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<NewPoolCreatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<NewPoolCreatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_finishTime.Name != null) yield return _finishTime;
            if (_finishTimeNot.Name != null) yield return _finishTimeNot;
            if (_finishTimeGt.Name != null) yield return _finishTimeGt;
            if (_finishTimeLt.Name != null) yield return _finishTimeLt;
            if (_finishTimeGte.Name != null) yield return _finishTimeGte;
            if (_finishTimeLte.Name != null) yield return _finishTimeLte;
            if (_finishTimeIn.Name != null) yield return _finishTimeIn;
            if (_finishTimeNotIn.Name != null) yield return _finishTimeNotIn;
            if (_startAmount.Name != null) yield return _startAmount;
            if (_startAmountNot.Name != null) yield return _startAmountNot;
            if (_startAmountGt.Name != null) yield return _startAmountGt;
            if (_startAmountLt.Name != null) yield return _startAmountLt;
            if (_startAmountGte.Name != null) yield return _startAmountGte;
            if (_startAmountLte.Name != null) yield return _startAmountLte;
            if (_startAmountIn.Name != null) yield return _startAmountIn;
            if (_startAmountNotIn.Name != null) yield return _startAmountNotIn;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class NewVaultCreatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _tokenAddress;
        private InputPropertyInfo _tokenAddressNot;
        private InputPropertyInfo _tokenAddressGt;
        private InputPropertyInfo _tokenAddressLt;
        private InputPropertyInfo _tokenAddressGte;
        private InputPropertyInfo _tokenAddressLte;
        private InputPropertyInfo _tokenAddressIn;
        private InputPropertyInfo _tokenAddressNotIn;
        private InputPropertyInfo _tokenAddressContains;
        private InputPropertyInfo _tokenAddressNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddress
        {
            get { return (QueryBuilderParameter<string>)_tokenAddress.Value; }
            set { _tokenAddress = new InputPropertyInfo { Name = "tokenAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNot
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNot.Value; }
            set { _tokenAddressNot = new InputPropertyInfo { Name = "tokenAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGt.Value; }
            set { _tokenAddressGt = new InputPropertyInfo { Name = "tokenAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLt.Value; }
            set { _tokenAddressLt = new InputPropertyInfo { Name = "tokenAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGte.Value; }
            set { _tokenAddressGte = new InputPropertyInfo { Name = "tokenAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLte.Value; }
            set { _tokenAddressLte = new InputPropertyInfo { Name = "tokenAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressIn.Value; }
            set { _tokenAddressIn = new InputPropertyInfo { Name = "tokenAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressNotIn.Value; }
            set { _tokenAddressNotIn = new InputPropertyInfo { Name = "tokenAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressContains.Value; }
            set { _tokenAddressContains = new InputPropertyInfo { Name = "tokenAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNotContains.Value; }
            set { _tokenAddressNotContains = new InputPropertyInfo { Name = "tokenAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<NewVaultCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<NewVaultCreatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<NewVaultCreatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<NewVaultCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<NewVaultCreatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<NewVaultCreatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_tokenAddress.Name != null) yield return _tokenAddress;
            if (_tokenAddressNot.Name != null) yield return _tokenAddressNot;
            if (_tokenAddressGt.Name != null) yield return _tokenAddressGt;
            if (_tokenAddressLt.Name != null) yield return _tokenAddressLt;
            if (_tokenAddressGte.Name != null) yield return _tokenAddressGte;
            if (_tokenAddressLte.Name != null) yield return _tokenAddressLte;
            if (_tokenAddressIn.Name != null) yield return _tokenAddressIn;
            if (_tokenAddressNotIn.Name != null) yield return _tokenAddressNotIn;
            if (_tokenAddressContains.Name != null) yield return _tokenAddressContains;
            if (_tokenAddressNotContains.Name != null) yield return _tokenAddressNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldDealProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldDealProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldDealProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldDealProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldDealProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldDealProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldDealProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldDealProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldDealProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldDealProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldDealProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldDealProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldDealProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldDealProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldDealProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldLockDealProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldLockDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldLockDealProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldLockDealProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldLockDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldLockDealProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldLockDealProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldLockDealProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldLockDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldLockDealProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldLockDealProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldLockDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldLockDealProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldLockDealProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldLockDealProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldLockDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldLockDealProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldLockDealProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldLockDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldLockDealProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldLockDealProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldTimedDealProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldTimedDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldTimedDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldTimedDealProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldTimedDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldTimedDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldTimedDealProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OldTimedDealProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldTimedDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldTimedDealProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OldTimedDealProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OldTimedDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OldTimedDealProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OldTimedDealProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class OwnershipTransferredFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _previousOwner;
        private InputPropertyInfo _previousOwnerNot;
        private InputPropertyInfo _previousOwnerGt;
        private InputPropertyInfo _previousOwnerLt;
        private InputPropertyInfo _previousOwnerGte;
        private InputPropertyInfo _previousOwnerLte;
        private InputPropertyInfo _previousOwnerIn;
        private InputPropertyInfo _previousOwnerNotIn;
        private InputPropertyInfo _previousOwnerContains;
        private InputPropertyInfo _previousOwnerNotContains;
        private InputPropertyInfo _newOwner;
        private InputPropertyInfo _newOwnerNot;
        private InputPropertyInfo _newOwnerGt;
        private InputPropertyInfo _newOwnerLt;
        private InputPropertyInfo _newOwnerGte;
        private InputPropertyInfo _newOwnerLte;
        private InputPropertyInfo _newOwnerIn;
        private InputPropertyInfo _newOwnerNotIn;
        private InputPropertyInfo _newOwnerContains;
        private InputPropertyInfo _newOwnerNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwner
        {
            get { return (QueryBuilderParameter<string>)_previousOwner.Value; }
            set { _previousOwner = new InputPropertyInfo { Name = "previousOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNot.Value; }
            set { _previousOwnerNot = new InputPropertyInfo { Name = "previousOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGt.Value; }
            set { _previousOwnerGt = new InputPropertyInfo { Name = "previousOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLt.Value; }
            set { _previousOwnerLt = new InputPropertyInfo { Name = "previousOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGte.Value; }
            set { _previousOwnerGte = new InputPropertyInfo { Name = "previousOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLte.Value; }
            set { _previousOwnerLte = new InputPropertyInfo { Name = "previousOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerIn.Value; }
            set { _previousOwnerIn = new InputPropertyInfo { Name = "previousOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerNotIn.Value; }
            set { _previousOwnerNotIn = new InputPropertyInfo { Name = "previousOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerContains.Value; }
            set { _previousOwnerContains = new InputPropertyInfo { Name = "previousOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNotContains.Value; }
            set { _previousOwnerNotContains = new InputPropertyInfo { Name = "previousOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwner
        {
            get { return (QueryBuilderParameter<string>)_newOwner.Value; }
            set { _newOwner = new InputPropertyInfo { Name = "newOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNot.Value; }
            set { _newOwnerNot = new InputPropertyInfo { Name = "newOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGt.Value; }
            set { _newOwnerGt = new InputPropertyInfo { Name = "newOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLt.Value; }
            set { _newOwnerLt = new InputPropertyInfo { Name = "newOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGte.Value; }
            set { _newOwnerGte = new InputPropertyInfo { Name = "newOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLte.Value; }
            set { _newOwnerLte = new InputPropertyInfo { Name = "newOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerIn.Value; }
            set { _newOwnerIn = new InputPropertyInfo { Name = "newOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerNotIn.Value; }
            set { _newOwnerNotIn = new InputPropertyInfo { Name = "newOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerContains.Value; }
            set { _newOwnerContains = new InputPropertyInfo { Name = "newOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNotContains.Value; }
            set { _newOwnerNotContains = new InputPropertyInfo { Name = "newOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OwnershipTransferredFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OwnershipTransferredFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<OwnershipTransferredFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<OwnershipTransferredFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<OwnershipTransferredFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<OwnershipTransferredFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_previousOwner.Name != null) yield return _previousOwner;
            if (_previousOwnerNot.Name != null) yield return _previousOwnerNot;
            if (_previousOwnerGt.Name != null) yield return _previousOwnerGt;
            if (_previousOwnerLt.Name != null) yield return _previousOwnerLt;
            if (_previousOwnerGte.Name != null) yield return _previousOwnerGte;
            if (_previousOwnerLte.Name != null) yield return _previousOwnerLte;
            if (_previousOwnerIn.Name != null) yield return _previousOwnerIn;
            if (_previousOwnerNotIn.Name != null) yield return _previousOwnerNotIn;
            if (_previousOwnerContains.Name != null) yield return _previousOwnerContains;
            if (_previousOwnerNotContains.Name != null) yield return _previousOwnerNotContains;
            if (_newOwner.Name != null) yield return _newOwner;
            if (_newOwnerNot.Name != null) yield return _newOwnerNot;
            if (_newOwnerGt.Name != null) yield return _newOwnerGt;
            if (_newOwnerLt.Name != null) yield return _newOwnerLt;
            if (_newOwnerGte.Name != null) yield return _newOwnerGte;
            if (_newOwnerLte.Name != null) yield return _newOwnerLte;
            if (_newOwnerIn.Name != null) yield return _newOwnerIn;
            if (_newOwnerNotIn.Name != null) yield return _newOwnerNotIn;
            if (_newOwnerContains.Name != null) yield return _newOwnerContains;
            if (_newOwnerNotContains.Name != null) yield return _newOwnerNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class PoolCreatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _provider;
        private InputPropertyInfo _providerNot;
        private InputPropertyInfo _providerGt;
        private InputPropertyInfo _providerLt;
        private InputPropertyInfo _providerGte;
        private InputPropertyInfo _providerLte;
        private InputPropertyInfo _providerIn;
        private InputPropertyInfo _providerNotIn;
        private InputPropertyInfo _providerContains;
        private InputPropertyInfo _providerNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Provider
        {
            get { return (QueryBuilderParameter<string>)_provider.Value; }
            set { _provider = new InputPropertyInfo { Name = "provider", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNot
        {
            get { return (QueryBuilderParameter<string>)_providerNot.Value; }
            set { _providerNot = new InputPropertyInfo { Name = "provider_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderGt
        {
            get { return (QueryBuilderParameter<string>)_providerGt.Value; }
            set { _providerGt = new InputPropertyInfo { Name = "provider_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderLt
        {
            get { return (QueryBuilderParameter<string>)_providerLt.Value; }
            set { _providerLt = new InputPropertyInfo { Name = "provider_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderGte
        {
            get { return (QueryBuilderParameter<string>)_providerGte.Value; }
            set { _providerGte = new InputPropertyInfo { Name = "provider_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderLte
        {
            get { return (QueryBuilderParameter<string>)_providerLte.Value; }
            set { _providerLte = new InputPropertyInfo { Name = "provider_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ProviderIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_providerIn.Value; }
            set { _providerIn = new InputPropertyInfo { Name = "provider_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ProviderNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_providerNotIn.Value; }
            set { _providerNotIn = new InputPropertyInfo { Name = "provider_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderContains
        {
            get { return (QueryBuilderParameter<string>)_providerContains.Value; }
            set { _providerContains = new InputPropertyInfo { Name = "provider_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNotContains
        {
            get { return (QueryBuilderParameter<string>)_providerNotContains.Value; }
            set { _providerNotContains = new InputPropertyInfo { Name = "provider_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolCreatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<PoolCreatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolCreatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolCreatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<PoolCreatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_provider.Name != null) yield return _provider;
            if (_providerNot.Name != null) yield return _providerNot;
            if (_providerGt.Name != null) yield return _providerGt;
            if (_providerLt.Name != null) yield return _providerLt;
            if (_providerGte.Name != null) yield return _providerGte;
            if (_providerLte.Name != null) yield return _providerLte;
            if (_providerIn.Name != null) yield return _providerIn;
            if (_providerNotIn.Name != null) yield return _providerNotIn;
            if (_providerContains.Name != null) yield return _providerContains;
            if (_providerNotContains.Name != null) yield return _providerNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class PoolDataFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _previousOwner;
        private InputPropertyInfo _previousOwnerNot;
        private InputPropertyInfo _previousOwnerGt;
        private InputPropertyInfo _previousOwnerLt;
        private InputPropertyInfo _previousOwnerGte;
        private InputPropertyInfo _previousOwnerLte;
        private InputPropertyInfo _previousOwnerIn;
        private InputPropertyInfo _previousOwnerNotIn;
        private InputPropertyInfo _previousOwnerContains;
        private InputPropertyInfo _previousOwnerNotContains;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _provider;
        private InputPropertyInfo _providerNot;
        private InputPropertyInfo _providerGt;
        private InputPropertyInfo _providerLt;
        private InputPropertyInfo _providerGte;
        private InputPropertyInfo _providerLte;
        private InputPropertyInfo _providerIn;
        private InputPropertyInfo _providerNotIn;
        private InputPropertyInfo _providerContains;
        private InputPropertyInfo _providerNotContains;
        private InputPropertyInfo _providerName;
        private InputPropertyInfo _providerNameNot;
        private InputPropertyInfo _providerNameGt;
        private InputPropertyInfo _providerNameLt;
        private InputPropertyInfo _providerNameGte;
        private InputPropertyInfo _providerNameLte;
        private InputPropertyInfo _providerNameIn;
        private InputPropertyInfo _providerNameNotIn;
        private InputPropertyInfo _providerNameContains;
        private InputPropertyInfo _providerNameContainsNocase;
        private InputPropertyInfo _providerNameNotContains;
        private InputPropertyInfo _providerNameNotContainsNocase;
        private InputPropertyInfo _providerNameStartsWith;
        private InputPropertyInfo _providerNameStartsWithNocase;
        private InputPropertyInfo _providerNameNotStartsWith;
        private InputPropertyInfo _providerNameNotStartsWithNocase;
        private InputPropertyInfo _providerNameEndsWith;
        private InputPropertyInfo _providerNameEndsWithNocase;
        private InputPropertyInfo _providerNameNotEndsWith;
        private InputPropertyInfo _providerNameNotEndsWithNocase;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _tokenAddress;
        private InputPropertyInfo _tokenAddressNot;
        private InputPropertyInfo _tokenAddressGt;
        private InputPropertyInfo _tokenAddressLt;
        private InputPropertyInfo _tokenAddressGte;
        private InputPropertyInfo _tokenAddressLte;
        private InputPropertyInfo _tokenAddressIn;
        private InputPropertyInfo _tokenAddressNotIn;
        private InputPropertyInfo _tokenAddressContains;
        private InputPropertyInfo _tokenAddressNotContains;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwner
        {
            get { return (QueryBuilderParameter<string>)_previousOwner.Value; }
            set { _previousOwner = new InputPropertyInfo { Name = "previousOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNot.Value; }
            set { _previousOwnerNot = new InputPropertyInfo { Name = "previousOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGt.Value; }
            set { _previousOwnerGt = new InputPropertyInfo { Name = "previousOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLt.Value; }
            set { _previousOwnerLt = new InputPropertyInfo { Name = "previousOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerGte.Value; }
            set { _previousOwnerGte = new InputPropertyInfo { Name = "previousOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerLte.Value; }
            set { _previousOwnerLte = new InputPropertyInfo { Name = "previousOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerIn.Value; }
            set { _previousOwnerIn = new InputPropertyInfo { Name = "previousOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> PreviousOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_previousOwnerNotIn.Value; }
            set { _previousOwnerNotIn = new InputPropertyInfo { Name = "previousOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerContains.Value; }
            set { _previousOwnerContains = new InputPropertyInfo { Name = "previousOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("previousOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> PreviousOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_previousOwnerNotContains.Value; }
            set { _previousOwnerNotContains = new InputPropertyInfo { Name = "previousOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Provider
        {
            get { return (QueryBuilderParameter<string>)_provider.Value; }
            set { _provider = new InputPropertyInfo { Name = "provider", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNot
        {
            get { return (QueryBuilderParameter<string>)_providerNot.Value; }
            set { _providerNot = new InputPropertyInfo { Name = "provider_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderGt
        {
            get { return (QueryBuilderParameter<string>)_providerGt.Value; }
            set { _providerGt = new InputPropertyInfo { Name = "provider_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderLt
        {
            get { return (QueryBuilderParameter<string>)_providerLt.Value; }
            set { _providerLt = new InputPropertyInfo { Name = "provider_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderGte
        {
            get { return (QueryBuilderParameter<string>)_providerGte.Value; }
            set { _providerGte = new InputPropertyInfo { Name = "provider_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderLte
        {
            get { return (QueryBuilderParameter<string>)_providerLte.Value; }
            set { _providerLte = new InputPropertyInfo { Name = "provider_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ProviderIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_providerIn.Value; }
            set { _providerIn = new InputPropertyInfo { Name = "provider_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ProviderNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_providerNotIn.Value; }
            set { _providerNotIn = new InputPropertyInfo { Name = "provider_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderContains
        {
            get { return (QueryBuilderParameter<string>)_providerContains.Value; }
            set { _providerContains = new InputPropertyInfo { Name = "provider_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("provider_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNotContains
        {
            get { return (QueryBuilderParameter<string>)_providerNotContains.Value; }
            set { _providerNotContains = new InputPropertyInfo { Name = "provider_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderName
        {
            get { return (QueryBuilderParameter<string>)_providerName.Value; }
            set { _providerName = new InputPropertyInfo { Name = "providerName", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNot
        {
            get { return (QueryBuilderParameter<string>)_providerNameNot.Value; }
            set { _providerNameNot = new InputPropertyInfo { Name = "providerName_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameGt
        {
            get { return (QueryBuilderParameter<string>)_providerNameGt.Value; }
            set { _providerNameGt = new InputPropertyInfo { Name = "providerName_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameLt
        {
            get { return (QueryBuilderParameter<string>)_providerNameLt.Value; }
            set { _providerNameLt = new InputPropertyInfo { Name = "providerName_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameGte
        {
            get { return (QueryBuilderParameter<string>)_providerNameGte.Value; }
            set { _providerNameGte = new InputPropertyInfo { Name = "providerName_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameLte
        {
            get { return (QueryBuilderParameter<string>)_providerNameLte.Value; }
            set { _providerNameLte = new InputPropertyInfo { Name = "providerName_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ProviderNameIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_providerNameIn.Value; }
            set { _providerNameIn = new InputPropertyInfo { Name = "providerName_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ProviderNameNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_providerNameNotIn.Value; }
            set { _providerNameNotIn = new InputPropertyInfo { Name = "providerName_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameContains
        {
            get { return (QueryBuilderParameter<string>)_providerNameContains.Value; }
            set { _providerNameContains = new InputPropertyInfo { Name = "providerName_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameContainsNocase
        {
            get { return (QueryBuilderParameter<string>)_providerNameContainsNocase.Value; }
            set { _providerNameContainsNocase = new InputPropertyInfo { Name = "providerName_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNotContains
        {
            get { return (QueryBuilderParameter<string>)_providerNameNotContains.Value; }
            set { _providerNameNotContains = new InputPropertyInfo { Name = "providerName_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNotContainsNocase
        {
            get { return (QueryBuilderParameter<string>)_providerNameNotContainsNocase.Value; }
            set { _providerNameNotContainsNocase = new InputPropertyInfo { Name = "providerName_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_starts_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameStartsWith
        {
            get { return (QueryBuilderParameter<string>)_providerNameStartsWith.Value; }
            set { _providerNameStartsWith = new InputPropertyInfo { Name = "providerName_starts_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_starts_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameStartsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_providerNameStartsWithNocase.Value; }
            set { _providerNameStartsWithNocase = new InputPropertyInfo { Name = "providerName_starts_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_starts_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNotStartsWith
        {
            get { return (QueryBuilderParameter<string>)_providerNameNotStartsWith.Value; }
            set { _providerNameNotStartsWith = new InputPropertyInfo { Name = "providerName_not_starts_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_starts_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNotStartsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_providerNameNotStartsWithNocase.Value; }
            set { _providerNameNotStartsWithNocase = new InputPropertyInfo { Name = "providerName_not_starts_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_ends_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameEndsWith
        {
            get { return (QueryBuilderParameter<string>)_providerNameEndsWith.Value; }
            set { _providerNameEndsWith = new InputPropertyInfo { Name = "providerName_ends_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_ends_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameEndsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_providerNameEndsWithNocase.Value; }
            set { _providerNameEndsWithNocase = new InputPropertyInfo { Name = "providerName_ends_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_ends_with")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNotEndsWith
        {
            get { return (QueryBuilderParameter<string>)_providerNameNotEndsWith.Value; }
            set { _providerNameNotEndsWith = new InputPropertyInfo { Name = "providerName_not_ends_with", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("providerName_not_ends_with_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ProviderNameNotEndsWithNocase
        {
            get { return (QueryBuilderParameter<string>)_providerNameNotEndsWithNocase.Value; }
            set { _providerNameNotEndsWithNocase = new InputPropertyInfo { Name = "providerName_not_ends_with_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddress
        {
            get { return (QueryBuilderParameter<string>)_tokenAddress.Value; }
            set { _tokenAddress = new InputPropertyInfo { Name = "tokenAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNot
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNot.Value; }
            set { _tokenAddressNot = new InputPropertyInfo { Name = "tokenAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGt.Value; }
            set { _tokenAddressGt = new InputPropertyInfo { Name = "tokenAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLt.Value; }
            set { _tokenAddressLt = new InputPropertyInfo { Name = "tokenAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGte.Value; }
            set { _tokenAddressGte = new InputPropertyInfo { Name = "tokenAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLte.Value; }
            set { _tokenAddressLte = new InputPropertyInfo { Name = "tokenAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressIn.Value; }
            set { _tokenAddressIn = new InputPropertyInfo { Name = "tokenAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressNotIn.Value; }
            set { _tokenAddressNotIn = new InputPropertyInfo { Name = "tokenAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressContains.Value; }
            set { _tokenAddressContains = new InputPropertyInfo { Name = "tokenAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNotContains.Value; }
            set { _tokenAddressNotContains = new InputPropertyInfo { Name = "tokenAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolDataFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolDataFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<PoolDataFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolDataFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolDataFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<PoolDataFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_previousOwner.Name != null) yield return _previousOwner;
            if (_previousOwnerNot.Name != null) yield return _previousOwnerNot;
            if (_previousOwnerGt.Name != null) yield return _previousOwnerGt;
            if (_previousOwnerLt.Name != null) yield return _previousOwnerLt;
            if (_previousOwnerGte.Name != null) yield return _previousOwnerGte;
            if (_previousOwnerLte.Name != null) yield return _previousOwnerLte;
            if (_previousOwnerIn.Name != null) yield return _previousOwnerIn;
            if (_previousOwnerNotIn.Name != null) yield return _previousOwnerNotIn;
            if (_previousOwnerContains.Name != null) yield return _previousOwnerContains;
            if (_previousOwnerNotContains.Name != null) yield return _previousOwnerNotContains;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_provider.Name != null) yield return _provider;
            if (_providerNot.Name != null) yield return _providerNot;
            if (_providerGt.Name != null) yield return _providerGt;
            if (_providerLt.Name != null) yield return _providerLt;
            if (_providerGte.Name != null) yield return _providerGte;
            if (_providerLte.Name != null) yield return _providerLte;
            if (_providerIn.Name != null) yield return _providerIn;
            if (_providerNotIn.Name != null) yield return _providerNotIn;
            if (_providerContains.Name != null) yield return _providerContains;
            if (_providerNotContains.Name != null) yield return _providerNotContains;
            if (_providerName.Name != null) yield return _providerName;
            if (_providerNameNot.Name != null) yield return _providerNameNot;
            if (_providerNameGt.Name != null) yield return _providerNameGt;
            if (_providerNameLt.Name != null) yield return _providerNameLt;
            if (_providerNameGte.Name != null) yield return _providerNameGte;
            if (_providerNameLte.Name != null) yield return _providerNameLte;
            if (_providerNameIn.Name != null) yield return _providerNameIn;
            if (_providerNameNotIn.Name != null) yield return _providerNameNotIn;
            if (_providerNameContains.Name != null) yield return _providerNameContains;
            if (_providerNameContainsNocase.Name != null) yield return _providerNameContainsNocase;
            if (_providerNameNotContains.Name != null) yield return _providerNameNotContains;
            if (_providerNameNotContainsNocase.Name != null) yield return _providerNameNotContainsNocase;
            if (_providerNameStartsWith.Name != null) yield return _providerNameStartsWith;
            if (_providerNameStartsWithNocase.Name != null) yield return _providerNameStartsWithNocase;
            if (_providerNameNotStartsWith.Name != null) yield return _providerNameNotStartsWith;
            if (_providerNameNotStartsWithNocase.Name != null) yield return _providerNameNotStartsWithNocase;
            if (_providerNameEndsWith.Name != null) yield return _providerNameEndsWith;
            if (_providerNameEndsWithNocase.Name != null) yield return _providerNameEndsWithNocase;
            if (_providerNameNotEndsWith.Name != null) yield return _providerNameNotEndsWith;
            if (_providerNameNotEndsWithNocase.Name != null) yield return _providerNameNotEndsWithNocase;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_tokenAddress.Name != null) yield return _tokenAddress;
            if (_tokenAddressNot.Name != null) yield return _tokenAddressNot;
            if (_tokenAddressGt.Name != null) yield return _tokenAddressGt;
            if (_tokenAddressLt.Name != null) yield return _tokenAddressLt;
            if (_tokenAddressGte.Name != null) yield return _tokenAddressGte;
            if (_tokenAddressLte.Name != null) yield return _tokenAddressLte;
            if (_tokenAddressIn.Name != null) yield return _tokenAddressIn;
            if (_tokenAddressNotIn.Name != null) yield return _tokenAddressNotIn;
            if (_tokenAddressContains.Name != null) yield return _tokenAddressContains;
            if (_tokenAddressNotContains.Name != null) yield return _tokenAddressNotContains;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class PoolSplitFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _newPoolId;
        private InputPropertyInfo _newPoolIdNot;
        private InputPropertyInfo _newPoolIdGt;
        private InputPropertyInfo _newPoolIdLt;
        private InputPropertyInfo _newPoolIdGte;
        private InputPropertyInfo _newPoolIdLte;
        private InputPropertyInfo _newPoolIdIn;
        private InputPropertyInfo _newPoolIdNotIn;
        private InputPropertyInfo _newOwner;
        private InputPropertyInfo _newOwnerNot;
        private InputPropertyInfo _newOwnerGt;
        private InputPropertyInfo _newOwnerLt;
        private InputPropertyInfo _newOwnerGte;
        private InputPropertyInfo _newOwnerLte;
        private InputPropertyInfo _newOwnerIn;
        private InputPropertyInfo _newOwnerNotIn;
        private InputPropertyInfo _newOwnerContains;
        private InputPropertyInfo _newOwnerNotContains;
        private InputPropertyInfo _splitLeftAmount;
        private InputPropertyInfo _splitLeftAmountNot;
        private InputPropertyInfo _splitLeftAmountGt;
        private InputPropertyInfo _splitLeftAmountLt;
        private InputPropertyInfo _splitLeftAmountGte;
        private InputPropertyInfo _splitLeftAmountLte;
        private InputPropertyInfo _splitLeftAmountIn;
        private InputPropertyInfo _splitLeftAmountNotIn;
        private InputPropertyInfo _newSplitLeftAmount;
        private InputPropertyInfo _newSplitLeftAmountNot;
        private InputPropertyInfo _newSplitLeftAmountGt;
        private InputPropertyInfo _newSplitLeftAmountLt;
        private InputPropertyInfo _newSplitLeftAmountGte;
        private InputPropertyInfo _newSplitLeftAmountLte;
        private InputPropertyInfo _newSplitLeftAmountIn;
        private InputPropertyInfo _newSplitLeftAmountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewPoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newPoolId.Value; }
            set { _newPoolId = new InputPropertyInfo { Name = "newPoolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewPoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newPoolIdNot.Value; }
            set { _newPoolIdNot = new InputPropertyInfo { Name = "newPoolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewPoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newPoolIdGt.Value; }
            set { _newPoolIdGt = new InputPropertyInfo { Name = "newPoolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewPoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newPoolIdLt.Value; }
            set { _newPoolIdLt = new InputPropertyInfo { Name = "newPoolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewPoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newPoolIdGte.Value; }
            set { _newPoolIdGte = new InputPropertyInfo { Name = "newPoolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewPoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newPoolIdLte.Value; }
            set { _newPoolIdLte = new InputPropertyInfo { Name = "newPoolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewPoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newPoolIdIn.Value; }
            set { _newPoolIdIn = new InputPropertyInfo { Name = "newPoolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newPoolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewPoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newPoolIdNotIn.Value; }
            set { _newPoolIdNotIn = new InputPropertyInfo { Name = "newPoolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwner
        {
            get { return (QueryBuilderParameter<string>)_newOwner.Value; }
            set { _newOwner = new InputPropertyInfo { Name = "newOwner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNot
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNot.Value; }
            set { _newOwnerNot = new InputPropertyInfo { Name = "newOwner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGt.Value; }
            set { _newOwnerGt = new InputPropertyInfo { Name = "newOwner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLt
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLt.Value; }
            set { _newOwnerLt = new InputPropertyInfo { Name = "newOwner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerGte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerGte.Value; }
            set { _newOwnerGte = new InputPropertyInfo { Name = "newOwner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerLte
        {
            get { return (QueryBuilderParameter<string>)_newOwnerLte.Value; }
            set { _newOwnerLte = new InputPropertyInfo { Name = "newOwner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerIn.Value; }
            set { _newOwnerIn = new InputPropertyInfo { Name = "newOwner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewOwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newOwnerNotIn.Value; }
            set { _newOwnerNotIn = new InputPropertyInfo { Name = "newOwner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerContains.Value; }
            set { _newOwnerContains = new InputPropertyInfo { Name = "newOwner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newOwner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewOwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_newOwnerNotContains.Value; }
            set { _newOwnerNotContains = new InputPropertyInfo { Name = "newOwner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> SplitLeftAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_splitLeftAmount.Value; }
            set { _splitLeftAmount = new InputPropertyInfo { Name = "splitLeftAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> SplitLeftAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_splitLeftAmountNot.Value; }
            set { _splitLeftAmountNot = new InputPropertyInfo { Name = "splitLeftAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> SplitLeftAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_splitLeftAmountGt.Value; }
            set { _splitLeftAmountGt = new InputPropertyInfo { Name = "splitLeftAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> SplitLeftAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_splitLeftAmountLt.Value; }
            set { _splitLeftAmountLt = new InputPropertyInfo { Name = "splitLeftAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> SplitLeftAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_splitLeftAmountGte.Value; }
            set { _splitLeftAmountGte = new InputPropertyInfo { Name = "splitLeftAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> SplitLeftAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_splitLeftAmountLte.Value; }
            set { _splitLeftAmountLte = new InputPropertyInfo { Name = "splitLeftAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> SplitLeftAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_splitLeftAmountIn.Value; }
            set { _splitLeftAmountIn = new InputPropertyInfo { Name = "splitLeftAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("splitLeftAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> SplitLeftAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_splitLeftAmountNotIn.Value; }
            set { _splitLeftAmountNotIn = new InputPropertyInfo { Name = "splitLeftAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewSplitLeftAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newSplitLeftAmount.Value; }
            set { _newSplitLeftAmount = new InputPropertyInfo { Name = "newSplitLeftAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewSplitLeftAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newSplitLeftAmountNot.Value; }
            set { _newSplitLeftAmountNot = new InputPropertyInfo { Name = "newSplitLeftAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewSplitLeftAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newSplitLeftAmountGt.Value; }
            set { _newSplitLeftAmountGt = new InputPropertyInfo { Name = "newSplitLeftAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewSplitLeftAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newSplitLeftAmountLt.Value; }
            set { _newSplitLeftAmountLt = new InputPropertyInfo { Name = "newSplitLeftAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewSplitLeftAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newSplitLeftAmountGte.Value; }
            set { _newSplitLeftAmountGte = new InputPropertyInfo { Name = "newSplitLeftAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewSplitLeftAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newSplitLeftAmountLte.Value; }
            set { _newSplitLeftAmountLte = new InputPropertyInfo { Name = "newSplitLeftAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewSplitLeftAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newSplitLeftAmountIn.Value; }
            set { _newSplitLeftAmountIn = new InputPropertyInfo { Name = "newSplitLeftAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newSplitLeftAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewSplitLeftAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newSplitLeftAmountNotIn.Value; }
            set { _newSplitLeftAmountNotIn = new InputPropertyInfo { Name = "newSplitLeftAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolSplitFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolSplitFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<PoolSplitFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolSplitFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolSplitFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<PoolSplitFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_newPoolId.Name != null) yield return _newPoolId;
            if (_newPoolIdNot.Name != null) yield return _newPoolIdNot;
            if (_newPoolIdGt.Name != null) yield return _newPoolIdGt;
            if (_newPoolIdLt.Name != null) yield return _newPoolIdLt;
            if (_newPoolIdGte.Name != null) yield return _newPoolIdGte;
            if (_newPoolIdLte.Name != null) yield return _newPoolIdLte;
            if (_newPoolIdIn.Name != null) yield return _newPoolIdIn;
            if (_newPoolIdNotIn.Name != null) yield return _newPoolIdNotIn;
            if (_newOwner.Name != null) yield return _newOwner;
            if (_newOwnerNot.Name != null) yield return _newOwnerNot;
            if (_newOwnerGt.Name != null) yield return _newOwnerGt;
            if (_newOwnerLt.Name != null) yield return _newOwnerLt;
            if (_newOwnerGte.Name != null) yield return _newOwnerGte;
            if (_newOwnerLte.Name != null) yield return _newOwnerLte;
            if (_newOwnerIn.Name != null) yield return _newOwnerIn;
            if (_newOwnerNotIn.Name != null) yield return _newOwnerNotIn;
            if (_newOwnerContains.Name != null) yield return _newOwnerContains;
            if (_newOwnerNotContains.Name != null) yield return _newOwnerNotContains;
            if (_splitLeftAmount.Name != null) yield return _splitLeftAmount;
            if (_splitLeftAmountNot.Name != null) yield return _splitLeftAmountNot;
            if (_splitLeftAmountGt.Name != null) yield return _splitLeftAmountGt;
            if (_splitLeftAmountLt.Name != null) yield return _splitLeftAmountLt;
            if (_splitLeftAmountGte.Name != null) yield return _splitLeftAmountGte;
            if (_splitLeftAmountLte.Name != null) yield return _splitLeftAmountLte;
            if (_splitLeftAmountIn.Name != null) yield return _splitLeftAmountIn;
            if (_splitLeftAmountNotIn.Name != null) yield return _splitLeftAmountNotIn;
            if (_newSplitLeftAmount.Name != null) yield return _newSplitLeftAmount;
            if (_newSplitLeftAmountNot.Name != null) yield return _newSplitLeftAmountNot;
            if (_newSplitLeftAmountGt.Name != null) yield return _newSplitLeftAmountGt;
            if (_newSplitLeftAmountLt.Name != null) yield return _newSplitLeftAmountLt;
            if (_newSplitLeftAmountGte.Name != null) yield return _newSplitLeftAmountGte;
            if (_newSplitLeftAmountLte.Name != null) yield return _newSplitLeftAmountLte;
            if (_newSplitLeftAmountIn.Name != null) yield return _newSplitLeftAmountIn;
            if (_newSplitLeftAmountNotIn.Name != null) yield return _newSplitLeftAmountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class PoolxLockedBalanceFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _delayVaultAmount;
        private InputPropertyInfo _delayVaultAmountNot;
        private InputPropertyInfo _delayVaultAmountGt;
        private InputPropertyInfo _delayVaultAmountLt;
        private InputPropertyInfo _delayVaultAmountGte;
        private InputPropertyInfo _delayVaultAmountLte;
        private InputPropertyInfo _delayVaultAmountIn;
        private InputPropertyInfo _delayVaultAmountNotIn;
        private InputPropertyInfo _delayVaultProviderAmount;
        private InputPropertyInfo _delayVaultProviderAmountNot;
        private InputPropertyInfo _delayVaultProviderAmountGt;
        private InputPropertyInfo _delayVaultProviderAmountLt;
        private InputPropertyInfo _delayVaultProviderAmountGte;
        private InputPropertyInfo _delayVaultProviderAmountLte;
        private InputPropertyInfo _delayVaultProviderAmountIn;
        private InputPropertyInfo _delayVaultProviderAmountNotIn;
        private InputPropertyInfo _totalAmount;
        private InputPropertyInfo _totalAmountNot;
        private InputPropertyInfo _totalAmountGt;
        private InputPropertyInfo _totalAmountLt;
        private InputPropertyInfo _totalAmountGte;
        private InputPropertyInfo _totalAmountLte;
        private InputPropertyInfo _totalAmountIn;
        private InputPropertyInfo _totalAmountNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultAmount.Value; }
            set { _delayVaultAmount = new InputPropertyInfo { Name = "delayVaultAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultAmountNot.Value; }
            set { _delayVaultAmountNot = new InputPropertyInfo { Name = "delayVaultAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultAmountGt.Value; }
            set { _delayVaultAmountGt = new InputPropertyInfo { Name = "delayVaultAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultAmountLt.Value; }
            set { _delayVaultAmountLt = new InputPropertyInfo { Name = "delayVaultAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultAmountGte.Value; }
            set { _delayVaultAmountGte = new InputPropertyInfo { Name = "delayVaultAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultAmountLte.Value; }
            set { _delayVaultAmountLte = new InputPropertyInfo { Name = "delayVaultAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> DelayVaultAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_delayVaultAmountIn.Value; }
            set { _delayVaultAmountIn = new InputPropertyInfo { Name = "delayVaultAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> DelayVaultAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_delayVaultAmountNotIn.Value; }
            set { _delayVaultAmountNotIn = new InputPropertyInfo { Name = "delayVaultAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultProviderAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultProviderAmount.Value; }
            set { _delayVaultProviderAmount = new InputPropertyInfo { Name = "delayVaultProviderAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultProviderAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultProviderAmountNot.Value; }
            set { _delayVaultProviderAmountNot = new InputPropertyInfo { Name = "delayVaultProviderAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultProviderAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultProviderAmountGt.Value; }
            set { _delayVaultProviderAmountGt = new InputPropertyInfo { Name = "delayVaultProviderAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultProviderAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultProviderAmountLt.Value; }
            set { _delayVaultProviderAmountLt = new InputPropertyInfo { Name = "delayVaultProviderAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultProviderAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultProviderAmountGte.Value; }
            set { _delayVaultProviderAmountGte = new InputPropertyInfo { Name = "delayVaultProviderAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> DelayVaultProviderAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_delayVaultProviderAmountLte.Value; }
            set { _delayVaultProviderAmountLte = new InputPropertyInfo { Name = "delayVaultProviderAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> DelayVaultProviderAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_delayVaultProviderAmountIn.Value; }
            set { _delayVaultProviderAmountIn = new InputPropertyInfo { Name = "delayVaultProviderAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("delayVaultProviderAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> DelayVaultProviderAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_delayVaultProviderAmountNotIn.Value; }
            set { _delayVaultProviderAmountNotIn = new InputPropertyInfo { Name = "delayVaultProviderAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmount.Value; }
            set { _totalAmount = new InputPropertyInfo { Name = "totalAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountNot.Value; }
            set { _totalAmountNot = new InputPropertyInfo { Name = "totalAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountGt.Value; }
            set { _totalAmountGt = new InputPropertyInfo { Name = "totalAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountLt.Value; }
            set { _totalAmountLt = new InputPropertyInfo { Name = "totalAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountGte.Value; }
            set { _totalAmountGte = new InputPropertyInfo { Name = "totalAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalAmountLte.Value; }
            set { _totalAmountLte = new InputPropertyInfo { Name = "totalAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalAmountIn.Value; }
            set { _totalAmountIn = new InputPropertyInfo { Name = "totalAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalAmountNotIn.Value; }
            set { _totalAmountNotIn = new InputPropertyInfo { Name = "totalAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolxLockedBalanceFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolxLockedBalanceFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<PoolxLockedBalanceFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolxLockedBalanceFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolxLockedBalanceFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<PoolxLockedBalanceFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_delayVaultAmount.Name != null) yield return _delayVaultAmount;
            if (_delayVaultAmountNot.Name != null) yield return _delayVaultAmountNot;
            if (_delayVaultAmountGt.Name != null) yield return _delayVaultAmountGt;
            if (_delayVaultAmountLt.Name != null) yield return _delayVaultAmountLt;
            if (_delayVaultAmountGte.Name != null) yield return _delayVaultAmountGte;
            if (_delayVaultAmountLte.Name != null) yield return _delayVaultAmountLte;
            if (_delayVaultAmountIn.Name != null) yield return _delayVaultAmountIn;
            if (_delayVaultAmountNotIn.Name != null) yield return _delayVaultAmountNotIn;
            if (_delayVaultProviderAmount.Name != null) yield return _delayVaultProviderAmount;
            if (_delayVaultProviderAmountNot.Name != null) yield return _delayVaultProviderAmountNot;
            if (_delayVaultProviderAmountGt.Name != null) yield return _delayVaultProviderAmountGt;
            if (_delayVaultProviderAmountLt.Name != null) yield return _delayVaultProviderAmountLt;
            if (_delayVaultProviderAmountGte.Name != null) yield return _delayVaultProviderAmountGte;
            if (_delayVaultProviderAmountLte.Name != null) yield return _delayVaultProviderAmountLte;
            if (_delayVaultProviderAmountIn.Name != null) yield return _delayVaultProviderAmountIn;
            if (_delayVaultProviderAmountNotIn.Name != null) yield return _delayVaultProviderAmountNotIn;
            if (_totalAmount.Name != null) yield return _totalAmount;
            if (_totalAmountNot.Name != null) yield return _totalAmountNot;
            if (_totalAmountGt.Name != null) yield return _totalAmountGt;
            if (_totalAmountLt.Name != null) yield return _totalAmountLt;
            if (_totalAmountGte.Name != null) yield return _totalAmountGte;
            if (_totalAmountLte.Name != null) yield return _totalAmountLte;
            if (_totalAmountIn.Name != null) yield return _totalAmountIn;
            if (_totalAmountNotIn.Name != null) yield return _totalAmountNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class PoolxUnlocksFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _createdAt;
        private InputPropertyInfo _createdAtNot;
        private InputPropertyInfo _createdAtGt;
        private InputPropertyInfo _createdAtLt;
        private InputPropertyInfo _createdAtGte;
        private InputPropertyInfo _createdAtLte;
        private InputPropertyInfo _createdAtIn;
        private InputPropertyInfo _createdAtNotIn;
        private InputPropertyInfo _unlocksAt;
        private InputPropertyInfo _unlocksAtNot;
        private InputPropertyInfo _unlocksAtGt;
        private InputPropertyInfo _unlocksAtLt;
        private InputPropertyInfo _unlocksAtGte;
        private InputPropertyInfo _unlocksAtLte;
        private InputPropertyInfo _unlocksAtIn;
        private InputPropertyInfo _unlocksAtNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CreatedAt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_createdAt.Value; }
            set { _createdAt = new InputPropertyInfo { Name = "createdAt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CreatedAtNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_createdAtNot.Value; }
            set { _createdAtNot = new InputPropertyInfo { Name = "createdAt_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CreatedAtGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_createdAtGt.Value; }
            set { _createdAtGt = new InputPropertyInfo { Name = "createdAt_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CreatedAtLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_createdAtLt.Value; }
            set { _createdAtLt = new InputPropertyInfo { Name = "createdAt_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CreatedAtGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_createdAtGte.Value; }
            set { _createdAtGte = new InputPropertyInfo { Name = "createdAt_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CreatedAtLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_createdAtLte.Value; }
            set { _createdAtLte = new InputPropertyInfo { Name = "createdAt_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CreatedAtIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_createdAtIn.Value; }
            set { _createdAtIn = new InputPropertyInfo { Name = "createdAt_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("createdAt_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CreatedAtNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_createdAtNotIn.Value; }
            set { _createdAtNotIn = new InputPropertyInfo { Name = "createdAt_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> UnlocksAt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_unlocksAt.Value; }
            set { _unlocksAt = new InputPropertyInfo { Name = "unlocksAt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> UnlocksAtNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_unlocksAtNot.Value; }
            set { _unlocksAtNot = new InputPropertyInfo { Name = "unlocksAt_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> UnlocksAtGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_unlocksAtGt.Value; }
            set { _unlocksAtGt = new InputPropertyInfo { Name = "unlocksAt_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> UnlocksAtLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_unlocksAtLt.Value; }
            set { _unlocksAtLt = new InputPropertyInfo { Name = "unlocksAt_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> UnlocksAtGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_unlocksAtGte.Value; }
            set { _unlocksAtGte = new InputPropertyInfo { Name = "unlocksAt_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> UnlocksAtLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_unlocksAtLte.Value; }
            set { _unlocksAtLte = new InputPropertyInfo { Name = "unlocksAt_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> UnlocksAtIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_unlocksAtIn.Value; }
            set { _unlocksAtIn = new InputPropertyInfo { Name = "unlocksAt_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("unlocksAt_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> UnlocksAtNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_unlocksAtNotIn.Value; }
            set { _unlocksAtNotIn = new InputPropertyInfo { Name = "unlocksAt_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolxUnlocksFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolxUnlocksFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<PoolxUnlocksFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<PoolxUnlocksFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<PoolxUnlocksFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<PoolxUnlocksFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_createdAt.Name != null) yield return _createdAt;
            if (_createdAtNot.Name != null) yield return _createdAtNot;
            if (_createdAtGt.Name != null) yield return _createdAtGt;
            if (_createdAtLt.Name != null) yield return _createdAtLt;
            if (_createdAtGte.Name != null) yield return _createdAtGte;
            if (_createdAtLte.Name != null) yield return _createdAtLte;
            if (_createdAtIn.Name != null) yield return _createdAtIn;
            if (_createdAtNotIn.Name != null) yield return _createdAtNotIn;
            if (_unlocksAt.Name != null) yield return _unlocksAt;
            if (_unlocksAtNot.Name != null) yield return _unlocksAtNot;
            if (_unlocksAtGt.Name != null) yield return _unlocksAtGt;
            if (_unlocksAtLt.Name != null) yield return _unlocksAtLt;
            if (_unlocksAtGte.Name != null) yield return _unlocksAtGte;
            if (_unlocksAtLte.Name != null) yield return _unlocksAtLte;
            if (_unlocksAtIn.Name != null) yield return _unlocksAtIn;
            if (_unlocksAtNotIn.Name != null) yield return _unlocksAtNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class RedeemedTokensFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _remaningAmount;
        private InputPropertyInfo _remaningAmountNot;
        private InputPropertyInfo _remaningAmountGt;
        private InputPropertyInfo _remaningAmountLt;
        private InputPropertyInfo _remaningAmountGte;
        private InputPropertyInfo _remaningAmountLte;
        private InputPropertyInfo _remaningAmountIn;
        private InputPropertyInfo _remaningAmountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "Amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "Amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "Amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "Amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "Amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "Amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "Amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "Amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RemaningAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_remaningAmount.Value; }
            set { _remaningAmount = new InputPropertyInfo { Name = "RemaningAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RemaningAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_remaningAmountNot.Value; }
            set { _remaningAmountNot = new InputPropertyInfo { Name = "RemaningAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RemaningAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_remaningAmountGt.Value; }
            set { _remaningAmountGt = new InputPropertyInfo { Name = "RemaningAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RemaningAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_remaningAmountLt.Value; }
            set { _remaningAmountLt = new InputPropertyInfo { Name = "RemaningAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RemaningAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_remaningAmountGte.Value; }
            set { _remaningAmountGte = new InputPropertyInfo { Name = "RemaningAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RemaningAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_remaningAmountLte.Value; }
            set { _remaningAmountLte = new InputPropertyInfo { Name = "RemaningAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> RemaningAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_remaningAmountIn.Value; }
            set { _remaningAmountIn = new InputPropertyInfo { Name = "RemaningAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("RemaningAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> RemaningAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_remaningAmountNotIn.Value; }
            set { _remaningAmountNotIn = new InputPropertyInfo { Name = "RemaningAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<RedeemedTokensFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<RedeemedTokensFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<RedeemedTokensFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<RedeemedTokensFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<RedeemedTokensFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<RedeemedTokensFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_remaningAmount.Name != null) yield return _remaningAmount;
            if (_remaningAmountNot.Name != null) yield return _remaningAmountNot;
            if (_remaningAmountGt.Name != null) yield return _remaningAmountGt;
            if (_remaningAmountLt.Name != null) yield return _remaningAmountLt;
            if (_remaningAmountGte.Name != null) yield return _remaningAmountGte;
            if (_remaningAmountLte.Name != null) yield return _remaningAmountLte;
            if (_remaningAmountIn.Name != null) yield return _remaningAmountIn;
            if (_remaningAmountNotIn.Name != null) yield return _remaningAmountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class RefundProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<RefundProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<RefundProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<RefundProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<RefundProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<RefundProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<RefundProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TimedDealProviderFirewallAdminUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newAdmin;
        private InputPropertyInfo _newAdminNot;
        private InputPropertyInfo _newAdminGt;
        private InputPropertyInfo _newAdminLt;
        private InputPropertyInfo _newAdminGte;
        private InputPropertyInfo _newAdminLte;
        private InputPropertyInfo _newAdminIn;
        private InputPropertyInfo _newAdminNotIn;
        private InputPropertyInfo _newAdminContains;
        private InputPropertyInfo _newAdminNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdmin
        {
            get { return (QueryBuilderParameter<string>)_newAdmin.Value; }
            set { _newAdmin = new InputPropertyInfo { Name = "newAdmin", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNot
        {
            get { return (QueryBuilderParameter<string>)_newAdminNot.Value; }
            set { _newAdminNot = new InputPropertyInfo { Name = "newAdmin_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGt
        {
            get { return (QueryBuilderParameter<string>)_newAdminGt.Value; }
            set { _newAdminGt = new InputPropertyInfo { Name = "newAdmin_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLt
        {
            get { return (QueryBuilderParameter<string>)_newAdminLt.Value; }
            set { _newAdminLt = new InputPropertyInfo { Name = "newAdmin_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminGte
        {
            get { return (QueryBuilderParameter<string>)_newAdminGte.Value; }
            set { _newAdminGte = new InputPropertyInfo { Name = "newAdmin_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminLte
        {
            get { return (QueryBuilderParameter<string>)_newAdminLte.Value; }
            set { _newAdminLte = new InputPropertyInfo { Name = "newAdmin_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminIn.Value; }
            set { _newAdminIn = new InputPropertyInfo { Name = "newAdmin_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewAdminNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newAdminNotIn.Value; }
            set { _newAdminNotIn = new InputPropertyInfo { Name = "newAdmin_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminContains.Value; }
            set { _newAdminContains = new InputPropertyInfo { Name = "newAdmin_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newAdmin_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewAdminNotContains
        {
            get { return (QueryBuilderParameter<string>)_newAdminNotContains.Value; }
            set { _newAdminNotContains = new InputPropertyInfo { Name = "newAdmin_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TimedDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TimedDealProviderFirewallAdminUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TimedDealProviderFirewallAdminUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TimedDealProviderFirewallAdminUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TimedDealProviderFirewallAdminUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TimedDealProviderFirewallAdminUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newAdmin.Name != null) yield return _newAdmin;
            if (_newAdminNot.Name != null) yield return _newAdminNot;
            if (_newAdminGt.Name != null) yield return _newAdminGt;
            if (_newAdminLt.Name != null) yield return _newAdminLt;
            if (_newAdminGte.Name != null) yield return _newAdminGte;
            if (_newAdminLte.Name != null) yield return _newAdminLte;
            if (_newAdminIn.Name != null) yield return _newAdminIn;
            if (_newAdminNotIn.Name != null) yield return _newAdminNotIn;
            if (_newAdminContains.Name != null) yield return _newAdminContains;
            if (_newAdminNotContains.Name != null) yield return _newAdminNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TimedDealProviderFirewallUpdatedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _newFirewall;
        private InputPropertyInfo _newFirewallNot;
        private InputPropertyInfo _newFirewallGt;
        private InputPropertyInfo _newFirewallLt;
        private InputPropertyInfo _newFirewallGte;
        private InputPropertyInfo _newFirewallLte;
        private InputPropertyInfo _newFirewallIn;
        private InputPropertyInfo _newFirewallNotIn;
        private InputPropertyInfo _newFirewallContains;
        private InputPropertyInfo _newFirewallNotContains;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewall
        {
            get { return (QueryBuilderParameter<string>)_newFirewall.Value; }
            set { _newFirewall = new InputPropertyInfo { Name = "newFirewall", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNot
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNot.Value; }
            set { _newFirewallNot = new InputPropertyInfo { Name = "newFirewall_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGt.Value; }
            set { _newFirewallGt = new InputPropertyInfo { Name = "newFirewall_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLt
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLt.Value; }
            set { _newFirewallLt = new InputPropertyInfo { Name = "newFirewall_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallGte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallGte.Value; }
            set { _newFirewallGte = new InputPropertyInfo { Name = "newFirewall_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallLte
        {
            get { return (QueryBuilderParameter<string>)_newFirewallLte.Value; }
            set { _newFirewallLte = new InputPropertyInfo { Name = "newFirewall_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallIn.Value; }
            set { _newFirewallIn = new InputPropertyInfo { Name = "newFirewall_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> NewFirewallNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_newFirewallNotIn.Value; }
            set { _newFirewallNotIn = new InputPropertyInfo { Name = "newFirewall_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallContains.Value; }
            set { _newFirewallContains = new InputPropertyInfo { Name = "newFirewall_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("newFirewall_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> NewFirewallNotContains
        {
            get { return (QueryBuilderParameter<string>)_newFirewallNotContains.Value; }
            set { _newFirewallNotContains = new InputPropertyInfo { Name = "newFirewall_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TimedDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TimedDealProviderFirewallUpdatedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TimedDealProviderFirewallUpdatedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TimedDealProviderFirewallUpdatedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TimedDealProviderFirewallUpdatedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TimedDealProviderFirewallUpdatedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_newFirewall.Name != null) yield return _newFirewall;
            if (_newFirewallNot.Name != null) yield return _newFirewallNot;
            if (_newFirewallGt.Name != null) yield return _newFirewallGt;
            if (_newFirewallLt.Name != null) yield return _newFirewallLt;
            if (_newFirewallGte.Name != null) yield return _newFirewallGte;
            if (_newFirewallLte.Name != null) yield return _newFirewallLte;
            if (_newFirewallIn.Name != null) yield return _newFirewallIn;
            if (_newFirewallNotIn.Name != null) yield return _newFirewallNotIn;
            if (_newFirewallContains.Name != null) yield return _newFirewallContains;
            if (_newFirewallNotContains.Name != null) yield return _newFirewallNotContains;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TimedDealProviderUpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TimedDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TimedDealProviderUpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TimedDealProviderUpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TimedDealProviderUpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TimedDealProviderUpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TimedDealProviderUpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TokenRedemptionApprovalFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _user;
        private InputPropertyInfo _userNot;
        private InputPropertyInfo _userGt;
        private InputPropertyInfo _userLt;
        private InputPropertyInfo _userGte;
        private InputPropertyInfo _userLte;
        private InputPropertyInfo _userIn;
        private InputPropertyInfo _userNotIn;
        private InputPropertyInfo _userContains;
        private InputPropertyInfo _userNotContains;
        private InputPropertyInfo _status;
        private InputPropertyInfo _statusNot;
        private InputPropertyInfo _statusIn;
        private InputPropertyInfo _statusNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> User
        {
            get { return (QueryBuilderParameter<string>)_user.Value; }
            set { _user = new InputPropertyInfo { Name = "User", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNot
        {
            get { return (QueryBuilderParameter<string>)_userNot.Value; }
            set { _userNot = new InputPropertyInfo { Name = "User_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGt
        {
            get { return (QueryBuilderParameter<string>)_userGt.Value; }
            set { _userGt = new InputPropertyInfo { Name = "User_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLt
        {
            get { return (QueryBuilderParameter<string>)_userLt.Value; }
            set { _userLt = new InputPropertyInfo { Name = "User_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGte
        {
            get { return (QueryBuilderParameter<string>)_userGte.Value; }
            set { _userGte = new InputPropertyInfo { Name = "User_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLte
        {
            get { return (QueryBuilderParameter<string>)_userLte.Value; }
            set { _userLte = new InputPropertyInfo { Name = "User_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userIn.Value; }
            set { _userIn = new InputPropertyInfo { Name = "User_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userNotIn.Value; }
            set { _userNotIn = new InputPropertyInfo { Name = "User_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserContains
        {
            get { return (QueryBuilderParameter<string>)_userContains.Value; }
            set { _userContains = new InputPropertyInfo { Name = "User_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("User_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNotContains
        {
            get { return (QueryBuilderParameter<string>)_userNotContains.Value; }
            set { _userNotContains = new InputPropertyInfo { Name = "User_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> Status
        {
            get { return (QueryBuilderParameter<bool?>)_status.Value; }
            set { _status = new InputPropertyInfo { Name = "Status", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Status_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> StatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_statusNot.Value; }
            set { _statusNot = new InputPropertyInfo { Name = "Status_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Status_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusIn.Value; }
            set { _statusIn = new InputPropertyInfo { Name = "Status_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Status_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusNotIn.Value; }
            set { _statusNotIn = new InputPropertyInfo { Name = "Status_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokenRedemptionApprovalFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokenRedemptionApprovalFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TokenRedemptionApprovalFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokenRedemptionApprovalFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokenRedemptionApprovalFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TokenRedemptionApprovalFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_user.Name != null) yield return _user;
            if (_userNot.Name != null) yield return _userNot;
            if (_userGt.Name != null) yield return _userGt;
            if (_userLt.Name != null) yield return _userLt;
            if (_userGte.Name != null) yield return _userGte;
            if (_userLte.Name != null) yield return _userLte;
            if (_userIn.Name != null) yield return _userIn;
            if (_userNotIn.Name != null) yield return _userNotIn;
            if (_userContains.Name != null) yield return _userContains;
            if (_userNotContains.Name != null) yield return _userNotContains;
            if (_status.Name != null) yield return _status;
            if (_statusNot.Name != null) yield return _statusNot;
            if (_statusIn.Name != null) yield return _statusIn;
            if (_statusNotIn.Name != null) yield return _statusNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TokenStatusFilterFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _status;
        private InputPropertyInfo _statusNot;
        private InputPropertyInfo _statusIn;
        private InputPropertyInfo _statusNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> Status
        {
            get { return (QueryBuilderParameter<bool?>)_status.Value; }
            set { _status = new InputPropertyInfo { Name = "Status", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Status_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> StatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_statusNot.Value; }
            set { _statusNot = new InputPropertyInfo { Name = "Status_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Status_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusIn.Value; }
            set { _statusIn = new InputPropertyInfo { Name = "Status_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Status_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> StatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_statusNotIn.Value; }
            set { _statusNotIn = new InputPropertyInfo { Name = "Status_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokenStatusFilterFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokenStatusFilterFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TokenStatusFilterFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokenStatusFilterFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokenStatusFilterFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TokenStatusFilterFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_status.Name != null) yield return _status;
            if (_statusNot.Name != null) yield return _statusNot;
            if (_statusIn.Name != null) yield return _statusIn;
            if (_statusNotIn.Name != null) yield return _statusNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TokenWithdrawnFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _withdrawnAmount;
        private InputPropertyInfo _withdrawnAmountNot;
        private InputPropertyInfo _withdrawnAmountGt;
        private InputPropertyInfo _withdrawnAmountLt;
        private InputPropertyInfo _withdrawnAmountGte;
        private InputPropertyInfo _withdrawnAmountLte;
        private InputPropertyInfo _withdrawnAmountIn;
        private InputPropertyInfo _withdrawnAmountNotIn;
        private InputPropertyInfo _leftAmount;
        private InputPropertyInfo _leftAmountNot;
        private InputPropertyInfo _leftAmountGt;
        private InputPropertyInfo _leftAmountLt;
        private InputPropertyInfo _leftAmountGte;
        private InputPropertyInfo _leftAmountLte;
        private InputPropertyInfo _leftAmountIn;
        private InputPropertyInfo _leftAmountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> WithdrawnAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_withdrawnAmount.Value; }
            set { _withdrawnAmount = new InputPropertyInfo { Name = "withdrawnAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> WithdrawnAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_withdrawnAmountNot.Value; }
            set { _withdrawnAmountNot = new InputPropertyInfo { Name = "withdrawnAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> WithdrawnAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_withdrawnAmountGt.Value; }
            set { _withdrawnAmountGt = new InputPropertyInfo { Name = "withdrawnAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> WithdrawnAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_withdrawnAmountLt.Value; }
            set { _withdrawnAmountLt = new InputPropertyInfo { Name = "withdrawnAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> WithdrawnAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_withdrawnAmountGte.Value; }
            set { _withdrawnAmountGte = new InputPropertyInfo { Name = "withdrawnAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> WithdrawnAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_withdrawnAmountLte.Value; }
            set { _withdrawnAmountLte = new InputPropertyInfo { Name = "withdrawnAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> WithdrawnAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_withdrawnAmountIn.Value; }
            set { _withdrawnAmountIn = new InputPropertyInfo { Name = "withdrawnAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawnAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> WithdrawnAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_withdrawnAmountNotIn.Value; }
            set { _withdrawnAmountNotIn = new InputPropertyInfo { Name = "withdrawnAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmount.Value; }
            set { _leftAmount = new InputPropertyInfo { Name = "leftAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountNot.Value; }
            set { _leftAmountNot = new InputPropertyInfo { Name = "leftAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGt.Value; }
            set { _leftAmountGt = new InputPropertyInfo { Name = "leftAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLt.Value; }
            set { _leftAmountLt = new InputPropertyInfo { Name = "leftAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGte.Value; }
            set { _leftAmountGte = new InputPropertyInfo { Name = "leftAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLte.Value; }
            set { _leftAmountLte = new InputPropertyInfo { Name = "leftAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountIn.Value; }
            set { _leftAmountIn = new InputPropertyInfo { Name = "leftAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountNotIn.Value; }
            set { _leftAmountNotIn = new InputPropertyInfo { Name = "leftAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokenWithdrawnFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokenWithdrawnFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TokenWithdrawnFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokenWithdrawnFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokenWithdrawnFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TokenWithdrawnFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_withdrawnAmount.Name != null) yield return _withdrawnAmount;
            if (_withdrawnAmountNot.Name != null) yield return _withdrawnAmountNot;
            if (_withdrawnAmountGt.Name != null) yield return _withdrawnAmountGt;
            if (_withdrawnAmountLt.Name != null) yield return _withdrawnAmountLt;
            if (_withdrawnAmountGte.Name != null) yield return _withdrawnAmountGte;
            if (_withdrawnAmountLte.Name != null) yield return _withdrawnAmountLte;
            if (_withdrawnAmountIn.Name != null) yield return _withdrawnAmountIn;
            if (_withdrawnAmountNotIn.Name != null) yield return _withdrawnAmountNotIn;
            if (_leftAmount.Name != null) yield return _leftAmount;
            if (_leftAmountNot.Name != null) yield return _leftAmountNot;
            if (_leftAmountGt.Name != null) yield return _leftAmountGt;
            if (_leftAmountLt.Name != null) yield return _leftAmountLt;
            if (_leftAmountGte.Name != null) yield return _leftAmountGte;
            if (_leftAmountLte.Name != null) yield return _leftAmountLte;
            if (_leftAmountIn.Name != null) yield return _leftAmountIn;
            if (_leftAmountNotIn.Name != null) yield return _leftAmountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TokensDispensedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _user;
        private InputPropertyInfo _userNot;
        private InputPropertyInfo _userGt;
        private InputPropertyInfo _userLt;
        private InputPropertyInfo _userGte;
        private InputPropertyInfo _userLte;
        private InputPropertyInfo _userIn;
        private InputPropertyInfo _userNotIn;
        private InputPropertyInfo _userContains;
        private InputPropertyInfo _userNotContains;
        private InputPropertyInfo _amountTaken;
        private InputPropertyInfo _amountTakenNot;
        private InputPropertyInfo _amountTakenGt;
        private InputPropertyInfo _amountTakenLt;
        private InputPropertyInfo _amountTakenGte;
        private InputPropertyInfo _amountTakenLte;
        private InputPropertyInfo _amountTakenIn;
        private InputPropertyInfo _amountTakenNotIn;
        private InputPropertyInfo _leftAmount;
        private InputPropertyInfo _leftAmountNot;
        private InputPropertyInfo _leftAmountGt;
        private InputPropertyInfo _leftAmountLt;
        private InputPropertyInfo _leftAmountGte;
        private InputPropertyInfo _leftAmountLte;
        private InputPropertyInfo _leftAmountIn;
        private InputPropertyInfo _leftAmountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> User
        {
            get { return (QueryBuilderParameter<string>)_user.Value; }
            set { _user = new InputPropertyInfo { Name = "user", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNot
        {
            get { return (QueryBuilderParameter<string>)_userNot.Value; }
            set { _userNot = new InputPropertyInfo { Name = "user_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGt
        {
            get { return (QueryBuilderParameter<string>)_userGt.Value; }
            set { _userGt = new InputPropertyInfo { Name = "user_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLt
        {
            get { return (QueryBuilderParameter<string>)_userLt.Value; }
            set { _userLt = new InputPropertyInfo { Name = "user_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGte
        {
            get { return (QueryBuilderParameter<string>)_userGte.Value; }
            set { _userGte = new InputPropertyInfo { Name = "user_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLte
        {
            get { return (QueryBuilderParameter<string>)_userLte.Value; }
            set { _userLte = new InputPropertyInfo { Name = "user_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userIn.Value; }
            set { _userIn = new InputPropertyInfo { Name = "user_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userNotIn.Value; }
            set { _userNotIn = new InputPropertyInfo { Name = "user_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserContains
        {
            get { return (QueryBuilderParameter<string>)_userContains.Value; }
            set { _userContains = new InputPropertyInfo { Name = "user_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNotContains
        {
            get { return (QueryBuilderParameter<string>)_userNotContains.Value; }
            set { _userNotContains = new InputPropertyInfo { Name = "user_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountTaken
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountTaken.Value; }
            set { _amountTaken = new InputPropertyInfo { Name = "amountTaken", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountTakenNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountTakenNot.Value; }
            set { _amountTakenNot = new InputPropertyInfo { Name = "amountTaken_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountTakenGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountTakenGt.Value; }
            set { _amountTakenGt = new InputPropertyInfo { Name = "amountTaken_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountTakenLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountTakenLt.Value; }
            set { _amountTakenLt = new InputPropertyInfo { Name = "amountTaken_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountTakenGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountTakenGte.Value; }
            set { _amountTakenGte = new InputPropertyInfo { Name = "amountTaken_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountTakenLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountTakenLte.Value; }
            set { _amountTakenLte = new InputPropertyInfo { Name = "amountTaken_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountTakenIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountTakenIn.Value; }
            set { _amountTakenIn = new InputPropertyInfo { Name = "amountTaken_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amountTaken_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountTakenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountTakenNotIn.Value; }
            set { _amountTakenNotIn = new InputPropertyInfo { Name = "amountTaken_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmount.Value; }
            set { _leftAmount = new InputPropertyInfo { Name = "leftAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountNot.Value; }
            set { _leftAmountNot = new InputPropertyInfo { Name = "leftAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGt.Value; }
            set { _leftAmountGt = new InputPropertyInfo { Name = "leftAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLt.Value; }
            set { _leftAmountLt = new InputPropertyInfo { Name = "leftAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGte.Value; }
            set { _leftAmountGte = new InputPropertyInfo { Name = "leftAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLte.Value; }
            set { _leftAmountLte = new InputPropertyInfo { Name = "leftAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountIn.Value; }
            set { _leftAmountIn = new InputPropertyInfo { Name = "leftAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountNotIn.Value; }
            set { _leftAmountNotIn = new InputPropertyInfo { Name = "leftAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokensDispensedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokensDispensedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TokensDispensedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TokensDispensedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TokensDispensedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TokensDispensedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_user.Name != null) yield return _user;
            if (_userNot.Name != null) yield return _userNot;
            if (_userGt.Name != null) yield return _userGt;
            if (_userLt.Name != null) yield return _userLt;
            if (_userGte.Name != null) yield return _userGte;
            if (_userLte.Name != null) yield return _userLte;
            if (_userIn.Name != null) yield return _userIn;
            if (_userNotIn.Name != null) yield return _userNotIn;
            if (_userContains.Name != null) yield return _userContains;
            if (_userNotContains.Name != null) yield return _userNotContains;
            if (_amountTaken.Name != null) yield return _amountTaken;
            if (_amountTakenNot.Name != null) yield return _amountTakenNot;
            if (_amountTakenGt.Name != null) yield return _amountTakenGt;
            if (_amountTakenLt.Name != null) yield return _amountTakenLt;
            if (_amountTakenGte.Name != null) yield return _amountTakenGte;
            if (_amountTakenLte.Name != null) yield return _amountTakenLte;
            if (_amountTakenIn.Name != null) yield return _amountTakenIn;
            if (_amountTakenNotIn.Name != null) yield return _amountTakenNotIn;
            if (_leftAmount.Name != null) yield return _leftAmount;
            if (_leftAmountNot.Name != null) yield return _leftAmountNot;
            if (_leftAmountGt.Name != null) yield return _leftAmountGt;
            if (_leftAmountLt.Name != null) yield return _leftAmountLt;
            if (_leftAmountGte.Name != null) yield return _leftAmountGte;
            if (_leftAmountLte.Name != null) yield return _leftAmountLte;
            if (_leftAmountIn.Name != null) yield return _leftAmountIn;
            if (_leftAmountNotIn.Name != null) yield return _leftAmountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TotalInvestedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _poolAmount;
        private InputPropertyInfo _poolAmountNot;
        private InputPropertyInfo _poolAmountGt;
        private InputPropertyInfo _poolAmountLt;
        private InputPropertyInfo _poolAmountGte;
        private InputPropertyInfo _poolAmountLte;
        private InputPropertyInfo _poolAmountIn;
        private InputPropertyInfo _poolAmountNotIn;
        private InputPropertyInfo _totalInvested;
        private InputPropertyInfo _totalInvestedNot;
        private InputPropertyInfo _totalInvestedGt;
        private InputPropertyInfo _totalInvestedLt;
        private InputPropertyInfo _totalInvestedGte;
        private InputPropertyInfo _totalInvestedLte;
        private InputPropertyInfo _totalInvestedIn;
        private InputPropertyInfo _totalInvestedNotIn;
        private InputPropertyInfo _leftAmount;
        private InputPropertyInfo _leftAmountNot;
        private InputPropertyInfo _leftAmountGt;
        private InputPropertyInfo _leftAmountLt;
        private InputPropertyInfo _leftAmountGte;
        private InputPropertyInfo _leftAmountLte;
        private InputPropertyInfo _leftAmountIn;
        private InputPropertyInfo _leftAmountNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmount.Value; }
            set { _poolAmount = new InputPropertyInfo { Name = "poolAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountNot.Value; }
            set { _poolAmountNot = new InputPropertyInfo { Name = "poolAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountGt.Value; }
            set { _poolAmountGt = new InputPropertyInfo { Name = "poolAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountLt.Value; }
            set { _poolAmountLt = new InputPropertyInfo { Name = "poolAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountGte.Value; }
            set { _poolAmountGte = new InputPropertyInfo { Name = "poolAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolAmountLte.Value; }
            set { _poolAmountLte = new InputPropertyInfo { Name = "poolAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolAmountIn.Value; }
            set { _poolAmountIn = new InputPropertyInfo { Name = "poolAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolAmountNotIn.Value; }
            set { _poolAmountNotIn = new InputPropertyInfo { Name = "poolAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalInvested
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalInvested.Value; }
            set { _totalInvested = new InputPropertyInfo { Name = "totalInvested", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalInvestedNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalInvestedNot.Value; }
            set { _totalInvestedNot = new InputPropertyInfo { Name = "totalInvested_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalInvestedGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalInvestedGt.Value; }
            set { _totalInvestedGt = new InputPropertyInfo { Name = "totalInvested_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalInvestedLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalInvestedLt.Value; }
            set { _totalInvestedLt = new InputPropertyInfo { Name = "totalInvested_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalInvestedGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalInvestedGte.Value; }
            set { _totalInvestedGte = new InputPropertyInfo { Name = "totalInvested_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalInvestedLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalInvestedLte.Value; }
            set { _totalInvestedLte = new InputPropertyInfo { Name = "totalInvested_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalInvestedIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalInvestedIn.Value; }
            set { _totalInvestedIn = new InputPropertyInfo { Name = "totalInvested_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalInvested_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalInvestedNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalInvestedNotIn.Value; }
            set { _totalInvestedNotIn = new InputPropertyInfo { Name = "totalInvested_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmount.Value; }
            set { _leftAmount = new InputPropertyInfo { Name = "leftAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountNot.Value; }
            set { _leftAmountNot = new InputPropertyInfo { Name = "leftAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGt.Value; }
            set { _leftAmountGt = new InputPropertyInfo { Name = "leftAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLt.Value; }
            set { _leftAmountLt = new InputPropertyInfo { Name = "leftAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountGte.Value; }
            set { _leftAmountGte = new InputPropertyInfo { Name = "leftAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> LeftAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_leftAmountLte.Value; }
            set { _leftAmountLte = new InputPropertyInfo { Name = "leftAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountIn.Value; }
            set { _leftAmountIn = new InputPropertyInfo { Name = "leftAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("leftAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> LeftAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_leftAmountNotIn.Value; }
            set { _leftAmountNotIn = new InputPropertyInfo { Name = "leftAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TotalInvestedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TotalInvestedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TotalInvestedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TotalInvestedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TotalInvestedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TotalInvestedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_poolAmount.Name != null) yield return _poolAmount;
            if (_poolAmountNot.Name != null) yield return _poolAmountNot;
            if (_poolAmountGt.Name != null) yield return _poolAmountGt;
            if (_poolAmountLt.Name != null) yield return _poolAmountLt;
            if (_poolAmountGte.Name != null) yield return _poolAmountGte;
            if (_poolAmountLte.Name != null) yield return _poolAmountLte;
            if (_poolAmountIn.Name != null) yield return _poolAmountIn;
            if (_poolAmountNotIn.Name != null) yield return _poolAmountNotIn;
            if (_totalInvested.Name != null) yield return _totalInvested;
            if (_totalInvestedNot.Name != null) yield return _totalInvestedNot;
            if (_totalInvestedGt.Name != null) yield return _totalInvestedGt;
            if (_totalInvestedLt.Name != null) yield return _totalInvestedLt;
            if (_totalInvestedGte.Name != null) yield return _totalInvestedGte;
            if (_totalInvestedLte.Name != null) yield return _totalInvestedLte;
            if (_totalInvestedIn.Name != null) yield return _totalInvestedIn;
            if (_totalInvestedNotIn.Name != null) yield return _totalInvestedNotIn;
            if (_leftAmount.Name != null) yield return _leftAmount;
            if (_leftAmountNot.Name != null) yield return _leftAmountNot;
            if (_leftAmountGt.Name != null) yield return _leftAmountGt;
            if (_leftAmountLt.Name != null) yield return _leftAmountLt;
            if (_leftAmountGte.Name != null) yield return _leftAmountGte;
            if (_leftAmountLte.Name != null) yield return _leftAmountLte;
            if (_leftAmountIn.Name != null) yield return _leftAmountIn;
            if (_leftAmountNotIn.Name != null) yield return _leftAmountNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TotalUnlocksAmountFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _totalUnlocksAmount;
        private InputPropertyInfo _totalUnlocksAmountNot;
        private InputPropertyInfo _totalUnlocksAmountGt;
        private InputPropertyInfo _totalUnlocksAmountLt;
        private InputPropertyInfo _totalUnlocksAmountGte;
        private InputPropertyInfo _totalUnlocksAmountLte;
        private InputPropertyInfo _totalUnlocksAmountIn;
        private InputPropertyInfo _totalUnlocksAmountNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalUnlocksAmount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalUnlocksAmount.Value; }
            set { _totalUnlocksAmount = new InputPropertyInfo { Name = "totalUnlocksAmount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalUnlocksAmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalUnlocksAmountNot.Value; }
            set { _totalUnlocksAmountNot = new InputPropertyInfo { Name = "totalUnlocksAmount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalUnlocksAmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalUnlocksAmountGt.Value; }
            set { _totalUnlocksAmountGt = new InputPropertyInfo { Name = "totalUnlocksAmount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalUnlocksAmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalUnlocksAmountLt.Value; }
            set { _totalUnlocksAmountLt = new InputPropertyInfo { Name = "totalUnlocksAmount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalUnlocksAmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalUnlocksAmountGte.Value; }
            set { _totalUnlocksAmountGte = new InputPropertyInfo { Name = "totalUnlocksAmount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TotalUnlocksAmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_totalUnlocksAmountLte.Value; }
            set { _totalUnlocksAmountLte = new InputPropertyInfo { Name = "totalUnlocksAmount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalUnlocksAmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalUnlocksAmountIn.Value; }
            set { _totalUnlocksAmountIn = new InputPropertyInfo { Name = "totalUnlocksAmount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("totalUnlocksAmount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TotalUnlocksAmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_totalUnlocksAmountNotIn.Value; }
            set { _totalUnlocksAmountNotIn = new InputPropertyInfo { Name = "totalUnlocksAmount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TotalUnlocksAmountFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TotalUnlocksAmountFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TotalUnlocksAmountFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TotalUnlocksAmountFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TotalUnlocksAmountFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TotalUnlocksAmountFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_totalUnlocksAmount.Name != null) yield return _totalUnlocksAmount;
            if (_totalUnlocksAmountNot.Name != null) yield return _totalUnlocksAmountNot;
            if (_totalUnlocksAmountGt.Name != null) yield return _totalUnlocksAmountGt;
            if (_totalUnlocksAmountLt.Name != null) yield return _totalUnlocksAmountLt;
            if (_totalUnlocksAmountGte.Name != null) yield return _totalUnlocksAmountGte;
            if (_totalUnlocksAmountLte.Name != null) yield return _totalUnlocksAmountLte;
            if (_totalUnlocksAmountIn.Name != null) yield return _totalUnlocksAmountIn;
            if (_totalUnlocksAmountNotIn.Name != null) yield return _totalUnlocksAmountNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TotalUserInvestedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _user;
        private InputPropertyInfo _userNot;
        private InputPropertyInfo _userGt;
        private InputPropertyInfo _userLt;
        private InputPropertyInfo _userGte;
        private InputPropertyInfo _userLte;
        private InputPropertyInfo _userIn;
        private InputPropertyInfo _userNotIn;
        private InputPropertyInfo _userContains;
        private InputPropertyInfo _userNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> User
        {
            get { return (QueryBuilderParameter<string>)_user.Value; }
            set { _user = new InputPropertyInfo { Name = "user", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNot
        {
            get { return (QueryBuilderParameter<string>)_userNot.Value; }
            set { _userNot = new InputPropertyInfo { Name = "user_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGt
        {
            get { return (QueryBuilderParameter<string>)_userGt.Value; }
            set { _userGt = new InputPropertyInfo { Name = "user_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLt
        {
            get { return (QueryBuilderParameter<string>)_userLt.Value; }
            set { _userLt = new InputPropertyInfo { Name = "user_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserGte
        {
            get { return (QueryBuilderParameter<string>)_userGte.Value; }
            set { _userGte = new InputPropertyInfo { Name = "user_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserLte
        {
            get { return (QueryBuilderParameter<string>)_userLte.Value; }
            set { _userLte = new InputPropertyInfo { Name = "user_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userIn.Value; }
            set { _userIn = new InputPropertyInfo { Name = "user_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> UserNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_userNotIn.Value; }
            set { _userNotIn = new InputPropertyInfo { Name = "user_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserContains
        {
            get { return (QueryBuilderParameter<string>)_userContains.Value; }
            set { _userContains = new InputPropertyInfo { Name = "user_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("user_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> UserNotContains
        {
            get { return (QueryBuilderParameter<string>)_userNotContains.Value; }
            set { _userNotContains = new InputPropertyInfo { Name = "user_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TotalUserInvestedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TotalUserInvestedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TotalUserInvestedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TotalUserInvestedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TotalUserInvestedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TotalUserInvestedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_user.Name != null) yield return _user;
            if (_userNot.Name != null) yield return _userNot;
            if (_userGt.Name != null) yield return _userGt;
            if (_userLt.Name != null) yield return _userLt;
            if (_userGte.Name != null) yield return _userGte;
            if (_userLte.Name != null) yield return _userLte;
            if (_userIn.Name != null) yield return _userIn;
            if (_userNotIn.Name != null) yield return _userNotIn;
            if (_userContains.Name != null) yield return _userContains;
            if (_userNotContains.Name != null) yield return _userNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class TransferFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _from;
        private InputPropertyInfo _fromNot;
        private InputPropertyInfo _fromGt;
        private InputPropertyInfo _fromLt;
        private InputPropertyInfo _fromGte;
        private InputPropertyInfo _fromLte;
        private InputPropertyInfo _fromIn;
        private InputPropertyInfo _fromNotIn;
        private InputPropertyInfo _fromContains;
        private InputPropertyInfo _fromNotContains;
        private InputPropertyInfo _to;
        private InputPropertyInfo _toNot;
        private InputPropertyInfo _toGt;
        private InputPropertyInfo _toLt;
        private InputPropertyInfo _toGte;
        private InputPropertyInfo _toLte;
        private InputPropertyInfo _toIn;
        private InputPropertyInfo _toNotIn;
        private InputPropertyInfo _toContains;
        private InputPropertyInfo _toNotContains;
        private InputPropertyInfo _tokenId;
        private InputPropertyInfo _tokenIdNot;
        private InputPropertyInfo _tokenIdGt;
        private InputPropertyInfo _tokenIdLt;
        private InputPropertyInfo _tokenIdGte;
        private InputPropertyInfo _tokenIdLte;
        private InputPropertyInfo _tokenIdIn;
        private InputPropertyInfo _tokenIdNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> From
        {
            get { return (QueryBuilderParameter<string>)_from.Value; }
            set { _from = new InputPropertyInfo { Name = "from", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromNot
        {
            get { return (QueryBuilderParameter<string>)_fromNot.Value; }
            set { _fromNot = new InputPropertyInfo { Name = "from_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromGt
        {
            get { return (QueryBuilderParameter<string>)_fromGt.Value; }
            set { _fromGt = new InputPropertyInfo { Name = "from_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromLt
        {
            get { return (QueryBuilderParameter<string>)_fromLt.Value; }
            set { _fromLt = new InputPropertyInfo { Name = "from_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromGte
        {
            get { return (QueryBuilderParameter<string>)_fromGte.Value; }
            set { _fromGte = new InputPropertyInfo { Name = "from_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromLte
        {
            get { return (QueryBuilderParameter<string>)_fromLte.Value; }
            set { _fromLte = new InputPropertyInfo { Name = "from_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> FromIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_fromIn.Value; }
            set { _fromIn = new InputPropertyInfo { Name = "from_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> FromNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_fromNotIn.Value; }
            set { _fromNotIn = new InputPropertyInfo { Name = "from_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromContains
        {
            get { return (QueryBuilderParameter<string>)_fromContains.Value; }
            set { _fromContains = new InputPropertyInfo { Name = "from_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("from_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> FromNotContains
        {
            get { return (QueryBuilderParameter<string>)_fromNotContains.Value; }
            set { _fromNotContains = new InputPropertyInfo { Name = "from_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> To
        {
            get { return (QueryBuilderParameter<string>)_to.Value; }
            set { _to = new InputPropertyInfo { Name = "to", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToNot
        {
            get { return (QueryBuilderParameter<string>)_toNot.Value; }
            set { _toNot = new InputPropertyInfo { Name = "to_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToGt
        {
            get { return (QueryBuilderParameter<string>)_toGt.Value; }
            set { _toGt = new InputPropertyInfo { Name = "to_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToLt
        {
            get { return (QueryBuilderParameter<string>)_toLt.Value; }
            set { _toLt = new InputPropertyInfo { Name = "to_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToGte
        {
            get { return (QueryBuilderParameter<string>)_toGte.Value; }
            set { _toGte = new InputPropertyInfo { Name = "to_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToLte
        {
            get { return (QueryBuilderParameter<string>)_toLte.Value; }
            set { _toLte = new InputPropertyInfo { Name = "to_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ToIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_toIn.Value; }
            set { _toIn = new InputPropertyInfo { Name = "to_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ToNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_toNotIn.Value; }
            set { _toNotIn = new InputPropertyInfo { Name = "to_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToContains
        {
            get { return (QueryBuilderParameter<string>)_toContains.Value; }
            set { _toContains = new InputPropertyInfo { Name = "to_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToNotContains
        {
            get { return (QueryBuilderParameter<string>)_toNotContains.Value; }
            set { _toNotContains = new InputPropertyInfo { Name = "to_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenId.Value; }
            set { _tokenId = new InputPropertyInfo { Name = "tokenId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdNot.Value; }
            set { _tokenIdNot = new InputPropertyInfo { Name = "tokenId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdGt.Value; }
            set { _tokenIdGt = new InputPropertyInfo { Name = "tokenId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdLt.Value; }
            set { _tokenIdLt = new InputPropertyInfo { Name = "tokenId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdGte.Value; }
            set { _tokenIdGte = new InputPropertyInfo { Name = "tokenId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> TokenIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_tokenIdLte.Value; }
            set { _tokenIdLte = new InputPropertyInfo { Name = "tokenId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TokenIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_tokenIdIn.Value; }
            set { _tokenIdIn = new InputPropertyInfo { Name = "tokenId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> TokenIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_tokenIdNotIn.Value; }
            set { _tokenIdNotIn = new InputPropertyInfo { Name = "tokenId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TransferFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TransferFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<TransferFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<TransferFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<TransferFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<TransferFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_from.Name != null) yield return _from;
            if (_fromNot.Name != null) yield return _fromNot;
            if (_fromGt.Name != null) yield return _fromGt;
            if (_fromLt.Name != null) yield return _fromLt;
            if (_fromGte.Name != null) yield return _fromGte;
            if (_fromLte.Name != null) yield return _fromLte;
            if (_fromIn.Name != null) yield return _fromIn;
            if (_fromNotIn.Name != null) yield return _fromNotIn;
            if (_fromContains.Name != null) yield return _fromContains;
            if (_fromNotContains.Name != null) yield return _fromNotContains;
            if (_to.Name != null) yield return _to;
            if (_toNot.Name != null) yield return _toNot;
            if (_toGt.Name != null) yield return _toGt;
            if (_toLt.Name != null) yield return _toLt;
            if (_toGte.Name != null) yield return _toGte;
            if (_toLte.Name != null) yield return _toLte;
            if (_toIn.Name != null) yield return _toIn;
            if (_toNotIn.Name != null) yield return _toNotIn;
            if (_toContains.Name != null) yield return _toContains;
            if (_toNotContains.Name != null) yield return _toNotContains;
            if (_tokenId.Name != null) yield return _tokenId;
            if (_tokenIdNot.Name != null) yield return _tokenIdNot;
            if (_tokenIdGt.Name != null) yield return _tokenIdGt;
            if (_tokenIdLt.Name != null) yield return _tokenIdLt;
            if (_tokenIdGte.Name != null) yield return _tokenIdGte;
            if (_tokenIdLte.Name != null) yield return _tokenIdLte;
            if (_tokenIdIn.Name != null) yield return _tokenIdIn;
            if (_tokenIdNotIn.Name != null) yield return _tokenIdNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class UpdateParamsFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _poolId;
        private InputPropertyInfo _poolIdNot;
        private InputPropertyInfo _poolIdGt;
        private InputPropertyInfo _poolIdLt;
        private InputPropertyInfo _poolIdGte;
        private InputPropertyInfo _poolIdLte;
        private InputPropertyInfo _poolIdIn;
        private InputPropertyInfo _poolIdNotIn;
        private InputPropertyInfo _params;
        private InputPropertyInfo _paramsNot;
        private InputPropertyInfo _paramsContains;
        private InputPropertyInfo _paramsContainsNocase;
        private InputPropertyInfo _paramsNotContains;
        private InputPropertyInfo _paramsNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolId.Value; }
            set { _poolId = new InputPropertyInfo { Name = "poolId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdNot.Value; }
            set { _poolIdNot = new InputPropertyInfo { Name = "poolId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGt.Value; }
            set { _poolIdGt = new InputPropertyInfo { Name = "poolId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLt.Value; }
            set { _poolIdLt = new InputPropertyInfo { Name = "poolId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdGte.Value; }
            set { _poolIdGte = new InputPropertyInfo { Name = "poolId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> PoolIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_poolIdLte.Value; }
            set { _poolIdLte = new InputPropertyInfo { Name = "poolId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdIn.Value; }
            set { _poolIdIn = new InputPropertyInfo { Name = "poolId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> PoolIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_poolIdNotIn.Value; }
            set { _poolIdNotIn = new InputPropertyInfo { Name = "poolId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Params
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_params.Value; }
            set { _params = new InputPropertyInfo { Name = "params", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNot.Value; }
            set { _paramsNot = new InputPropertyInfo { Name = "params_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContains.Value; }
            set { _paramsContains = new InputPropertyInfo { Name = "params_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsContainsNocase.Value; }
            set { _paramsContainsNocase = new InputPropertyInfo { Name = "params_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContains.Value; }
            set { _paramsNotContains = new InputPropertyInfo { Name = "params_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("params_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> ParamsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_paramsNotContainsNocase.Value; }
            set { _paramsNotContainsNocase = new InputPropertyInfo { Name = "params_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<UpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<UpdateParamsFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<UpdateParamsFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<UpdateParamsFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<UpdateParamsFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<UpdateParamsFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_poolId.Name != null) yield return _poolId;
            if (_poolIdNot.Name != null) yield return _poolIdNot;
            if (_poolIdGt.Name != null) yield return _poolIdGt;
            if (_poolIdLt.Name != null) yield return _poolIdLt;
            if (_poolIdGte.Name != null) yield return _poolIdGte;
            if (_poolIdLte.Name != null) yield return _poolIdLte;
            if (_poolIdIn.Name != null) yield return _poolIdIn;
            if (_poolIdNotIn.Name != null) yield return _poolIdNotIn;
            if (_params.Name != null) yield return _params;
            if (_paramsNot.Name != null) yield return _paramsNot;
            if (_paramsContains.Name != null) yield return _paramsContains;
            if (_paramsContainsNocase.Name != null) yield return _paramsContainsNocase;
            if (_paramsNotContains.Name != null) yield return _paramsNotContains;
            if (_paramsNotContainsNocase.Name != null) yield return _paramsNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class UpdatedMaxDelayFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _oldDelay;
        private InputPropertyInfo _oldDelayNot;
        private InputPropertyInfo _oldDelayGt;
        private InputPropertyInfo _oldDelayLt;
        private InputPropertyInfo _oldDelayGte;
        private InputPropertyInfo _oldDelayLte;
        private InputPropertyInfo _oldDelayIn;
        private InputPropertyInfo _oldDelayNotIn;
        private InputPropertyInfo _newDelay;
        private InputPropertyInfo _newDelayNot;
        private InputPropertyInfo _newDelayGt;
        private InputPropertyInfo _newDelayLt;
        private InputPropertyInfo _newDelayGte;
        private InputPropertyInfo _newDelayLte;
        private InputPropertyInfo _newDelayIn;
        private InputPropertyInfo _newDelayNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> OldDelay
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_oldDelay.Value; }
            set { _oldDelay = new InputPropertyInfo { Name = "OldDelay", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> OldDelayNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_oldDelayNot.Value; }
            set { _oldDelayNot = new InputPropertyInfo { Name = "OldDelay_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> OldDelayGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_oldDelayGt.Value; }
            set { _oldDelayGt = new InputPropertyInfo { Name = "OldDelay_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> OldDelayLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_oldDelayLt.Value; }
            set { _oldDelayLt = new InputPropertyInfo { Name = "OldDelay_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> OldDelayGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_oldDelayGte.Value; }
            set { _oldDelayGte = new InputPropertyInfo { Name = "OldDelay_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> OldDelayLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_oldDelayLte.Value; }
            set { _oldDelayLte = new InputPropertyInfo { Name = "OldDelay_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> OldDelayIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_oldDelayIn.Value; }
            set { _oldDelayIn = new InputPropertyInfo { Name = "OldDelay_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("OldDelay_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> OldDelayNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_oldDelayNotIn.Value; }
            set { _oldDelayNotIn = new InputPropertyInfo { Name = "OldDelay_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewDelay
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newDelay.Value; }
            set { _newDelay = new InputPropertyInfo { Name = "NewDelay", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewDelayNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newDelayNot.Value; }
            set { _newDelayNot = new InputPropertyInfo { Name = "NewDelay_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewDelayGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newDelayGt.Value; }
            set { _newDelayGt = new InputPropertyInfo { Name = "NewDelay_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewDelayLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newDelayLt.Value; }
            set { _newDelayLt = new InputPropertyInfo { Name = "NewDelay_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewDelayGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newDelayGte.Value; }
            set { _newDelayGte = new InputPropertyInfo { Name = "NewDelay_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> NewDelayLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_newDelayLte.Value; }
            set { _newDelayLte = new InputPropertyInfo { Name = "NewDelay_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewDelayIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newDelayIn.Value; }
            set { _newDelayIn = new InputPropertyInfo { Name = "NewDelay_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("NewDelay_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> NewDelayNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_newDelayNotIn.Value; }
            set { _newDelayNotIn = new InputPropertyInfo { Name = "NewDelay_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<UpdatedMaxDelayFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<UpdatedMaxDelayFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<UpdatedMaxDelayFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<UpdatedMaxDelayFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<UpdatedMaxDelayFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<UpdatedMaxDelayFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_oldDelay.Name != null) yield return _oldDelay;
            if (_oldDelayNot.Name != null) yield return _oldDelayNot;
            if (_oldDelayGt.Name != null) yield return _oldDelayGt;
            if (_oldDelayLt.Name != null) yield return _oldDelayLt;
            if (_oldDelayGte.Name != null) yield return _oldDelayGte;
            if (_oldDelayLte.Name != null) yield return _oldDelayLte;
            if (_oldDelayIn.Name != null) yield return _oldDelayIn;
            if (_oldDelayNotIn.Name != null) yield return _oldDelayNotIn;
            if (_newDelay.Name != null) yield return _newDelay;
            if (_newDelayNot.Name != null) yield return _newDelayNot;
            if (_newDelayGt.Name != null) yield return _newDelayGt;
            if (_newDelayLt.Name != null) yield return _newDelayLt;
            if (_newDelayGte.Name != null) yield return _newDelayGte;
            if (_newDelayLte.Name != null) yield return _newDelayLte;
            if (_newDelayIn.Name != null) yield return _newDelayIn;
            if (_newDelayNotIn.Name != null) yield return _newDelayNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class UpdatedMinDelaysFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _amounts;
        private InputPropertyInfo _amountsNot;
        private InputPropertyInfo _amountsContains;
        private InputPropertyInfo _amountsContainsNocase;
        private InputPropertyInfo _amountsNotContains;
        private InputPropertyInfo _amountsNotContainsNocase;
        private InputPropertyInfo _startDelays;
        private InputPropertyInfo _startDelaysNot;
        private InputPropertyInfo _startDelaysContains;
        private InputPropertyInfo _startDelaysContainsNocase;
        private InputPropertyInfo _startDelaysNotContains;
        private InputPropertyInfo _startDelaysNotContainsNocase;
        private InputPropertyInfo _cliffDelays;
        private InputPropertyInfo _cliffDelaysNot;
        private InputPropertyInfo _cliffDelaysContains;
        private InputPropertyInfo _cliffDelaysContainsNocase;
        private InputPropertyInfo _cliffDelaysNotContains;
        private InputPropertyInfo _cliffDelaysNotContainsNocase;
        private InputPropertyInfo _finishDelays;
        private InputPropertyInfo _finishDelaysNot;
        private InputPropertyInfo _finishDelaysContains;
        private InputPropertyInfo _finishDelaysContainsNocase;
        private InputPropertyInfo _finishDelaysNotContains;
        private InputPropertyInfo _finishDelaysNotContainsNocase;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> Amounts
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amounts.Value; }
            set { _amounts = new InputPropertyInfo { Name = "Amounts", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amounts_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountsNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountsNot.Value; }
            set { _amountsNot = new InputPropertyInfo { Name = "Amounts_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amounts_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountsContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountsContains.Value; }
            set { _amountsContains = new InputPropertyInfo { Name = "Amounts_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amounts_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountsContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountsContainsNocase.Value; }
            set { _amountsContainsNocase = new InputPropertyInfo { Name = "Amounts_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amounts_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountsNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountsNotContains.Value; }
            set { _amountsNotContains = new InputPropertyInfo { Name = "Amounts_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amounts_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountsNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountsNotContainsNocase.Value; }
            set { _amountsNotContainsNocase = new InputPropertyInfo { Name = "Amounts_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelays
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelays.Value; }
            set { _startDelays = new InputPropertyInfo { Name = "StartDelays", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelays_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelaysNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelaysNot.Value; }
            set { _startDelaysNot = new InputPropertyInfo { Name = "StartDelays_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelays_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelaysContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelaysContains.Value; }
            set { _startDelaysContains = new InputPropertyInfo { Name = "StartDelays_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelays_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelaysContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelaysContainsNocase.Value; }
            set { _startDelaysContainsNocase = new InputPropertyInfo { Name = "StartDelays_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelays_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelaysNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelaysNotContains.Value; }
            set { _startDelaysNotContains = new InputPropertyInfo { Name = "StartDelays_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelays_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelaysNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelaysNotContainsNocase.Value; }
            set { _startDelaysNotContainsNocase = new InputPropertyInfo { Name = "StartDelays_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelays
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelays.Value; }
            set { _cliffDelays = new InputPropertyInfo { Name = "CliffDelays", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelays_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelaysNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelaysNot.Value; }
            set { _cliffDelaysNot = new InputPropertyInfo { Name = "CliffDelays_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelays_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelaysContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelaysContains.Value; }
            set { _cliffDelaysContains = new InputPropertyInfo { Name = "CliffDelays_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelays_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelaysContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelaysContainsNocase.Value; }
            set { _cliffDelaysContainsNocase = new InputPropertyInfo { Name = "CliffDelays_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelays_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelaysNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelaysNotContains.Value; }
            set { _cliffDelaysNotContains = new InputPropertyInfo { Name = "CliffDelays_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelays_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelaysNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelaysNotContainsNocase.Value; }
            set { _cliffDelaysNotContainsNocase = new InputPropertyInfo { Name = "CliffDelays_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelays
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelays.Value; }
            set { _finishDelays = new InputPropertyInfo { Name = "FinishDelays", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelays_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelaysNot
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelaysNot.Value; }
            set { _finishDelaysNot = new InputPropertyInfo { Name = "FinishDelays_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelays_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelaysContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelaysContains.Value; }
            set { _finishDelaysContains = new InputPropertyInfo { Name = "FinishDelays_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelays_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelaysContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelaysContainsNocase.Value; }
            set { _finishDelaysContainsNocase = new InputPropertyInfo { Name = "FinishDelays_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelays_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelaysNotContains
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelaysNotContains.Value; }
            set { _finishDelaysNotContains = new InputPropertyInfo { Name = "FinishDelays_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelays_not_contains_nocase")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelaysNotContainsNocase
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelaysNotContainsNocase.Value; }
            set { _finishDelaysNotContainsNocase = new InputPropertyInfo { Name = "FinishDelays_not_contains_nocase", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<UpdatedMinDelaysFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<UpdatedMinDelaysFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<UpdatedMinDelaysFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<UpdatedMinDelaysFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<UpdatedMinDelaysFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<UpdatedMinDelaysFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_amounts.Name != null) yield return _amounts;
            if (_amountsNot.Name != null) yield return _amountsNot;
            if (_amountsContains.Name != null) yield return _amountsContains;
            if (_amountsContainsNocase.Name != null) yield return _amountsContainsNocase;
            if (_amountsNotContains.Name != null) yield return _amountsNotContains;
            if (_amountsNotContainsNocase.Name != null) yield return _amountsNotContainsNocase;
            if (_startDelays.Name != null) yield return _startDelays;
            if (_startDelaysNot.Name != null) yield return _startDelaysNot;
            if (_startDelaysContains.Name != null) yield return _startDelaysContains;
            if (_startDelaysContainsNocase.Name != null) yield return _startDelaysContainsNocase;
            if (_startDelaysNotContains.Name != null) yield return _startDelaysNotContains;
            if (_startDelaysNotContainsNocase.Name != null) yield return _startDelaysNotContainsNocase;
            if (_cliffDelays.Name != null) yield return _cliffDelays;
            if (_cliffDelaysNot.Name != null) yield return _cliffDelaysNot;
            if (_cliffDelaysContains.Name != null) yield return _cliffDelaysContains;
            if (_cliffDelaysContainsNocase.Name != null) yield return _cliffDelaysContainsNocase;
            if (_cliffDelaysNotContains.Name != null) yield return _cliffDelaysNotContains;
            if (_cliffDelaysNotContainsNocase.Name != null) yield return _cliffDelaysNotContainsNocase;
            if (_finishDelays.Name != null) yield return _finishDelays;
            if (_finishDelaysNot.Name != null) yield return _finishDelaysNot;
            if (_finishDelaysContains.Name != null) yield return _finishDelaysContains;
            if (_finishDelaysContainsNocase.Name != null) yield return _finishDelaysContainsNocase;
            if (_finishDelaysNotContains.Name != null) yield return _finishDelaysNotContains;
            if (_finishDelaysNotContainsNocase.Name != null) yield return _finishDelaysNotContainsNocase;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class VaultRoyaltySetFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _tokenAddress;
        private InputPropertyInfo _tokenAddressNot;
        private InputPropertyInfo _tokenAddressGt;
        private InputPropertyInfo _tokenAddressLt;
        private InputPropertyInfo _tokenAddressGte;
        private InputPropertyInfo _tokenAddressLte;
        private InputPropertyInfo _tokenAddressIn;
        private InputPropertyInfo _tokenAddressNotIn;
        private InputPropertyInfo _tokenAddressContains;
        private InputPropertyInfo _tokenAddressNotContains;
        private InputPropertyInfo _receiver;
        private InputPropertyInfo _receiverNot;
        private InputPropertyInfo _receiverGt;
        private InputPropertyInfo _receiverLt;
        private InputPropertyInfo _receiverGte;
        private InputPropertyInfo _receiverLte;
        private InputPropertyInfo _receiverIn;
        private InputPropertyInfo _receiverNotIn;
        private InputPropertyInfo _receiverContains;
        private InputPropertyInfo _receiverNotContains;
        private InputPropertyInfo _feeNumerator;
        private InputPropertyInfo _feeNumeratorNot;
        private InputPropertyInfo _feeNumeratorGt;
        private InputPropertyInfo _feeNumeratorLt;
        private InputPropertyInfo _feeNumeratorGte;
        private InputPropertyInfo _feeNumeratorLte;
        private InputPropertyInfo _feeNumeratorIn;
        private InputPropertyInfo _feeNumeratorNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddress
        {
            get { return (QueryBuilderParameter<string>)_tokenAddress.Value; }
            set { _tokenAddress = new InputPropertyInfo { Name = "tokenAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNot
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNot.Value; }
            set { _tokenAddressNot = new InputPropertyInfo { Name = "tokenAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGt.Value; }
            set { _tokenAddressGt = new InputPropertyInfo { Name = "tokenAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLt.Value; }
            set { _tokenAddressLt = new InputPropertyInfo { Name = "tokenAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGte.Value; }
            set { _tokenAddressGte = new InputPropertyInfo { Name = "tokenAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLte.Value; }
            set { _tokenAddressLte = new InputPropertyInfo { Name = "tokenAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressIn.Value; }
            set { _tokenAddressIn = new InputPropertyInfo { Name = "tokenAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressNotIn.Value; }
            set { _tokenAddressNotIn = new InputPropertyInfo { Name = "tokenAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressContains.Value; }
            set { _tokenAddressContains = new InputPropertyInfo { Name = "tokenAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNotContains.Value; }
            set { _tokenAddressNotContains = new InputPropertyInfo { Name = "tokenAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Receiver
        {
            get { return (QueryBuilderParameter<string>)_receiver.Value; }
            set { _receiver = new InputPropertyInfo { Name = "receiver", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverNot
        {
            get { return (QueryBuilderParameter<string>)_receiverNot.Value; }
            set { _receiverNot = new InputPropertyInfo { Name = "receiver_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverGt
        {
            get { return (QueryBuilderParameter<string>)_receiverGt.Value; }
            set { _receiverGt = new InputPropertyInfo { Name = "receiver_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverLt
        {
            get { return (QueryBuilderParameter<string>)_receiverLt.Value; }
            set { _receiverLt = new InputPropertyInfo { Name = "receiver_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverGte
        {
            get { return (QueryBuilderParameter<string>)_receiverGte.Value; }
            set { _receiverGte = new InputPropertyInfo { Name = "receiver_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverLte
        {
            get { return (QueryBuilderParameter<string>)_receiverLte.Value; }
            set { _receiverLte = new InputPropertyInfo { Name = "receiver_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ReceiverIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_receiverIn.Value; }
            set { _receiverIn = new InputPropertyInfo { Name = "receiver_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ReceiverNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_receiverNotIn.Value; }
            set { _receiverNotIn = new InputPropertyInfo { Name = "receiver_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverContains
        {
            get { return (QueryBuilderParameter<string>)_receiverContains.Value; }
            set { _receiverContains = new InputPropertyInfo { Name = "receiver_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("receiver_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ReceiverNotContains
        {
            get { return (QueryBuilderParameter<string>)_receiverNotContains.Value; }
            set { _receiverNotContains = new InputPropertyInfo { Name = "receiver_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FeeNumerator
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_feeNumerator.Value; }
            set { _feeNumerator = new InputPropertyInfo { Name = "feeNumerator", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FeeNumeratorNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_feeNumeratorNot.Value; }
            set { _feeNumeratorNot = new InputPropertyInfo { Name = "feeNumerator_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FeeNumeratorGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_feeNumeratorGt.Value; }
            set { _feeNumeratorGt = new InputPropertyInfo { Name = "feeNumerator_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FeeNumeratorLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_feeNumeratorLt.Value; }
            set { _feeNumeratorLt = new InputPropertyInfo { Name = "feeNumerator_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FeeNumeratorGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_feeNumeratorGte.Value; }
            set { _feeNumeratorGte = new InputPropertyInfo { Name = "feeNumerator_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FeeNumeratorLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_feeNumeratorLte.Value; }
            set { _feeNumeratorLte = new InputPropertyInfo { Name = "feeNumerator_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FeeNumeratorIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_feeNumeratorIn.Value; }
            set { _feeNumeratorIn = new InputPropertyInfo { Name = "feeNumerator_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("feeNumerator_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FeeNumeratorNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_feeNumeratorNotIn.Value; }
            set { _feeNumeratorNotIn = new InputPropertyInfo { Name = "feeNumerator_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultRoyaltySetFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultRoyaltySetFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<VaultRoyaltySetFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultRoyaltySetFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultRoyaltySetFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<VaultRoyaltySetFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_tokenAddress.Name != null) yield return _tokenAddress;
            if (_tokenAddressNot.Name != null) yield return _tokenAddressNot;
            if (_tokenAddressGt.Name != null) yield return _tokenAddressGt;
            if (_tokenAddressLt.Name != null) yield return _tokenAddressLt;
            if (_tokenAddressGte.Name != null) yield return _tokenAddressGte;
            if (_tokenAddressLte.Name != null) yield return _tokenAddressLte;
            if (_tokenAddressIn.Name != null) yield return _tokenAddressIn;
            if (_tokenAddressNotIn.Name != null) yield return _tokenAddressNotIn;
            if (_tokenAddressContains.Name != null) yield return _tokenAddressContains;
            if (_tokenAddressNotContains.Name != null) yield return _tokenAddressNotContains;
            if (_receiver.Name != null) yield return _receiver;
            if (_receiverNot.Name != null) yield return _receiverNot;
            if (_receiverGt.Name != null) yield return _receiverGt;
            if (_receiverLt.Name != null) yield return _receiverLt;
            if (_receiverGte.Name != null) yield return _receiverGte;
            if (_receiverLte.Name != null) yield return _receiverLte;
            if (_receiverIn.Name != null) yield return _receiverIn;
            if (_receiverNotIn.Name != null) yield return _receiverNotIn;
            if (_receiverContains.Name != null) yield return _receiverContains;
            if (_receiverNotContains.Name != null) yield return _receiverNotContains;
            if (_feeNumerator.Name != null) yield return _feeNumerator;
            if (_feeNumeratorNot.Name != null) yield return _feeNumeratorNot;
            if (_feeNumeratorGt.Name != null) yield return _feeNumeratorGt;
            if (_feeNumeratorLt.Name != null) yield return _feeNumeratorLt;
            if (_feeNumeratorGte.Name != null) yield return _feeNumeratorGte;
            if (_feeNumeratorLte.Name != null) yield return _feeNumeratorLte;
            if (_feeNumeratorIn.Name != null) yield return _feeNumeratorIn;
            if (_feeNumeratorNotIn.Name != null) yield return _feeNumeratorNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class VaultStatusUpdateFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _depositStatus;
        private InputPropertyInfo _depositStatusNot;
        private InputPropertyInfo _depositStatusIn;
        private InputPropertyInfo _depositStatusNotIn;
        private InputPropertyInfo _withdrawStatus;
        private InputPropertyInfo _withdrawStatusNot;
        private InputPropertyInfo _withdrawStatusIn;
        private InputPropertyInfo _withdrawStatusNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> DepositStatus
        {
            get { return (QueryBuilderParameter<bool?>)_depositStatus.Value; }
            set { _depositStatus = new InputPropertyInfo { Name = "depositStatus", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("depositStatus_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> DepositStatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_depositStatusNot.Value; }
            set { _depositStatusNot = new InputPropertyInfo { Name = "depositStatus_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("depositStatus_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> DepositStatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_depositStatusIn.Value; }
            set { _depositStatusIn = new InputPropertyInfo { Name = "depositStatus_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("depositStatus_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> DepositStatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_depositStatusNotIn.Value; }
            set { _depositStatusNotIn = new InputPropertyInfo { Name = "depositStatus_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> WithdrawStatus
        {
            get { return (QueryBuilderParameter<bool?>)_withdrawStatus.Value; }
            set { _withdrawStatus = new InputPropertyInfo { Name = "withdrawStatus", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawStatus_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> WithdrawStatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_withdrawStatusNot.Value; }
            set { _withdrawStatusNot = new InputPropertyInfo { Name = "withdrawStatus_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawStatus_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> WithdrawStatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_withdrawStatusIn.Value; }
            set { _withdrawStatusIn = new InputPropertyInfo { Name = "withdrawStatus_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawStatus_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> WithdrawStatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_withdrawStatusNotIn.Value; }
            set { _withdrawStatusNotIn = new InputPropertyInfo { Name = "withdrawStatus_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultStatusUpdateFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultStatusUpdateFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<VaultStatusUpdateFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultStatusUpdateFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultStatusUpdateFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<VaultStatusUpdateFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_depositStatus.Name != null) yield return _depositStatus;
            if (_depositStatusNot.Name != null) yield return _depositStatusNot;
            if (_depositStatusIn.Name != null) yield return _depositStatusIn;
            if (_depositStatusNotIn.Name != null) yield return _depositStatusNotIn;
            if (_withdrawStatus.Name != null) yield return _withdrawStatus;
            if (_withdrawStatusNot.Name != null) yield return _withdrawStatusNot;
            if (_withdrawStatusIn.Name != null) yield return _withdrawStatusIn;
            if (_withdrawStatusNotIn.Name != null) yield return _withdrawStatusNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class VaultValueChangedFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _owner;
        private InputPropertyInfo _ownerNot;
        private InputPropertyInfo _ownerGt;
        private InputPropertyInfo _ownerLt;
        private InputPropertyInfo _ownerGte;
        private InputPropertyInfo _ownerLte;
        private InputPropertyInfo _ownerIn;
        private InputPropertyInfo _ownerNotIn;
        private InputPropertyInfo _ownerContains;
        private InputPropertyInfo _ownerNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _startDelay;
        private InputPropertyInfo _startDelayNot;
        private InputPropertyInfo _startDelayGt;
        private InputPropertyInfo _startDelayLt;
        private InputPropertyInfo _startDelayGte;
        private InputPropertyInfo _startDelayLte;
        private InputPropertyInfo _startDelayIn;
        private InputPropertyInfo _startDelayNotIn;
        private InputPropertyInfo _cliffDelay;
        private InputPropertyInfo _cliffDelayNot;
        private InputPropertyInfo _cliffDelayGt;
        private InputPropertyInfo _cliffDelayLt;
        private InputPropertyInfo _cliffDelayGte;
        private InputPropertyInfo _cliffDelayLte;
        private InputPropertyInfo _cliffDelayIn;
        private InputPropertyInfo _cliffDelayNotIn;
        private InputPropertyInfo _finishDelay;
        private InputPropertyInfo _finishDelayNot;
        private InputPropertyInfo _finishDelayGt;
        private InputPropertyInfo _finishDelayLt;
        private InputPropertyInfo _finishDelayGte;
        private InputPropertyInfo _finishDelayLte;
        private InputPropertyInfo _finishDelayIn;
        private InputPropertyInfo _finishDelayNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "Token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "Token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "Token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "Token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "Token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "Token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "Token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "Token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "Token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "Token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Owner
        {
            get { return (QueryBuilderParameter<string>)_owner.Value; }
            set { _owner = new InputPropertyInfo { Name = "Owner", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNot
        {
            get { return (QueryBuilderParameter<string>)_ownerNot.Value; }
            set { _ownerNot = new InputPropertyInfo { Name = "Owner_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGt
        {
            get { return (QueryBuilderParameter<string>)_ownerGt.Value; }
            set { _ownerGt = new InputPropertyInfo { Name = "Owner_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLt
        {
            get { return (QueryBuilderParameter<string>)_ownerLt.Value; }
            set { _ownerLt = new InputPropertyInfo { Name = "Owner_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerGte
        {
            get { return (QueryBuilderParameter<string>)_ownerGte.Value; }
            set { _ownerGte = new InputPropertyInfo { Name = "Owner_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerLte
        {
            get { return (QueryBuilderParameter<string>)_ownerLte.Value; }
            set { _ownerLte = new InputPropertyInfo { Name = "Owner_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerIn.Value; }
            set { _ownerIn = new InputPropertyInfo { Name = "Owner_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> OwnerNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_ownerNotIn.Value; }
            set { _ownerNotIn = new InputPropertyInfo { Name = "Owner_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerContains
        {
            get { return (QueryBuilderParameter<string>)_ownerContains.Value; }
            set { _ownerContains = new InputPropertyInfo { Name = "Owner_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Owner_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> OwnerNotContains
        {
            get { return (QueryBuilderParameter<string>)_ownerNotContains.Value; }
            set { _ownerNotContains = new InputPropertyInfo { Name = "Owner_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "Amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "Amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "Amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "Amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "Amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "Amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "Amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("Amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "Amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartDelay
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startDelay.Value; }
            set { _startDelay = new InputPropertyInfo { Name = "StartDelay", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartDelayNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startDelayNot.Value; }
            set { _startDelayNot = new InputPropertyInfo { Name = "StartDelay_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartDelayGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startDelayGt.Value; }
            set { _startDelayGt = new InputPropertyInfo { Name = "StartDelay_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartDelayLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startDelayLt.Value; }
            set { _startDelayLt = new InputPropertyInfo { Name = "StartDelay_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartDelayGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startDelayGte.Value; }
            set { _startDelayGte = new InputPropertyInfo { Name = "StartDelay_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> StartDelayLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_startDelayLte.Value; }
            set { _startDelayLte = new InputPropertyInfo { Name = "StartDelay_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelayIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelayIn.Value; }
            set { _startDelayIn = new InputPropertyInfo { Name = "StartDelay_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("StartDelay_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> StartDelayNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_startDelayNotIn.Value; }
            set { _startDelayNotIn = new InputPropertyInfo { Name = "StartDelay_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CliffDelay
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_cliffDelay.Value; }
            set { _cliffDelay = new InputPropertyInfo { Name = "CliffDelay", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CliffDelayNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_cliffDelayNot.Value; }
            set { _cliffDelayNot = new InputPropertyInfo { Name = "CliffDelay_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CliffDelayGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_cliffDelayGt.Value; }
            set { _cliffDelayGt = new InputPropertyInfo { Name = "CliffDelay_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CliffDelayLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_cliffDelayLt.Value; }
            set { _cliffDelayLt = new InputPropertyInfo { Name = "CliffDelay_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CliffDelayGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_cliffDelayGte.Value; }
            set { _cliffDelayGte = new InputPropertyInfo { Name = "CliffDelay_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> CliffDelayLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_cliffDelayLte.Value; }
            set { _cliffDelayLte = new InputPropertyInfo { Name = "CliffDelay_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelayIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelayIn.Value; }
            set { _cliffDelayIn = new InputPropertyInfo { Name = "CliffDelay_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("CliffDelay_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> CliffDelayNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_cliffDelayNotIn.Value; }
            set { _cliffDelayNotIn = new InputPropertyInfo { Name = "CliffDelay_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishDelay
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishDelay.Value; }
            set { _finishDelay = new InputPropertyInfo { Name = "FinishDelay", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishDelayNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishDelayNot.Value; }
            set { _finishDelayNot = new InputPropertyInfo { Name = "FinishDelay_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishDelayGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishDelayGt.Value; }
            set { _finishDelayGt = new InputPropertyInfo { Name = "FinishDelay_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishDelayLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishDelayLt.Value; }
            set { _finishDelayLt = new InputPropertyInfo { Name = "FinishDelay_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishDelayGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishDelayGte.Value; }
            set { _finishDelayGte = new InputPropertyInfo { Name = "FinishDelay_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> FinishDelayLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_finishDelayLte.Value; }
            set { _finishDelayLte = new InputPropertyInfo { Name = "FinishDelay_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelayIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelayIn.Value; }
            set { _finishDelayIn = new InputPropertyInfo { Name = "FinishDelay_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("FinishDelay_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> FinishDelayNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_finishDelayNotIn.Value; }
            set { _finishDelayNotIn = new InputPropertyInfo { Name = "FinishDelay_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultValueChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultValueChangedFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<VaultValueChangedFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultValueChangedFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultValueChangedFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<VaultValueChangedFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_owner.Name != null) yield return _owner;
            if (_ownerNot.Name != null) yield return _ownerNot;
            if (_ownerGt.Name != null) yield return _ownerGt;
            if (_ownerLt.Name != null) yield return _ownerLt;
            if (_ownerGte.Name != null) yield return _ownerGte;
            if (_ownerLte.Name != null) yield return _ownerLte;
            if (_ownerIn.Name != null) yield return _ownerIn;
            if (_ownerNotIn.Name != null) yield return _ownerNotIn;
            if (_ownerContains.Name != null) yield return _ownerContains;
            if (_ownerNotContains.Name != null) yield return _ownerNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_startDelay.Name != null) yield return _startDelay;
            if (_startDelayNot.Name != null) yield return _startDelayNot;
            if (_startDelayGt.Name != null) yield return _startDelayGt;
            if (_startDelayLt.Name != null) yield return _startDelayLt;
            if (_startDelayGte.Name != null) yield return _startDelayGte;
            if (_startDelayLte.Name != null) yield return _startDelayLte;
            if (_startDelayIn.Name != null) yield return _startDelayIn;
            if (_startDelayNotIn.Name != null) yield return _startDelayNotIn;
            if (_cliffDelay.Name != null) yield return _cliffDelay;
            if (_cliffDelayNot.Name != null) yield return _cliffDelayNot;
            if (_cliffDelayGt.Name != null) yield return _cliffDelayGt;
            if (_cliffDelayLt.Name != null) yield return _cliffDelayLt;
            if (_cliffDelayGte.Name != null) yield return _cliffDelayGte;
            if (_cliffDelayLte.Name != null) yield return _cliffDelayLte;
            if (_cliffDelayIn.Name != null) yield return _cliffDelayIn;
            if (_cliffDelayNotIn.Name != null) yield return _cliffDelayNotIn;
            if (_finishDelay.Name != null) yield return _finishDelay;
            if (_finishDelayNot.Name != null) yield return _finishDelayNot;
            if (_finishDelayGt.Name != null) yield return _finishDelayGt;
            if (_finishDelayLt.Name != null) yield return _finishDelayLt;
            if (_finishDelayGte.Name != null) yield return _finishDelayGte;
            if (_finishDelayLte.Name != null) yield return _finishDelayLte;
            if (_finishDelayIn.Name != null) yield return _finishDelayIn;
            if (_finishDelayNotIn.Name != null) yield return _finishDelayNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class VaultFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _vaultAddress;
        private InputPropertyInfo _vaultAddressNot;
        private InputPropertyInfo _vaultAddressGt;
        private InputPropertyInfo _vaultAddressLt;
        private InputPropertyInfo _vaultAddressGte;
        private InputPropertyInfo _vaultAddressLte;
        private InputPropertyInfo _vaultAddressIn;
        private InputPropertyInfo _vaultAddressNotIn;
        private InputPropertyInfo _vaultAddressContains;
        private InputPropertyInfo _vaultAddressNotContains;
        private InputPropertyInfo _token;
        private InputPropertyInfo _tokenNot;
        private InputPropertyInfo _tokenGt;
        private InputPropertyInfo _tokenLt;
        private InputPropertyInfo _tokenGte;
        private InputPropertyInfo _tokenLte;
        private InputPropertyInfo _tokenIn;
        private InputPropertyInfo _tokenNotIn;
        private InputPropertyInfo _tokenContains;
        private InputPropertyInfo _tokenNotContains;
        private InputPropertyInfo _balance;
        private InputPropertyInfo _balanceNot;
        private InputPropertyInfo _balanceGt;
        private InputPropertyInfo _balanceLt;
        private InputPropertyInfo _balanceGte;
        private InputPropertyInfo _balanceLte;
        private InputPropertyInfo _balanceIn;
        private InputPropertyInfo _balanceNotIn;
        private InputPropertyInfo _depositStatus;
        private InputPropertyInfo _depositStatusNot;
        private InputPropertyInfo _depositStatusIn;
        private InputPropertyInfo _depositStatusNotIn;
        private InputPropertyInfo _withdrawStatus;
        private InputPropertyInfo _withdrawStatusNot;
        private InputPropertyInfo _withdrawStatusIn;
        private InputPropertyInfo _withdrawStatusNotIn;
        private InputPropertyInfo _royaltyReceiver;
        private InputPropertyInfo _royaltyReceiverNot;
        private InputPropertyInfo _royaltyReceiverGt;
        private InputPropertyInfo _royaltyReceiverLt;
        private InputPropertyInfo _royaltyReceiverGte;
        private InputPropertyInfo _royaltyReceiverLte;
        private InputPropertyInfo _royaltyReceiverIn;
        private InputPropertyInfo _royaltyReceiverNotIn;
        private InputPropertyInfo _royaltyReceiverContains;
        private InputPropertyInfo _royaltyReceiverNotContains;
        private InputPropertyInfo _royaltyFeeNumerator;
        private InputPropertyInfo _royaltyFeeNumeratorNot;
        private InputPropertyInfo _royaltyFeeNumeratorGt;
        private InputPropertyInfo _royaltyFeeNumeratorLt;
        private InputPropertyInfo _royaltyFeeNumeratorGte;
        private InputPropertyInfo _royaltyFeeNumeratorLte;
        private InputPropertyInfo _royaltyFeeNumeratorIn;
        private InputPropertyInfo _royaltyFeeNumeratorNotIn;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddress
        {
            get { return (QueryBuilderParameter<string>)_vaultAddress.Value; }
            set { _vaultAddress = new InputPropertyInfo { Name = "vaultAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressNot
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressNot.Value; }
            set { _vaultAddressNot = new InputPropertyInfo { Name = "vaultAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressGt
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressGt.Value; }
            set { _vaultAddressGt = new InputPropertyInfo { Name = "vaultAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressLt
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressLt.Value; }
            set { _vaultAddressLt = new InputPropertyInfo { Name = "vaultAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressGte
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressGte.Value; }
            set { _vaultAddressGte = new InputPropertyInfo { Name = "vaultAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressLte
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressLte.Value; }
            set { _vaultAddressLte = new InputPropertyInfo { Name = "vaultAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> VaultAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_vaultAddressIn.Value; }
            set { _vaultAddressIn = new InputPropertyInfo { Name = "vaultAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> VaultAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_vaultAddressNotIn.Value; }
            set { _vaultAddressNotIn = new InputPropertyInfo { Name = "vaultAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressContains
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressContains.Value; }
            set { _vaultAddressContains = new InputPropertyInfo { Name = "vaultAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> VaultAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_vaultAddressNotContains.Value; }
            set { _vaultAddressNotContains = new InputPropertyInfo { Name = "vaultAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Token
        {
            get { return (QueryBuilderParameter<string>)_token.Value; }
            set { _token = new InputPropertyInfo { Name = "token", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNot
        {
            get { return (QueryBuilderParameter<string>)_tokenNot.Value; }
            set { _tokenNot = new InputPropertyInfo { Name = "token_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGt
        {
            get { return (QueryBuilderParameter<string>)_tokenGt.Value; }
            set { _tokenGt = new InputPropertyInfo { Name = "token_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLt
        {
            get { return (QueryBuilderParameter<string>)_tokenLt.Value; }
            set { _tokenLt = new InputPropertyInfo { Name = "token_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenGte
        {
            get { return (QueryBuilderParameter<string>)_tokenGte.Value; }
            set { _tokenGte = new InputPropertyInfo { Name = "token_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenLte
        {
            get { return (QueryBuilderParameter<string>)_tokenLte.Value; }
            set { _tokenLte = new InputPropertyInfo { Name = "token_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenIn.Value; }
            set { _tokenIn = new InputPropertyInfo { Name = "token_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenNotIn.Value; }
            set { _tokenNotIn = new InputPropertyInfo { Name = "token_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenContains
        {
            get { return (QueryBuilderParameter<string>)_tokenContains.Value; }
            set { _tokenContains = new InputPropertyInfo { Name = "token_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("token_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenNotContains.Value; }
            set { _tokenNotContains = new InputPropertyInfo { Name = "token_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Balance
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_balance.Value; }
            set { _balance = new InputPropertyInfo { Name = "balance", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BalanceNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_balanceNot.Value; }
            set { _balanceNot = new InputPropertyInfo { Name = "balance_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BalanceGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_balanceGt.Value; }
            set { _balanceGt = new InputPropertyInfo { Name = "balance_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BalanceLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_balanceLt.Value; }
            set { _balanceLt = new InputPropertyInfo { Name = "balance_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BalanceGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_balanceGte.Value; }
            set { _balanceGte = new InputPropertyInfo { Name = "balance_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BalanceLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_balanceLte.Value; }
            set { _balanceLte = new InputPropertyInfo { Name = "balance_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BalanceIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_balanceIn.Value; }
            set { _balanceIn = new InputPropertyInfo { Name = "balance_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("balance_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BalanceNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_balanceNotIn.Value; }
            set { _balanceNotIn = new InputPropertyInfo { Name = "balance_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> DepositStatus
        {
            get { return (QueryBuilderParameter<bool?>)_depositStatus.Value; }
            set { _depositStatus = new InputPropertyInfo { Name = "depositStatus", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("depositStatus_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> DepositStatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_depositStatusNot.Value; }
            set { _depositStatusNot = new InputPropertyInfo { Name = "depositStatus_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("depositStatus_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> DepositStatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_depositStatusIn.Value; }
            set { _depositStatusIn = new InputPropertyInfo { Name = "depositStatus_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("depositStatus_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> DepositStatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_depositStatusNotIn.Value; }
            set { _depositStatusNotIn = new InputPropertyInfo { Name = "depositStatus_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> WithdrawStatus
        {
            get { return (QueryBuilderParameter<bool?>)_withdrawStatus.Value; }
            set { _withdrawStatus = new InputPropertyInfo { Name = "withdrawStatus", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawStatus_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<bool?>))]
        #endif
        public QueryBuilderParameter<bool?> WithdrawStatusNot
        {
            get { return (QueryBuilderParameter<bool?>)_withdrawStatusNot.Value; }
            set { _withdrawStatusNot = new InputPropertyInfo { Name = "withdrawStatus_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawStatus_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> WithdrawStatusIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_withdrawStatusIn.Value; }
            set { _withdrawStatusIn = new InputPropertyInfo { Name = "withdrawStatus_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("withdrawStatus_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<bool>>))]
        #endif
        public QueryBuilderParameter<ICollection<bool>> WithdrawStatusNotIn
        {
            get { return (QueryBuilderParameter<ICollection<bool>>)_withdrawStatusNotIn.Value; }
            set { _withdrawStatusNotIn = new InputPropertyInfo { Name = "withdrawStatus_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiver
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiver.Value; }
            set { _royaltyReceiver = new InputPropertyInfo { Name = "royaltyReceiver", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverNot
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverNot.Value; }
            set { _royaltyReceiverNot = new InputPropertyInfo { Name = "royaltyReceiver_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverGt
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverGt.Value; }
            set { _royaltyReceiverGt = new InputPropertyInfo { Name = "royaltyReceiver_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverLt
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverLt.Value; }
            set { _royaltyReceiverLt = new InputPropertyInfo { Name = "royaltyReceiver_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverGte
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverGte.Value; }
            set { _royaltyReceiverGte = new InputPropertyInfo { Name = "royaltyReceiver_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverLte
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverLte.Value; }
            set { _royaltyReceiverLte = new InputPropertyInfo { Name = "royaltyReceiver_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> RoyaltyReceiverIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_royaltyReceiverIn.Value; }
            set { _royaltyReceiverIn = new InputPropertyInfo { Name = "royaltyReceiver_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> RoyaltyReceiverNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_royaltyReceiverNotIn.Value; }
            set { _royaltyReceiverNotIn = new InputPropertyInfo { Name = "royaltyReceiver_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverContains
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverContains.Value; }
            set { _royaltyReceiverContains = new InputPropertyInfo { Name = "royaltyReceiver_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyReceiver_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> RoyaltyReceiverNotContains
        {
            get { return (QueryBuilderParameter<string>)_royaltyReceiverNotContains.Value; }
            set { _royaltyReceiverNotContains = new InputPropertyInfo { Name = "royaltyReceiver_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RoyaltyFeeNumerator
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_royaltyFeeNumerator.Value; }
            set { _royaltyFeeNumerator = new InputPropertyInfo { Name = "royaltyFeeNumerator", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RoyaltyFeeNumeratorNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_royaltyFeeNumeratorNot.Value; }
            set { _royaltyFeeNumeratorNot = new InputPropertyInfo { Name = "royaltyFeeNumerator_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RoyaltyFeeNumeratorGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_royaltyFeeNumeratorGt.Value; }
            set { _royaltyFeeNumeratorGt = new InputPropertyInfo { Name = "royaltyFeeNumerator_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RoyaltyFeeNumeratorLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_royaltyFeeNumeratorLt.Value; }
            set { _royaltyFeeNumeratorLt = new InputPropertyInfo { Name = "royaltyFeeNumerator_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RoyaltyFeeNumeratorGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_royaltyFeeNumeratorGte.Value; }
            set { _royaltyFeeNumeratorGte = new InputPropertyInfo { Name = "royaltyFeeNumerator_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> RoyaltyFeeNumeratorLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_royaltyFeeNumeratorLte.Value; }
            set { _royaltyFeeNumeratorLte = new InputPropertyInfo { Name = "royaltyFeeNumerator_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> RoyaltyFeeNumeratorIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_royaltyFeeNumeratorIn.Value; }
            set { _royaltyFeeNumeratorIn = new InputPropertyInfo { Name = "royaltyFeeNumerator_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("royaltyFeeNumerator_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> RoyaltyFeeNumeratorNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_royaltyFeeNumeratorNotIn.Value; }
            set { _royaltyFeeNumeratorNotIn = new InputPropertyInfo { Name = "royaltyFeeNumerator_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<VaultFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<VaultFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<VaultFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<VaultFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_vaultAddress.Name != null) yield return _vaultAddress;
            if (_vaultAddressNot.Name != null) yield return _vaultAddressNot;
            if (_vaultAddressGt.Name != null) yield return _vaultAddressGt;
            if (_vaultAddressLt.Name != null) yield return _vaultAddressLt;
            if (_vaultAddressGte.Name != null) yield return _vaultAddressGte;
            if (_vaultAddressLte.Name != null) yield return _vaultAddressLte;
            if (_vaultAddressIn.Name != null) yield return _vaultAddressIn;
            if (_vaultAddressNotIn.Name != null) yield return _vaultAddressNotIn;
            if (_vaultAddressContains.Name != null) yield return _vaultAddressContains;
            if (_vaultAddressNotContains.Name != null) yield return _vaultAddressNotContains;
            if (_token.Name != null) yield return _token;
            if (_tokenNot.Name != null) yield return _tokenNot;
            if (_tokenGt.Name != null) yield return _tokenGt;
            if (_tokenLt.Name != null) yield return _tokenLt;
            if (_tokenGte.Name != null) yield return _tokenGte;
            if (_tokenLte.Name != null) yield return _tokenLte;
            if (_tokenIn.Name != null) yield return _tokenIn;
            if (_tokenNotIn.Name != null) yield return _tokenNotIn;
            if (_tokenContains.Name != null) yield return _tokenContains;
            if (_tokenNotContains.Name != null) yield return _tokenNotContains;
            if (_balance.Name != null) yield return _balance;
            if (_balanceNot.Name != null) yield return _balanceNot;
            if (_balanceGt.Name != null) yield return _balanceGt;
            if (_balanceLt.Name != null) yield return _balanceLt;
            if (_balanceGte.Name != null) yield return _balanceGte;
            if (_balanceLte.Name != null) yield return _balanceLte;
            if (_balanceIn.Name != null) yield return _balanceIn;
            if (_balanceNotIn.Name != null) yield return _balanceNotIn;
            if (_depositStatus.Name != null) yield return _depositStatus;
            if (_depositStatusNot.Name != null) yield return _depositStatusNot;
            if (_depositStatusIn.Name != null) yield return _depositStatusIn;
            if (_depositStatusNotIn.Name != null) yield return _depositStatusNotIn;
            if (_withdrawStatus.Name != null) yield return _withdrawStatus;
            if (_withdrawStatusNot.Name != null) yield return _withdrawStatusNot;
            if (_withdrawStatusIn.Name != null) yield return _withdrawStatusIn;
            if (_withdrawStatusNotIn.Name != null) yield return _withdrawStatusNotIn;
            if (_royaltyReceiver.Name != null) yield return _royaltyReceiver;
            if (_royaltyReceiverNot.Name != null) yield return _royaltyReceiverNot;
            if (_royaltyReceiverGt.Name != null) yield return _royaltyReceiverGt;
            if (_royaltyReceiverLt.Name != null) yield return _royaltyReceiverLt;
            if (_royaltyReceiverGte.Name != null) yield return _royaltyReceiverGte;
            if (_royaltyReceiverLte.Name != null) yield return _royaltyReceiverLte;
            if (_royaltyReceiverIn.Name != null) yield return _royaltyReceiverIn;
            if (_royaltyReceiverNotIn.Name != null) yield return _royaltyReceiverNotIn;
            if (_royaltyReceiverContains.Name != null) yield return _royaltyReceiverContains;
            if (_royaltyReceiverNotContains.Name != null) yield return _royaltyReceiverNotContains;
            if (_royaltyFeeNumerator.Name != null) yield return _royaltyFeeNumerator;
            if (_royaltyFeeNumeratorNot.Name != null) yield return _royaltyFeeNumeratorNot;
            if (_royaltyFeeNumeratorGt.Name != null) yield return _royaltyFeeNumeratorGt;
            if (_royaltyFeeNumeratorLt.Name != null) yield return _royaltyFeeNumeratorLt;
            if (_royaltyFeeNumeratorGte.Name != null) yield return _royaltyFeeNumeratorGte;
            if (_royaltyFeeNumeratorLte.Name != null) yield return _royaltyFeeNumeratorLte;
            if (_royaltyFeeNumeratorIn.Name != null) yield return _royaltyFeeNumeratorIn;
            if (_royaltyFeeNumeratorNotIn.Name != null) yield return _royaltyFeeNumeratorNotIn;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }

    public partial class WithdrawnFilter : IGraphQlInputObject
    {
        private InputPropertyInfo _id;
        private InputPropertyInfo _idNot;
        private InputPropertyInfo _idGt;
        private InputPropertyInfo _idLt;
        private InputPropertyInfo _idGte;
        private InputPropertyInfo _idLte;
        private InputPropertyInfo _idIn;
        private InputPropertyInfo _idNotIn;
        private InputPropertyInfo _idContains;
        private InputPropertyInfo _idNotContains;
        private InputPropertyInfo _vaultId;
        private InputPropertyInfo _vaultIdNot;
        private InputPropertyInfo _vaultIdGt;
        private InputPropertyInfo _vaultIdLt;
        private InputPropertyInfo _vaultIdGte;
        private InputPropertyInfo _vaultIdLte;
        private InputPropertyInfo _vaultIdIn;
        private InputPropertyInfo _vaultIdNotIn;
        private InputPropertyInfo _tokenAddress;
        private InputPropertyInfo _tokenAddressNot;
        private InputPropertyInfo _tokenAddressGt;
        private InputPropertyInfo _tokenAddressLt;
        private InputPropertyInfo _tokenAddressGte;
        private InputPropertyInfo _tokenAddressLte;
        private InputPropertyInfo _tokenAddressIn;
        private InputPropertyInfo _tokenAddressNotIn;
        private InputPropertyInfo _tokenAddressContains;
        private InputPropertyInfo _tokenAddressNotContains;
        private InputPropertyInfo _to;
        private InputPropertyInfo _toNot;
        private InputPropertyInfo _toGt;
        private InputPropertyInfo _toLt;
        private InputPropertyInfo _toGte;
        private InputPropertyInfo _toLte;
        private InputPropertyInfo _toIn;
        private InputPropertyInfo _toNotIn;
        private InputPropertyInfo _toContains;
        private InputPropertyInfo _toNotContains;
        private InputPropertyInfo _amount;
        private InputPropertyInfo _amountNot;
        private InputPropertyInfo _amountGt;
        private InputPropertyInfo _amountLt;
        private InputPropertyInfo _amountGte;
        private InputPropertyInfo _amountLte;
        private InputPropertyInfo _amountIn;
        private InputPropertyInfo _amountNotIn;
        private InputPropertyInfo _blockNumber;
        private InputPropertyInfo _blockNumberNot;
        private InputPropertyInfo _blockNumberGt;
        private InputPropertyInfo _blockNumberLt;
        private InputPropertyInfo _blockNumberGte;
        private InputPropertyInfo _blockNumberLte;
        private InputPropertyInfo _blockNumberIn;
        private InputPropertyInfo _blockNumberNotIn;
        private InputPropertyInfo _blockTimestamp;
        private InputPropertyInfo _blockTimestampNot;
        private InputPropertyInfo _blockTimestampGt;
        private InputPropertyInfo _blockTimestampLt;
        private InputPropertyInfo _blockTimestampGte;
        private InputPropertyInfo _blockTimestampLte;
        private InputPropertyInfo _blockTimestampIn;
        private InputPropertyInfo _blockTimestampNotIn;
        private InputPropertyInfo _transactionHash;
        private InputPropertyInfo _transactionHashNot;
        private InputPropertyInfo _transactionHashGt;
        private InputPropertyInfo _transactionHashLt;
        private InputPropertyInfo _transactionHashGte;
        private InputPropertyInfo _transactionHashLte;
        private InputPropertyInfo _transactionHashIn;
        private InputPropertyInfo _transactionHashNotIn;
        private InputPropertyInfo _transactionHashContains;
        private InputPropertyInfo _transactionHashNotContains;
        private InputPropertyInfo _changeBlock;
        private InputPropertyInfo _and;
        private InputPropertyInfo _or;

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> Id
        {
            get { return (QueryBuilderParameter<string>)_id.Value; }
            set { _id = new InputPropertyInfo { Name = "id", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNot
        {
            get { return (QueryBuilderParameter<string>)_idNot.Value; }
            set { _idNot = new InputPropertyInfo { Name = "id_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGt
        {
            get { return (QueryBuilderParameter<string>)_idGt.Value; }
            set { _idGt = new InputPropertyInfo { Name = "id_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLt
        {
            get { return (QueryBuilderParameter<string>)_idLt.Value; }
            set { _idLt = new InputPropertyInfo { Name = "id_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdGte
        {
            get { return (QueryBuilderParameter<string>)_idGte.Value; }
            set { _idGte = new InputPropertyInfo { Name = "id_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdLte
        {
            get { return (QueryBuilderParameter<string>)_idLte.Value; }
            set { _idLte = new InputPropertyInfo { Name = "id_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idIn.Value; }
            set { _idIn = new InputPropertyInfo { Name = "id_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> IdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_idNotIn.Value; }
            set { _idNotIn = new InputPropertyInfo { Name = "id_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdContains
        {
            get { return (QueryBuilderParameter<string>)_idContains.Value; }
            set { _idContains = new InputPropertyInfo { Name = "id_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("id_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> IdNotContains
        {
            get { return (QueryBuilderParameter<string>)_idNotContains.Value; }
            set { _idNotContains = new InputPropertyInfo { Name = "id_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultId
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultId.Value; }
            set { _vaultId = new InputPropertyInfo { Name = "vaultId", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdNot.Value; }
            set { _vaultIdNot = new InputPropertyInfo { Name = "vaultId_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGt.Value; }
            set { _vaultIdGt = new InputPropertyInfo { Name = "vaultId_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLt.Value; }
            set { _vaultIdLt = new InputPropertyInfo { Name = "vaultId_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdGte.Value; }
            set { _vaultIdGte = new InputPropertyInfo { Name = "vaultId_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> VaultIdLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_vaultIdLte.Value; }
            set { _vaultIdLte = new InputPropertyInfo { Name = "vaultId_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdIn.Value; }
            set { _vaultIdIn = new InputPropertyInfo { Name = "vaultId_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("vaultId_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> VaultIdNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_vaultIdNotIn.Value; }
            set { _vaultIdNotIn = new InputPropertyInfo { Name = "vaultId_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddress
        {
            get { return (QueryBuilderParameter<string>)_tokenAddress.Value; }
            set { _tokenAddress = new InputPropertyInfo { Name = "tokenAddress", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNot
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNot.Value; }
            set { _tokenAddressNot = new InputPropertyInfo { Name = "tokenAddress_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGt.Value; }
            set { _tokenAddressGt = new InputPropertyInfo { Name = "tokenAddress_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLt
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLt.Value; }
            set { _tokenAddressLt = new InputPropertyInfo { Name = "tokenAddress_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressGte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressGte.Value; }
            set { _tokenAddressGte = new InputPropertyInfo { Name = "tokenAddress_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressLte
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressLte.Value; }
            set { _tokenAddressLte = new InputPropertyInfo { Name = "tokenAddress_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressIn.Value; }
            set { _tokenAddressIn = new InputPropertyInfo { Name = "tokenAddress_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TokenAddressNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_tokenAddressNotIn.Value; }
            set { _tokenAddressNotIn = new InputPropertyInfo { Name = "tokenAddress_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressContains.Value; }
            set { _tokenAddressContains = new InputPropertyInfo { Name = "tokenAddress_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("tokenAddress_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TokenAddressNotContains
        {
            get { return (QueryBuilderParameter<string>)_tokenAddressNotContains.Value; }
            set { _tokenAddressNotContains = new InputPropertyInfo { Name = "tokenAddress_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> To
        {
            get { return (QueryBuilderParameter<string>)_to.Value; }
            set { _to = new InputPropertyInfo { Name = "to", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToNot
        {
            get { return (QueryBuilderParameter<string>)_toNot.Value; }
            set { _toNot = new InputPropertyInfo { Name = "to_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToGt
        {
            get { return (QueryBuilderParameter<string>)_toGt.Value; }
            set { _toGt = new InputPropertyInfo { Name = "to_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToLt
        {
            get { return (QueryBuilderParameter<string>)_toLt.Value; }
            set { _toLt = new InputPropertyInfo { Name = "to_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToGte
        {
            get { return (QueryBuilderParameter<string>)_toGte.Value; }
            set { _toGte = new InputPropertyInfo { Name = "to_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToLte
        {
            get { return (QueryBuilderParameter<string>)_toLte.Value; }
            set { _toLte = new InputPropertyInfo { Name = "to_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ToIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_toIn.Value; }
            set { _toIn = new InputPropertyInfo { Name = "to_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> ToNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_toNotIn.Value; }
            set { _toNotIn = new InputPropertyInfo { Name = "to_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToContains
        {
            get { return (QueryBuilderParameter<string>)_toContains.Value; }
            set { _toContains = new InputPropertyInfo { Name = "to_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("to_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> ToNotContains
        {
            get { return (QueryBuilderParameter<string>)_toNotContains.Value; }
            set { _toNotContains = new InputPropertyInfo { Name = "to_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> Amount
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amount.Value; }
            set { _amount = new InputPropertyInfo { Name = "amount", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountNot.Value; }
            set { _amountNot = new InputPropertyInfo { Name = "amount_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGt.Value; }
            set { _amountGt = new InputPropertyInfo { Name = "amount_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLt.Value; }
            set { _amountLt = new InputPropertyInfo { Name = "amount_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountGte.Value; }
            set { _amountGte = new InputPropertyInfo { Name = "amount_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> AmountLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_amountLte.Value; }
            set { _amountLte = new InputPropertyInfo { Name = "amount_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountIn.Value; }
            set { _amountIn = new InputPropertyInfo { Name = "amount_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("amount_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> AmountNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_amountNotIn.Value; }
            set { _amountNotIn = new InputPropertyInfo { Name = "amount_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumber
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumber.Value; }
            set { _blockNumber = new InputPropertyInfo { Name = "blockNumber", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberNot.Value; }
            set { _blockNumberNot = new InputPropertyInfo { Name = "blockNumber_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGt.Value; }
            set { _blockNumberGt = new InputPropertyInfo { Name = "blockNumber_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLt.Value; }
            set { _blockNumberLt = new InputPropertyInfo { Name = "blockNumber_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberGte.Value; }
            set { _blockNumberGte = new InputPropertyInfo { Name = "blockNumber_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockNumberLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockNumberLte.Value; }
            set { _blockNumberLte = new InputPropertyInfo { Name = "blockNumber_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberIn.Value; }
            set { _blockNumberIn = new InputPropertyInfo { Name = "blockNumber_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockNumber_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockNumberNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockNumberNotIn.Value; }
            set { _blockNumberNotIn = new InputPropertyInfo { Name = "blockNumber_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestamp
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestamp.Value; }
            set { _blockTimestamp = new InputPropertyInfo { Name = "blockTimestamp", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampNot
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampNot.Value; }
            set { _blockTimestampNot = new InputPropertyInfo { Name = "blockTimestamp_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGt.Value; }
            set { _blockTimestampGt = new InputPropertyInfo { Name = "blockTimestamp_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLt
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLt.Value; }
            set { _blockTimestampLt = new InputPropertyInfo { Name = "blockTimestamp_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampGte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampGte.Value; }
            set { _blockTimestampGte = new InputPropertyInfo { Name = "blockTimestamp_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<System.Numerics.BigInteger?>))]
        #endif
        public QueryBuilderParameter<System.Numerics.BigInteger?> BlockTimestampLte
        {
            get { return (QueryBuilderParameter<System.Numerics.BigInteger?>)_blockTimestampLte.Value; }
            set { _blockTimestampLte = new InputPropertyInfo { Name = "blockTimestamp_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampIn.Value; }
            set { _blockTimestampIn = new InputPropertyInfo { Name = "blockTimestamp_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("blockTimestamp_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<System.Numerics.BigInteger>>))]
        #endif
        public QueryBuilderParameter<ICollection<System.Numerics.BigInteger>> BlockTimestampNotIn
        {
            get { return (QueryBuilderParameter<ICollection<System.Numerics.BigInteger>>)_blockTimestampNotIn.Value; }
            set { _blockTimestampNotIn = new InputPropertyInfo { Name = "blockTimestamp_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHash
        {
            get { return (QueryBuilderParameter<string>)_transactionHash.Value; }
            set { _transactionHash = new InputPropertyInfo { Name = "transactionHash", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNot
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNot.Value; }
            set { _transactionHashNot = new InputPropertyInfo { Name = "transactionHash_not", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGt.Value; }
            set { _transactionHashGt = new InputPropertyInfo { Name = "transactionHash_gt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lt")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLt
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLt.Value; }
            set { _transactionHashLt = new InputPropertyInfo { Name = "transactionHash_lt", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_gte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashGte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashGte.Value; }
            set { _transactionHashGte = new InputPropertyInfo { Name = "transactionHash_gte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_lte")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashLte
        {
            get { return (QueryBuilderParameter<string>)_transactionHashLte.Value; }
            set { _transactionHashLte = new InputPropertyInfo { Name = "transactionHash_lte", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashIn.Value; }
            set { _transactionHashIn = new InputPropertyInfo { Name = "transactionHash_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_in")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<string>>))]
        #endif
        public QueryBuilderParameter<ICollection<string>> TransactionHashNotIn
        {
            get { return (QueryBuilderParameter<ICollection<string>>)_transactionHashNotIn.Value; }
            set { _transactionHashNotIn = new InputPropertyInfo { Name = "transactionHash_not_in", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashContains.Value; }
            set { _transactionHashContains = new InputPropertyInfo { Name = "transactionHash_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("transactionHash_not_contains")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<string>))]
        #endif
        public QueryBuilderParameter<string> TransactionHashNotContains
        {
            get { return (QueryBuilderParameter<string>)_transactionHashNotContains.Value; }
            set { _transactionHashNotContains = new InputPropertyInfo { Name = "transactionHash_not_contains", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_change_block")]
        [JsonConverter(typeof(QueryBuilderParameterConverter<BlockChangedFilter>))]
        #endif
        public QueryBuilderParameter<BlockChangedFilter> ChangeBlock
        {
            get { return (QueryBuilderParameter<BlockChangedFilter>)_changeBlock.Value; }
            set { _changeBlock = new InputPropertyInfo { Name = "_change_block", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<WithdrawnFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<WithdrawnFilter>> And
        {
            get { return (QueryBuilderParameter<ICollection<WithdrawnFilter>>)_and.Value; }
            set { _and = new InputPropertyInfo { Name = "and", Value = value }; }
        }

        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonConverter(typeof(QueryBuilderParameterConverter<ICollection<WithdrawnFilter>>))]
        #endif
        public QueryBuilderParameter<ICollection<WithdrawnFilter>> Or
        {
            get { return (QueryBuilderParameter<ICollection<WithdrawnFilter>>)_or.Value; }
            set { _or = new InputPropertyInfo { Name = "or", Value = value }; }
        }

        IEnumerable<InputPropertyInfo> IGraphQlInputObject.GetPropertyValues()
        {
            if (_id.Name != null) yield return _id;
            if (_idNot.Name != null) yield return _idNot;
            if (_idGt.Name != null) yield return _idGt;
            if (_idLt.Name != null) yield return _idLt;
            if (_idGte.Name != null) yield return _idGte;
            if (_idLte.Name != null) yield return _idLte;
            if (_idIn.Name != null) yield return _idIn;
            if (_idNotIn.Name != null) yield return _idNotIn;
            if (_idContains.Name != null) yield return _idContains;
            if (_idNotContains.Name != null) yield return _idNotContains;
            if (_vaultId.Name != null) yield return _vaultId;
            if (_vaultIdNot.Name != null) yield return _vaultIdNot;
            if (_vaultIdGt.Name != null) yield return _vaultIdGt;
            if (_vaultIdLt.Name != null) yield return _vaultIdLt;
            if (_vaultIdGte.Name != null) yield return _vaultIdGte;
            if (_vaultIdLte.Name != null) yield return _vaultIdLte;
            if (_vaultIdIn.Name != null) yield return _vaultIdIn;
            if (_vaultIdNotIn.Name != null) yield return _vaultIdNotIn;
            if (_tokenAddress.Name != null) yield return _tokenAddress;
            if (_tokenAddressNot.Name != null) yield return _tokenAddressNot;
            if (_tokenAddressGt.Name != null) yield return _tokenAddressGt;
            if (_tokenAddressLt.Name != null) yield return _tokenAddressLt;
            if (_tokenAddressGte.Name != null) yield return _tokenAddressGte;
            if (_tokenAddressLte.Name != null) yield return _tokenAddressLte;
            if (_tokenAddressIn.Name != null) yield return _tokenAddressIn;
            if (_tokenAddressNotIn.Name != null) yield return _tokenAddressNotIn;
            if (_tokenAddressContains.Name != null) yield return _tokenAddressContains;
            if (_tokenAddressNotContains.Name != null) yield return _tokenAddressNotContains;
            if (_to.Name != null) yield return _to;
            if (_toNot.Name != null) yield return _toNot;
            if (_toGt.Name != null) yield return _toGt;
            if (_toLt.Name != null) yield return _toLt;
            if (_toGte.Name != null) yield return _toGte;
            if (_toLte.Name != null) yield return _toLte;
            if (_toIn.Name != null) yield return _toIn;
            if (_toNotIn.Name != null) yield return _toNotIn;
            if (_toContains.Name != null) yield return _toContains;
            if (_toNotContains.Name != null) yield return _toNotContains;
            if (_amount.Name != null) yield return _amount;
            if (_amountNot.Name != null) yield return _amountNot;
            if (_amountGt.Name != null) yield return _amountGt;
            if (_amountLt.Name != null) yield return _amountLt;
            if (_amountGte.Name != null) yield return _amountGte;
            if (_amountLte.Name != null) yield return _amountLte;
            if (_amountIn.Name != null) yield return _amountIn;
            if (_amountNotIn.Name != null) yield return _amountNotIn;
            if (_blockNumber.Name != null) yield return _blockNumber;
            if (_blockNumberNot.Name != null) yield return _blockNumberNot;
            if (_blockNumberGt.Name != null) yield return _blockNumberGt;
            if (_blockNumberLt.Name != null) yield return _blockNumberLt;
            if (_blockNumberGte.Name != null) yield return _blockNumberGte;
            if (_blockNumberLte.Name != null) yield return _blockNumberLte;
            if (_blockNumberIn.Name != null) yield return _blockNumberIn;
            if (_blockNumberNotIn.Name != null) yield return _blockNumberNotIn;
            if (_blockTimestamp.Name != null) yield return _blockTimestamp;
            if (_blockTimestampNot.Name != null) yield return _blockTimestampNot;
            if (_blockTimestampGt.Name != null) yield return _blockTimestampGt;
            if (_blockTimestampLt.Name != null) yield return _blockTimestampLt;
            if (_blockTimestampGte.Name != null) yield return _blockTimestampGte;
            if (_blockTimestampLte.Name != null) yield return _blockTimestampLte;
            if (_blockTimestampIn.Name != null) yield return _blockTimestampIn;
            if (_blockTimestampNotIn.Name != null) yield return _blockTimestampNotIn;
            if (_transactionHash.Name != null) yield return _transactionHash;
            if (_transactionHashNot.Name != null) yield return _transactionHashNot;
            if (_transactionHashGt.Name != null) yield return _transactionHashGt;
            if (_transactionHashLt.Name != null) yield return _transactionHashLt;
            if (_transactionHashGte.Name != null) yield return _transactionHashGte;
            if (_transactionHashLte.Name != null) yield return _transactionHashLte;
            if (_transactionHashIn.Name != null) yield return _transactionHashIn;
            if (_transactionHashNotIn.Name != null) yield return _transactionHashNotIn;
            if (_transactionHashContains.Name != null) yield return _transactionHashContains;
            if (_transactionHashNotContains.Name != null) yield return _transactionHashNotContains;
            if (_changeBlock.Name != null) yield return _changeBlock;
            if (_and.Name != null) yield return _and;
            if (_or.Name != null) yield return _or;
        }
    }
    #endregion

    #region data classes
    public partial class AllowedContract
    {
        public string Id { get; set; }
        public string ContractAddress { get; set; }
        public bool? Status { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
    }

    public partial class Approval
    {
        public string Id { get; set; }
        public string Owner { get; set; }
        public string Approved { get; set; }
        public System.Numerics.BigInteger? TokenId { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class ApprovalForAll
    {
        public string Id { get; set; }
        public string Owner { get; set; }
        public string Operator { get; set; }
        public bool? Approved { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class BaseUriChanged
    {
        public string Id { get; set; }
        public string OldBaseUri { get; set; }
        public string NewBaseUri { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class BatchMetadataUpdate
    {
        public string Id { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_fromTokenId")]
        #endif
        public System.Numerics.BigInteger? FromTokenId { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_toTokenId")]
        #endif
        public System.Numerics.BigInteger? ToTokenId { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class CollateralProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class ContractApproved
    {
        public string Id { get; set; }
        public string ContractAddress { get; set; }
        public bool? Status { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DealProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DelayVaultOwnershipTransferred
    {
        public string Id { get; set; }
        public string PreviousOwner { get; set; }
        public string NewOwner { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DelayVaultPaused
    {
        public string Id { get; set; }
        public string Account { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DelayVaultProviderVaultValueChanged
    {
        public string Id { get; set; }
        public string Token { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DelayVaultTransferIn
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public string From { get; set; }
        public string Token { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DelayVaultTransferOut
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public string To { get; set; }
        public string Token { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DelayVaultUnpaused
    {
        public string Id { get; set; }
        public string Account { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class Deposited
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public string TokenAddress { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DispenserProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DispenserProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DispenserProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class DispenserTokenReserve
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public System.Numerics.BigInteger? TotalAmountTaken { get; set; }
        public System.Numerics.BigInteger? LeftAmount { get; set; }
    }

    public partial class Eip712DomainChanged
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class FirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class FirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class GovernorUpdated
    {
        public string Id { get; set; }
        public string OldGovernor { get; set; }
        public string NewGovernor { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class InvestNewPoolCreated
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? PoolAmount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class InvestProviderEip712DomainChanged
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class InvestProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class InvestProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class InvestProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class Invested
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string User { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? NewNonce { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class LockDealNftOwnershipTransferred
    {
        public string Id { get; set; }
        public string PreviousOwner { get; set; }
        public string NewOwner { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class LockDealProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class LockDealProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class LockDealProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class MetadataUpdate
    {
        public string Id { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_tokenId")]
        #endif
        public System.Numerics.BigInteger? TokenId { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class NewPoolCreated
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string Token { get; set; }
        public System.Numerics.BigInteger? FinishTime { get; set; }
        public System.Numerics.BigInteger? StartAmount { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class NewVaultCreated
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public string TokenAddress { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldDealProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldDealProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldDealProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldLockDealProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldLockDealProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldLockDealProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldTimedDealProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldTimedDealProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OldTimedDealProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class OwnershipTransferred
    {
        public string Id { get; set; }
        public string PreviousOwner { get; set; }
        public string NewOwner { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class PoolCreated
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string Provider { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class PoolData
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string PreviousOwner { get; set; }
        public string Owner { get; set; }
        public string Provider { get; set; }
        public string ProviderName { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public string TokenAddress { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
    }

    public partial class PoolSplit
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? NewPoolId { get; set; }
        public string NewOwner { get; set; }
        public System.Numerics.BigInteger? SplitLeftAmount { get; set; }
        public System.Numerics.BigInteger? NewSplitLeftAmount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class PoolxLockedBalance
    {
        public string Id { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? DelayVaultAmount { get; set; }
        public System.Numerics.BigInteger? DelayVaultProviderAmount { get; set; }
        public System.Numerics.BigInteger? TotalAmount { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
    }

    public partial class PoolxUnlocks
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? CreatedAt { get; set; }
        public System.Numerics.BigInteger? UnlocksAt { get; set; }
    }

    public partial class Query
    {
        public GovernorUpdated GovernorUpdated { get; set; }
        public ICollection<GovernorUpdated> GovernorUpdateds { get; set; }
        public DelayVaultOwnershipTransferred DelayVaultOwnershipTransferred { get; set; }
        public ICollection<DelayVaultOwnershipTransferred> DelayVaultOwnershipTransferreds { get; set; }
        public DelayVaultPaused DelayVaultPaused { get; set; }
        public ICollection<DelayVaultPaused> DelayVaultPauseds { get; set; }
        public RedeemedTokens RedeemedTokens { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("redeemedTokens_collection")]
        #endif
        public ICollection<RedeemedTokens> RedeemedTokensCollection { get; set; }
        public TokenRedemptionApproval TokenRedemptionApproval { get; set; }
        public ICollection<TokenRedemptionApproval> TokenRedemptionApprovals { get; set; }
        public TokenStatusFilter TokenStatusFilter { get; set; }
        public ICollection<TokenStatusFilter> TokenStatusFilters { get; set; }
        public DelayVaultTransferIn DelayVaultTransferIn { get; set; }
        public ICollection<DelayVaultTransferIn> DelayVaultTransferIns { get; set; }
        public DelayVaultTransferOut DelayVaultTransferOut { get; set; }
        public ICollection<DelayVaultTransferOut> DelayVaultTransferOuts { get; set; }
        public DelayVaultUnpaused DelayVaultUnpaused { get; set; }
        public ICollection<DelayVaultUnpaused> DelayVaultUnpauseds { get; set; }
        public UpdatedMaxDelay UpdatedMaxDelay { get; set; }
        public ICollection<UpdatedMaxDelay> UpdatedMaxDelays { get; set; }
        public UpdatedMinDelays UpdatedMinDelays { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("updatedMinDelays_collection")]
        #endif
        public ICollection<UpdatedMinDelays> UpdatedMinDelaysCollection { get; set; }
        public VaultValueChanged VaultValueChanged { get; set; }
        public ICollection<VaultValueChanged> VaultValueChangeds { get; set; }
        public UpdateParams UpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("updateParams_collection")]
        #endif
        public ICollection<UpdateParams> UpdateParamsCollection { get; set; }
        public DelayVaultProviderVaultValueChanged DelayVaultProviderVaultValueChanged { get; set; }
        public ICollection<DelayVaultProviderVaultValueChanged> DelayVaultProviderVaultValueChangeds { get; set; }
        public NewPoolCreated NewPoolCreated { get; set; }
        public ICollection<NewPoolCreated> NewPoolCreateds { get; set; }
        public Deposited Deposited { get; set; }
        public ICollection<Deposited> Depositeds { get; set; }
        public NewVaultCreated NewVaultCreated { get; set; }
        public ICollection<NewVaultCreated> NewVaultCreateds { get; set; }
        public OwnershipTransferred OwnershipTransferred { get; set; }
        public ICollection<OwnershipTransferred> OwnershipTransferreds { get; set; }
        public VaultRoyaltySet VaultRoyaltySet { get; set; }
        public ICollection<VaultRoyaltySet> VaultRoyaltySets { get; set; }
        public VaultStatusUpdate VaultStatusUpdate { get; set; }
        public ICollection<VaultStatusUpdate> VaultStatusUpdates { get; set; }
        public Withdrawn Withdrawn { get; set; }
        public ICollection<Withdrawn> Withdrawns { get; set; }
        public Approval Approval { get; set; }
        public ICollection<Approval> Approvals { get; set; }
        public ApprovalForAll ApprovalForAll { get; set; }
        public ICollection<ApprovalForAll> ApprovalForAlls { get; set; }
        public BaseUriChanged BaseUriChanged { get; set; }
        public ICollection<BaseUriChanged> BaseUriChangeds { get; set; }
        public BatchMetadataUpdate BatchMetadataUpdate { get; set; }
        public ICollection<BatchMetadataUpdate> BatchMetadataUpdates { get; set; }
        public ContractApproved ContractApproved { get; set; }
        public ICollection<ContractApproved> ContractApproveds { get; set; }
        public MetadataUpdate MetadataUpdate { get; set; }
        public ICollection<MetadataUpdate> MetadataUpdates { get; set; }
        public LockDealNftOwnershipTransferred LockDealNftOwnershipTransferred { get; set; }
        public ICollection<LockDealNftOwnershipTransferred> LockDealNftOwnershipTransferreds { get; set; }
        public PoolSplit PoolSplit { get; set; }
        public ICollection<PoolSplit> PoolSplits { get; set; }
        public TokenWithdrawn TokenWithdrawn { get; set; }
        public ICollection<TokenWithdrawn> TokenWithdrawns { get; set; }
        public Transfer Transfer { get; set; }
        public ICollection<Transfer> Transfers { get; set; }
        public FirewallAdminUpdated FirewallAdminUpdated { get; set; }
        public ICollection<FirewallAdminUpdated> FirewallAdminUpdateds { get; set; }
        public FirewallUpdated FirewallUpdated { get; set; }
        public ICollection<FirewallUpdated> FirewallUpdateds { get; set; }
        public DealProviderUpdateParams DealProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("dealProviderUpdateParams_collection")]
        #endif
        public ICollection<DealProviderUpdateParams> DealProviderUpdateParamsCollection { get; set; }
        public LockDealProviderFirewallAdminUpdated LockDealProviderFirewallAdminUpdated { get; set; }
        public ICollection<LockDealProviderFirewallAdminUpdated> LockDealProviderFirewallAdminUpdateds { get; set; }
        public LockDealProviderFirewallUpdated LockDealProviderFirewallUpdated { get; set; }
        public ICollection<LockDealProviderFirewallUpdated> LockDealProviderFirewallUpdateds { get; set; }
        public LockDealProviderUpdateParams LockDealProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("lockDealProviderUpdateParams_collection")]
        #endif
        public ICollection<LockDealProviderUpdateParams> LockDealProviderUpdateParamsCollection { get; set; }
        public TimedDealProviderFirewallAdminUpdated TimedDealProviderFirewallAdminUpdated { get; set; }
        public ICollection<TimedDealProviderFirewallAdminUpdated> TimedDealProviderFirewallAdminUpdateds { get; set; }
        public TimedDealProviderFirewallUpdated TimedDealProviderFirewallUpdated { get; set; }
        public ICollection<TimedDealProviderFirewallUpdated> TimedDealProviderFirewallUpdateds { get; set; }
        public TimedDealProviderUpdateParams TimedDealProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("timedDealProviderUpdateParams_collection")]
        #endif
        public ICollection<TimedDealProviderUpdateParams> TimedDealProviderUpdateParamsCollection { get; set; }
        public Eip712DomainChanged Eip712DomainChanged { get; set; }
        public ICollection<Eip712DomainChanged> Eip712DomainChangeds { get; set; }
        public DispenserProviderFirewallAdminUpdated DispenserProviderFirewallAdminUpdated { get; set; }
        public ICollection<DispenserProviderFirewallAdminUpdated> DispenserProviderFirewallAdminUpdateds { get; set; }
        public DispenserProviderFirewallUpdated DispenserProviderFirewallUpdated { get; set; }
        public ICollection<DispenserProviderFirewallUpdated> DispenserProviderFirewallUpdateds { get; set; }
        public PoolCreated PoolCreated { get; set; }
        public ICollection<PoolCreated> PoolCreateds { get; set; }
        public TokensDispensed TokensDispensed { get; set; }
        public ICollection<TokensDispensed> TokensDispenseds { get; set; }
        public DispenserProviderUpdateParams DispenserProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("dispenserProviderUpdateParams_collection")]
        #endif
        public ICollection<DispenserProviderUpdateParams> DispenserProviderUpdateParamsCollection { get; set; }
        public Vault Vault { get; set; }
        public ICollection<Vault> Vaults { get; set; }
        public AllowedContract AllowedContract { get; set; }
        public ICollection<AllowedContract> AllowedContracts { get; set; }
        public PoolxLockedBalance PoolxLockedBalance { get; set; }
        public ICollection<PoolxLockedBalance> PoolxLockedBalances { get; set; }
        public PoolxUnlocks PoolxUnlocks { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("poolxUnlocks_collection")]
        #endif
        public ICollection<PoolxUnlocks> PoolxUnlocksCollection { get; set; }
        public TotalUnlocksAmountData TotalUnlocksAmount { get; set; }
        public ICollection<TotalUnlocksAmountData> TotalUnlocksAmounts { get; set; }
        public PoolData PoolData { get; set; }
        public ICollection<PoolData> PoolDatas { get; set; }
        public OldDealProviderFirewallAdminUpdated OldDealProviderFirewallAdminUpdated { get; set; }
        public ICollection<OldDealProviderFirewallAdminUpdated> OldDealProviderFirewallAdminUpdateds { get; set; }
        public OldDealProviderFirewallUpdated OldDealProviderFirewallUpdated { get; set; }
        public ICollection<OldDealProviderFirewallUpdated> OldDealProviderFirewallUpdateds { get; set; }
        public OldDealProviderUpdateParams OldDealProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldDealProviderUpdateParams_collection")]
        #endif
        public ICollection<OldDealProviderUpdateParams> OldDealProviderUpdateParamsCollection { get; set; }
        public OldLockDealProviderFirewallAdminUpdated OldLockDealProviderFirewallAdminUpdated { get; set; }
        public ICollection<OldLockDealProviderFirewallAdminUpdated> OldLockDealProviderFirewallAdminUpdateds { get; set; }
        public OldLockDealProviderFirewallUpdated OldLockDealProviderFirewallUpdated { get; set; }
        public ICollection<OldLockDealProviderFirewallUpdated> OldLockDealProviderFirewallUpdateds { get; set; }
        public OldLockDealProviderUpdateParams OldLockDealProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldLockDealProviderUpdateParams_collection")]
        #endif
        public ICollection<OldLockDealProviderUpdateParams> OldLockDealProviderUpdateParamsCollection { get; set; }
        public OldTimedDealProviderFirewallAdminUpdated OldTimedDealProviderFirewallAdminUpdated { get; set; }
        public ICollection<OldTimedDealProviderFirewallAdminUpdated> OldTimedDealProviderFirewallAdminUpdateds { get; set; }
        public OldTimedDealProviderFirewallUpdated OldTimedDealProviderFirewallUpdated { get; set; }
        public ICollection<OldTimedDealProviderFirewallUpdated> OldTimedDealProviderFirewallUpdateds { get; set; }
        public OldTimedDealProviderUpdateParams OldTimedDealProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("oldTimedDealProviderUpdateParams_collection")]
        #endif
        public ICollection<OldTimedDealProviderUpdateParams> OldTimedDealProviderUpdateParamsCollection { get; set; }
        public CollateralProviderUpdateParams CollateralProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("collateralProviderUpdateParams_collection")]
        #endif
        public ICollection<CollateralProviderUpdateParams> CollateralProviderUpdateParamsCollection { get; set; }
        public RefundProviderUpdateParams RefundProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("refundProviderUpdateParams_collection")]
        #endif
        public ICollection<RefundProviderUpdateParams> RefundProviderUpdateParamsCollection { get; set; }
        public DispenserTokenReserve DispenserTokenReserve { get; set; }
        public ICollection<DispenserTokenReserve> DispenserTokenReserves { get; set; }
        public InvestProviderEip712DomainChanged InvestProviderEip712DomainChanged { get; set; }
        public ICollection<InvestProviderEip712DomainChanged> InvestProviderEip712DomainChangeds { get; set; }
        public InvestProviderFirewallAdminUpdated InvestProviderFirewallAdminUpdated { get; set; }
        public ICollection<InvestProviderFirewallAdminUpdated> InvestProviderFirewallAdminUpdateds { get; set; }
        public InvestProviderFirewallUpdated InvestProviderFirewallUpdated { get; set; }
        public ICollection<InvestProviderFirewallUpdated> InvestProviderFirewallUpdateds { get; set; }
        public Invested Invested { get; set; }
        public ICollection<Invested> Investeds { get; set; }
        public InvestNewPoolCreated InvestNewPoolCreated { get; set; }
        public ICollection<InvestNewPoolCreated> InvestNewPoolCreateds { get; set; }
        public InvestProviderUpdateParams InvestProviderUpdateParams { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("investProviderUpdateParams_collection")]
        #endif
        public ICollection<InvestProviderUpdateParams> InvestProviderUpdateParamsCollection { get; set; }
        public TotalUserInvested TotalUserInvested { get; set; }
        public ICollection<TotalUserInvested> TotalUserInvesteds { get; set; }
        public TotalInvestedData TotalInvested { get; set; }
        public ICollection<TotalInvestedData> TotalInvesteds { get; set; }
        #if !GRAPHQL_GENERATOR_DISABLE_NEWTONSOFT_JSON
        [JsonProperty("_meta")]
        #endif
        public Meta Meta { get; set; }
    }

    public partial class RedeemedTokens
    {
        public string Id { get; set; }
        public string Token { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? RemaningAmount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class RefundProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TimedDealProviderFirewallAdminUpdated
    {
        public string Id { get; set; }
        public string NewAdmin { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TimedDealProviderFirewallUpdated
    {
        public string Id { get; set; }
        public string NewFirewall { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TimedDealProviderUpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TokenRedemptionApproval
    {
        public string Id { get; set; }
        public string Token { get; set; }
        public string User { get; set; }
        public bool? Status { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TokenStatusFilter
    {
        public string Id { get; set; }
        public string Token { get; set; }
        public bool? Status { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TokenWithdrawn
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? WithdrawnAmount { get; set; }
        public System.Numerics.BigInteger? LeftAmount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TokensDispensed
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string User { get; set; }
        public System.Numerics.BigInteger? AmountTaken { get; set; }
        public System.Numerics.BigInteger? LeftAmount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class TotalInvestedData
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public System.Numerics.BigInteger? PoolAmount { get; set; }
        public System.Numerics.BigInteger? TotalInvested { get; set; }
        public System.Numerics.BigInteger? LeftAmount { get; set; }
    }

    public partial class TotalUnlocksAmountData
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? TotalUnlocksAmount { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
    }

    public partial class TotalUserInvested
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public string User { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
    }

    public partial class Transfer
    {
        public string Id { get; set; }
        public string From { get; set; }
        public string To { get; set; }
        public System.Numerics.BigInteger? TokenId { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class UpdateParams
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? PoolId { get; set; }
        public ICollection<System.Numerics.BigInteger> Params { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class UpdatedMaxDelay
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? OldDelay { get; set; }
        public System.Numerics.BigInteger? NewDelay { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class UpdatedMinDelays
    {
        public string Id { get; set; }
        public string Token { get; set; }
        public ICollection<System.Numerics.BigInteger> Amounts { get; set; }
        public ICollection<System.Numerics.BigInteger> StartDelays { get; set; }
        public ICollection<System.Numerics.BigInteger> CliffDelays { get; set; }
        public ICollection<System.Numerics.BigInteger> FinishDelays { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class Vault
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public string VaultAddress { get; set; }
        public string Token { get; set; }
        public System.Numerics.BigInteger? Balance { get; set; }
        public bool? DepositStatus { get; set; }
        public bool? WithdrawStatus { get; set; }
        public string RoyaltyReceiver { get; set; }
        public System.Numerics.BigInteger? RoyaltyFeeNumerator { get; set; }
    }

    public partial class VaultRoyaltySet
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public string TokenAddress { get; set; }
        public string Receiver { get; set; }
        public System.Numerics.BigInteger? FeeNumerator { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class VaultStatusUpdate
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public bool? DepositStatus { get; set; }
        public bool? WithdrawStatus { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class VaultValueChanged
    {
        public string Id { get; set; }
        public string Token { get; set; }
        public string Owner { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? StartDelay { get; set; }
        public System.Numerics.BigInteger? CliffDelay { get; set; }
        public System.Numerics.BigInteger? FinishDelay { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class Withdrawn
    {
        public string Id { get; set; }
        public System.Numerics.BigInteger? VaultId { get; set; }
        public string TokenAddress { get; set; }
        public string To { get; set; }
        public System.Numerics.BigInteger? Amount { get; set; }
        public System.Numerics.BigInteger? BlockNumber { get; set; }
        public System.Numerics.BigInteger? BlockTimestamp { get; set; }
        public string TransactionHash { get; set; }
    }

    public partial class Block
    {
        public string Hash { get; set; }
        public int? Number { get; set; }
        public int? Timestamp { get; set; }
        public string ParentHash { get; set; }
    }

    public partial class Meta
    {
        public Block Block { get; set; }
        public string Deployment { get; set; }
        public bool? HasIndexingErrors { get; set; }
    }
    #endregion
}
